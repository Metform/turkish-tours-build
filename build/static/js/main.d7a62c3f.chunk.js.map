{"version":3,"sources":["context/auth-context.js","components/Navigation/MainNavigation.js","shared/Notify/Notify.js","pages/auth/Auth.js","shared/Backdrop/Backdrop.js","shared/Spinner/Spinner.js","shared/Geo/SearchBar/SearchBar.js","shared/Geo/Geo.js","components/Modal/MapModal/MapModal.js","components/Modal/MainModal/Modal.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","components/Events/EventForm/EventForm.js","shared/Slider/Slider.js","shared/FeedBack/FeedBack.js","components/Events/EventView/EventView.js","pages/events/Events.js","components/Bookings/BookingsList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","shared/countriesList.js","components/Bookings/FormUserDetails/PersonalDetails/PersonalDetails.js","components/Bookings/BookingsSideBar/BookingsSideBar.js","components/Bookings/FormUserDetails/ConfirmInfo/ConfirmInfo.js","components/Bookings/BookingsSideBar/PayMethodsInfo/PayMethodsInfo.js","components/Payment/StoreCheckout/CardSection.js","components/Payment/StoreCheckout/CheckoutForm.js","components/Payment/StoreCheckout/StoreCheckout.js","components/Bookings/BookingsHistory/BookingHistoryItem/BookingHistoryItem.js","components/Bookings/BookingsHistory/BookingsHistory.js","pages/bookings/Bookings.js","App.js","index.js","shared/assets/initPointIcon.svg","shared/assets/pointIcon.svg","shared/assets/tour_item_img/t2.jpg","shared/assets/tour_item_img/t1.jpg","shared/assets/tour_item_img/t3.jpg"],"names":["React","createContext","token","undefined","userId","isAdmin","hostname","stripe_pub_key","login","logout","console","log","mainNavigation","props","react_default","a","createElement","auth_context","Consumer","context","className","NavLink_default","to","Fragment","onClick","Notify","state","isHide","timer","_this2","this","duration","setTimeout","setState","onClose","clearTimeout","classNames","notify__container","warning","success","error","text","Component","regex","email","RegExp","password","AuthPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isLogin","isPendingConfirmation","isConfirmed","isSuccess","popupMessage","switchModeHandler","resetInvalidFields","pervState","submitHandler","event","preventDefault","passwordEl","current","value","phone_number","phoneNumberEl","trim","length","requestBody","query","variables","LoginInput","phoneNumber","SignupInput","name","emailEl","SignupConfirmInput","confirmationCode","confirmationCodeEl","fetch","concat","method","body","JSON","stringify","headers","Accept","Content-Type","Cookie","document","cookie","credentials","then","res","status","Error","json","resParse","idToken","path","errors","view","lensPath","data","setInvalidFields","signup","signupConfirm","catch","err","errorMessage","arguments","getElementById","remove","p","innerText","style","color","id","parentElement","classList","add","insertBefore","nextSibling","emailInputHandle","e","target","toggle","test","createRef","type","placeholder","ref","required","onSubmit","pattern","title","onChange","viewBox","d","points","transform","href","src","alt","autoComplete","renderConfirmationForm","shared_Notify_Notify","renderLoginForm","renderSignupForm","contextType","authContext","Backdrop","Spinner","geocodeService","GeocodeService","initPointerIcon","L","Icon","iconUrl","require","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","shadowSize","shadowAnchor","SearchBar","latlng","fullLocationInfo","location","bounds","Promise","rej","reverse","run","result","getUserHotelLocation","label","coords","leaflet","map","on","onShowLocation","bind","GeoSearchControl","provider","EsriProvider","maxMarkers","marker","icon","draggable","popupFormat","_ref","autoClose","keepResult","showPopup","showMarker","MapControl","Search","withLeaflet","pointerIcon","Geo","abortController","AbortController","formSubmitted","prevState","updatedGeos","toConsumableArray","geos","push","objectSpread","userMessage","onFormSubmit","handleClick","enableSearch","lat","lng","onMarkerClearAll","onMarkerUpdate","prev","geoItem","selectedMarker","markerNameRef","message","markerMessageRef","onMarkerRemove","filter","onMarkerClick","_e$latlng","find","geo","haveUsersLocation","zoom","handleInputChange","assertThisInitialized","mapRef","signal","navigator","geolocation","getCurrentPosition","position","latitude","longitude","loc","abort","defineProperty","_this3","latLngList","geosFromEvent","Array","isArray","Map","center","height","heigh","scrollWheelZoom","window","innerWidth","TileLayer","attribution","url","editable","idx","Marker","key","Date","now","Popup","Polyline","positions","htmlFor","geo-spinner","hide-map","shared_Spinner_Spinner","MapModal","overflowY","paddingRight","children","Modal","isOpen","showMap","dialogRef","addEventListener","removeEventListener","price","date","toLocaleDateString","availableSeats","maxSeats","shared_Backdrop_Backdrop","Modal_MapModal_MapModal","Geo_Geo_Geo","canCancel","onCancel","canConfirm","onConfirm","confirmText","Pictures","picture3","picture","picture2","EventItem","mapIsOpen","eventId","count","userInfo","onDetail","onDelete","options","option","subtitle","eventList","events","EventList_EventItem_EventItem","_id","onViewDetail","EventForm","maxLength","titleElRef","priceElRef","maxSeatsElRef","multiple","size","optionsElRef","rows","subtitleElRef","inclusionsElRef","exclusionsElRef","goodToKnowElRef","dateElRef","descriptionElRef","Slider","onUpload","upload","onError","withError","PREFIX_URL","pending","imageBucket","file","images","axios","get","params","items","thumbnail","original","embedUrl","description","i","_imageGallery","getCurrentIndex","selectedImage","_context","t0","reader","FileReader","files","readAsDataURL","formData","FormData","append","post","Content-type","_context3","response","_this4","_this$state","margin","image_gallery_default","lazyLoad","fa fa-file-export","fa fa-file-upload","FeedBack","hasSent","sendEmail","nameElRef","emailElRef","age","ageElRef","country","countryElRef","messageElRef","subject","subjectElRef","gender","genderElRef","notifyMsg","summaryList","EventView","feedBack","cb","keyCode","onSendForm","Slider_Slider_Slider","split","reduce","acc","el","extraInfo","elIdx","sort","match","item","itmIdx","clippedItm","slice","FeedBack_FeedBack_FeedBack","EventsPage","creating","isLoading","selectedEvent","isActive","startCreateEventHandler","onGeoFormSubmit","extraInfoJoin","fieldSet","elements","checked","join","formChangeHandler","selectedOptions","modalConfirmHandler","optionsList","lenght","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","bookEventHandler","bookId","BookItemArgs","bookingId","unitPrice","resetFlags","eventRemoveHandler","showMapHandler","fetchEvents","Modal_MainModal_Modal","Events_EventForm_EventForm","EventView_EventView_EventView","EventList_EventList","bookingList","booking","moment","toUTCString","utc","format","quantity","subtract","readOnly","onChangeQuantity","BOOKINGS_COSTS","Cheap","min","max","Normal","Expensive","BookingsChart","float_values","chartData","labels","datasets","_loop","cost","filteredBookingsCount","bookings","curr","fillColor","strokeColor","highlightFill","highlightStroke","react_chartjs","width","BookingsControls","activeOutputType","countriesList","PersonalDetails","_Component","telRegex","billDetailsHandler","validity","valid","nextElementSibling","innerHTML","handleChange","validationMessage","inputs","billDetailsRef","some","input","forEach","inherits","createClass","values","defaultValue","firstName","onInput","aria-live","lastName","clientEmail","list","mobilePhone","TotalBtns","BookingsSideBar","_useState","useState","_useState2","slicedToArray","totalChanged","setIndicateStyle","_useState3","total_cost","_useState4","prevTotal","setPrevTotal","useEffect","background","bg_color","total-changed","includeGas","ConfirmInfo","_ref$values","address","PayMethodsInfo","CardSection","es","CheckoutForm","isRedirect","succeeded","failed","isInvalidForm","error_message","handleSubmit","ev","stripe","createToken","createPaymentMethod","billing_details","_ref2","card","paymentMethod","onPaymentCheck","customerInput","residence","eventsIds","_ref3","PaymentInputArgs","total","humanMessage","pathOr","_ref4","_ref4$data$createPaym","createPayment","paid","CustomerInput","lastPaymentId","lastBill","lastBookingId","lastPaymentStatus","_this$state$status","Payment_StoreCheckout_CardSection","Redirect","injectStripe","StoreCheckout","Payment_StoreCheckout_CheckoutForm","BookingHistoryItem","BookingsHistory","useContext","setIsLoading","isEmpty","setIsEmpty","_useState5","_useState6","setBookings","resParsed","merge","y","mergeDeepRight","prop","omit","bookedEvents","compose","x","transformedBookings","addIndex","updatedAt","BookingHistoryItem_BookingHistoryItem_BookingHistoryItem","BookingPage","hotels","outputType","paid_distance","step","back","next","billDetails","isValidPersonalInfo","isValidResidenceInfo","user_residence","warning_message","getPaidDistance","tour","tourLatLang","getDistance","Math","floor","latLang1","latLang2","radLat1","PI","radLon1","radLat2","radLonDif","atan2top","sqrt","pow","cos","sin","atan2bottom","atan2","eventQuantityHandler","bookingItemId","propEq","deleteBookingHandler","prevEventTotal","fetchFunction","UpdateBookingItemInput","updatedQnty","updatedTotal","_path","outPutTypeSwitcher","nextStep","prevStep","CountryCode","details","fetchBooks","uncompletedBooking","completed","chain","mergeDeepLeft","multiply","booking_container","Bookings_BookingsControls_BookingsControls","BookingsList_BookingList","Bookings_BookingsChart_BookingsChart","BookingsHistory_BookingsHistory_BookingsHistory","BookingsSideBar_BookingsSideBar_BookingsSideBar","disabled","FormUserDetails_PersonalDetails_PersonalDetails","ConfirmInfo_ConfirmInfo","Payment_StoreCheckout_StoreCheckout","BookingsSideBar_PayMethodsInfo_PayMethodsInfo","API_URL","jwtToken","deleteCookie","expires","updatedCookie","encodeURIComponent","optionKey","optionValue","setCookie","max-age","App","getUser","userPayload","user","parse","atob","sub","localStorage","setItem","removeItem","getItem","apiKey","BrowserRouter","Provider","Navigation_MainNavigation","Switch","from","exact","Route","component","ReactDOM","render","src_App_0","module","exports","__webpack_require__"],"mappings":"s1BAEeA,MAAMC,cAAc,CAC/BC,WAAOC,EACPC,OAAQ,KACRC,SAAS,EACTC,SAAU,KACVC,eAAgB,KAChBC,MAAO,aACPC,OAAQ,WAAOC,QAAQC,IAAI,cCsChBC,SAzCQ,SAAAC,GAAK,OACxBC,EAAAC,EAAAC,cAACC,EAAYC,SAAb,KAEK,SAACC,GACE,OACIL,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBACdN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,WACMG,EAAQjB,OACNY,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAASO,GAAG,SAAZ,iBAGRR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAASO,GAAG,WAAZ,UAEHH,EAAQjB,OAASY,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACVT,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAASO,GAAG,aAAZ,aAEJR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQQ,QAASL,EAAQV,QAAzB,+ECUzBgB,qNApCXC,MAAQ,CACJC,QAAQ,KAGZC,MAAQ,wFAEY,IAAAC,EAAAC,KACVC,EAAiC,EAAtBD,KAAKjB,MAAMkB,SAC5BD,KAAKF,MAAQI,WAAW,WACpBH,EAAKI,SAAS,CAAEN,QAAQ,IACxBE,EAAKhB,MAAMqB,SAAWL,EAAKhB,MAAMqB,WACvB,IAAXH,kDAIHI,aAAaL,KAAKF,wCAIlB,OACId,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,MACMO,KAAKJ,MAAMC,QACTb,EAAAC,EAAAC,cAAA,OAAKI,UAAWgB,IAAW,CACvBC,mBAAqB,EACrBC,QAAWR,KAAKjB,MAAMyB,QACtBC,SAAYT,KAAKjB,MAAM2B,MACvBA,MAASV,KAAKjB,MAAM2B,SAEpB1B,EAAAC,EAAAC,cAAA,WAAMc,KAAKjB,MAAM4B,eA7BpBC,cCEfC,EAAQ,CACVC,MAAO,IAAIC,OACX,iLAGAC,SAAU,oDAGRC,cAWF,SAAAA,EAAYlC,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAiB,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAvB,KAAMjB,KAXVa,MAAQ,CACJ4B,SAAS,EACTC,uBAAuB,EACvBC,aAAa,EACbC,WAAW,EACXC,aAAc,IAKCV,EAQnBW,kBAAoB,WAChBX,EAAKY,qBACLZ,EAAKf,SAAS,SAAA4B,GACV,MAAO,CAAEP,SAAUO,EAAUP,YAXlBN,EAenBc,cAAgB,SAAAC,GACZA,EAAMC,iBACN,IAAMlB,EAAWE,EAAKiB,WAAWC,QAAQC,MACnCC,EAAepB,EAAKqB,cAAcH,QAAQC,MAEhD,GAA+B,IAA3BrB,EAASwB,OAAOC,QACe,IAA/BH,EAAaE,OAAOC,OADxB,CAKA,IAAIC,EAAc,CACdC,MAAK,wMAOLC,UAAW,CAAEC,WAAY,CAAEC,YAAaR,EAActB,cAG1D,IAAKE,EAAKtB,MAAM4B,UAAYN,EAAKtB,MAAM6B,sBAEnCiB,EAAc,CACVC,MAAK,gMAMLC,UAAW,CAAEG,YAAa,CAAED,YAAaR,EAActB,WAAUgC,KARvD9B,EAAK+B,QAAQb,QAAQC,SAYvC,IAAKnB,EAAKtB,MAAM4B,UAAYN,EAAKtB,MAAM8B,aAAeR,EAAKtB,MAAM6B,sBAE7DiB,EAAc,CACVC,MAAK,uMAKLC,UAAW,CAAEM,mBAAoB,CAAEJ,YAAaR,EAAca,iBAPzCjC,EAAKkC,mBAAmBhB,QAAQC,SAW7DgB,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAK,GACF,IAAMC,EAAUC,YAAK,CAAC,OAAQ,QAAS,WAAYF,GAC7CG,EAASC,YAAKC,YAAS,CAAC,SAAU,EAAG,YAAaL,GAIxD,GAHIrD,EAAKtB,MAAM4B,UAAY+C,EAASM,KAAKnG,OAASgG,GAC9CxD,EAAK4D,iBAAiBJ,GAEtBA,EAGA,OAFA9F,QAAQC,IAAI6F,QACZxD,EAAKf,SAAS,CAAEwB,WAAW,EAAOC,aAAc8C,IAG/CxD,EAAKtB,MAAM4B,SAAYN,EAAKtB,MAAM8B,cAAe6C,EAASM,KAAKE,QAChE7D,EAAKf,SAAS,CAAEsB,uBAAuB,IAEvCP,EAAKtB,MAAM4B,SAAWgD,GACtBtD,EAAK7B,QAAQX,MAAM8F,GAEnBD,EAASM,KAAKG,eACd9D,EAAKf,SAAS,CAAEwB,WAAW,EAAMD,aAAa,EAAME,aAAc,qCAGzEqD,MAAM,SAAAC,GACH,MAAMb,MAAMa,OAnGLhE,EAuGnB4D,iBAAmB,WAAmC,IAAlCK,EAAkCC,UAAA3C,OAAA,QAAApE,IAAA+G,UAAA,GAAAA,UAAA,GAAnB,eAC/BrB,SAASsB,eAAe,kBAAoBtB,SAASsB,eAAe,iBAAiBC,SACrF,IAAMC,EAAIxB,SAAS7E,cAAc,KACjCqG,EAAEC,UAAYL,EACdI,EAAEE,MAAMC,MAAQ,MAChBH,EAAEI,GAAK,gBACPzE,EAAKqB,cAAcH,SAAWlB,EAAKqB,cAAcH,QAAQwD,cAAcC,UAAUC,IAAI,gBACrF5E,EAAKiB,WAAWC,SAAWlB,EAAKiB,WAAWC,QAAQwD,cAAcC,UAAUC,IAAI,gBAC/E5E,EAAKiB,WAAWC,SAAWlB,EAAKiB,WAAWC,QAAQwD,cAAcA,cAAcG,aAAaR,EAAGrE,EAAKiB,WAAWC,QAAQwD,cAAcI,cA/GtH9E,EAkHnBY,mBAAqB,WACjBZ,EAAKqB,cAAcH,SAAWlB,EAAKqB,cAAcH,QAAQwD,cAAcC,UAAUP,OAAO,gBACxFpE,EAAKiB,WAAWC,SAAWlB,EAAKiB,WAAWC,QAAQwD,cAAcC,UAAUP,OAAO,gBAClFvB,SAASsB,eAAe,kBAAoBtB,SAASsB,eAAe,iBAAiBC,UArHtEpE,EAwHnB+E,iBAAmB,SAACC,GAChBA,EAAEC,OAAOP,cAAcC,UAAUO,OAAO,iBAAkBvF,EAAMC,MAAMuF,KAAKnF,EAAK+B,QAAQb,QAAQC,SAvHhGnB,EAAK+B,QAAU/E,IAAMoI,YACrBpF,EAAKiB,WAAajE,IAAMoI,YACxBpF,EAAKqB,cAAgBrE,IAAMoI,YAC3BpF,EAAKkC,mBAAqBlF,IAAMoI,YALjBpF,wFA6Hf,OACIlC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASZ,GAAG,mBAAmB3C,KAAK,mBAAmBwD,YAAY,OAAOC,IAAKzG,KAAKoD,mBAAoBsD,UAAQ,gDAKrH,IAAA3G,EAAAC,KACf,OACIhB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,YAAYqH,SAAU3G,KAAKgC,eACxChD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACVN,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OACRZ,GAAG,QACH3C,KAAK,QACLwD,YAAY,MACZC,IAAKzG,KAAKuC,cACVqE,QAAQ,qGACRC,MAAM,iCACNH,UAAQ,KAEhB1H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OACRC,YAAY,gBACZC,IAAKzG,KAAKiD,QACV6D,SAAU9G,KAAKiG,iBACfW,QAAQ,0IACRC,MAAM,oCACV7H,EAAAC,EAAAC,cAAA,OAAK6H,QAAQ,aACT/H,EAAAC,EAAAC,cAAA,QAAM8H,EAAE,0RACRhI,EAAAC,EAAAC,cAAA,YAAU+H,OAAO,+BAA+BC,UAAU,uBAE9DlI,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAW6H,KAAK,KAAKhB,OAAO,UACrCnH,EAAAC,EAAAC,cAAA,OAAKkI,IAAI,+HAA+HC,IAAI,OAGpJrI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WACRC,YAAY,UACZC,IAAKzG,KAAKmC,WACVyE,QAAQ,uDACRU,aAAa,MACbZ,UAAQ,EACRG,MAAM,iGAEZ7G,KAAKJ,MAAM6B,uBAAyBzB,KAAKuH,yBACzCvH,KAAKJ,MAAMgC,cAAgB5B,KAAKJ,MAAM+B,WAAa3C,EAAAC,EAAAC,cAACsI,EAAD,CAAQ9G,OAAQV,KAAKJ,MAAM+B,UAAWhB,KAAMX,KAAKJ,MAAMgC,aAAcxB,QAAS,WAAOL,EAAKI,SAAS,CAAEyB,aAAc,QACtK5B,KAAKJ,MAAMgC,eAAiB5B,KAAKJ,MAAM+B,WAAa3C,EAAAC,EAAAC,cAACsI,EAAD,CAAQ9G,OAAQV,KAAKJ,MAAM+B,UAAWhB,KAAMX,KAAKJ,MAAMgC,aAAcxB,QAAS,WAAOL,EAAKI,SAAS,CAAEyB,aAAc,QACzK5C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,UAAWvG,KAAKJ,MAAM6B,sBAAwB,SAAW,WACtEzC,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,SAAS7G,QAASM,KAAK6B,mBAAoB7B,KAAKJ,MAAM4B,QAAU,UAAY,qDAOrG,OACIxC,EAAAC,EAAAC,cAAA,QAAMI,UAAU,YAAYqH,SAAU3G,KAAKgC,eACxChD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACVN,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OACRZ,GAAG,QACH3C,KAAK,QACLwD,YAAY,MACZC,IAAKzG,KAAKuC,cACVqE,QAAQ,qGACRC,MAAM,iCACNH,UAAQ,KAEhB1H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WACJC,YAAY,UACZC,IAAKzG,KAAKmC,WACVyE,QAAQ,uDACRU,aAAa,MACbZ,UAAQ,EACRG,MAAM,oFAEd7H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,UAAb,UACAvH,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,SAAS7G,QAASM,KAAK6B,mBAAoB7B,KAAKJ,MAAM4B,QAAU,UAAY,4CAQzG,OACIxC,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAWU,KAAKJ,MAAM4B,QAAsB,QAAZ,WACzCxB,KAAKJ,MAAM4B,QACTxB,KAAKyH,kBAELzH,KAAK0H,6BAvOd9G,aAAjBK,EASK0G,YAAcC,EAuOV3G,gBCrPA4G,2LAJP,OAAO7I,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBAFPsB,cCSRkH,UATC,SAAC/I,GAAD,OACZC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAUmG,MAAO1G,EAAM0G,OAClCzG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,uICDN6I,UAAiB,IAAIC,kBACdC,EAAkB,IAAIC,IAAEC,KAAK,CACtCC,QAASC,EAAQ,IACjBC,cAAeD,EAAQ,IACvBE,WAAY,EAAE,EAAG,IACjBC,YAAa,CAAC,IAAK,IACnBC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,aAAc,CAAC,GAAI,UAWFC,yLACF3G,GACX,IAVqB4G,EAUfC,GAVeD,EAUwB5G,EAAM8G,SAASC,OAAO,GAThE,IAAIC,QAAQ,SAAC9E,EAAK+E,GACrBnB,EAAeoB,UAAUN,OAAOA,GAAQO,IAAI,SAAU1I,EAAO2I,GACrD,OAAO3I,EAAQwI,EAAIxI,GAASyD,EAAIkF,QAQxCrJ,KAAKjB,MAAMuK,sBAAwBtJ,KAAKjB,MAAMuK,qBAAqB,CAAEC,MAAOtH,EAAM8G,SAASQ,MAAOC,OAAQvH,EAAM8G,SAASC,OAAO,GAAIF,oEAKpI,OADA9I,KAAKjB,MAAM0K,QAAQC,IAAIC,GAAG,yBAA0B3J,KAAK4J,eAAeC,KAAK7J,OACtE8J,2BAAiB,CACpBC,SAAU,IAAIC,eACdvE,MAAO,MACPwE,WAAY,EACZC,OAAQ,CACJC,KAAMlC,EACNmC,WAAW,GAEf9C,cAAc,EACd+C,YAAa,SAAAC,GAAuBA,EAApB3H,MACZ,OADgC2H,EAAbjB,OACLE,OAElBgB,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,YAAY,WAvBeC,KCfjCC,UAASC,YAAYjC,IAEdkC,EAAc,IAAI5C,IAAEC,KAAK,CAClCC,QAASC,EAAQ,IACjBC,cAAeD,EAAQ,IACvBE,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,IAAK,IACnBC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,aAAc,CAAC,GAAI,MAGVV,EAAkB,IAAIC,IAAEC,KAAK,CACtCC,QAASC,EAAQ,IACjBC,cAAeD,EAAQ,IACvBE,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,IAAK,IACnBC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,aAAc,CAAC,GAAI,MAGFoC,cAIjB,SAAAA,EAAYhM,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA+K,IACf7J,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAA4J,GAAAxJ,KAAAvB,KAAMjB,KAHViM,gBAAkB,IAAIC,gBAEH/J,EA0DnBgK,cAAgB,SAACjJ,GACbA,EAAMC,iBACNhB,EAAKf,SAAS,SAAAgL,GACV,IAAMC,EAAWjK,OAAAkK,EAAA,EAAAlK,CAAOgK,EAAUG,MAMlC,OALA1M,QAAQC,IAAIuM,GACZA,EAAYG,KAAZpK,OAAAqK,EAAA,EAAArK,CAAA,CACIqI,OAAQtI,EAAKtB,MAAMiJ,QAChB3H,EAAKtB,MAAM6L,cAEX,CAAEH,KAAMF,IAChB,kBAAMlK,EAAKnC,MAAM2M,aAAaxK,EAAKtB,MAAM0L,SApE7BpK,EAsFnByK,YAAc,SAACzF,GACNhF,EAAKnC,MAAM6M,cACZ1K,EAAKf,SAAS,CACV0I,OAAQ,CAAC3C,EAAE2C,OAAOgD,IAAK3F,EAAE2C,OAAOiD,QAzFzB5K,EA+FnB6K,iBAAmB,WACf7K,EAAKf,SAAS,CAAEmL,KAAM,MAhGPpK,EAoGnB8K,eAAiB,WACb9K,EAAKf,SAAS,SAAA8L,GAAI,MACd,CACIX,KAAMW,EAAKX,KAAK5B,IAAI,SAAAwC,GAKhB,OAJIA,EAAQ1C,OAAO,KAAOtI,EAAKtB,MAAMuM,eAAe3C,OAAO,IAAM0C,EAAQ1C,OAAO,KAAOtI,EAAKtB,MAAMuM,eAAe3C,OAAO,KACpH0C,EAAQlJ,KAAO9B,EAAKkL,cAAchK,QAAQC,MAC1C6J,EAAQG,QAAUnL,EAAKoL,iBAAiBlK,QAAQC,OAE7C6J,QA5GJhL,EAmHnBqL,eAAiB,WACbrL,EAAKf,SAAS,SAAA8L,GAAI,MACd,CACIX,KAAMW,EAAKX,KAAKkB,OAAO,SAAAN,GAAO,OACzBA,EAAQ1C,OAAO,KAAOtI,EAAKtB,MAAMuM,eAAe3C,OAAO,IAAM0C,EAAQ1C,OAAO,KAAOtI,EAAKtB,MAAMuM,eAAe3C,OAAO,IAAK0C,QAvHvHhL,EA6HnBuL,cAAgB,SAACvG,GAAM,IAAAwG,EACExG,EAAE2C,OAAfgD,EADWa,EACXb,IAAKC,EADMY,EACNZ,IACPK,EAAiBjL,EAAKtB,MAAM0L,KAAKqB,KAAK,SAAAC,GAAG,OAAIA,EAAIpD,OAAO,KAAOqC,GAAOe,EAAIpD,OAAO,KAAOsC,IAC9F5K,EAAKkL,cAAchK,QAAQC,MAAQ8J,EAAenJ,KAClD9B,EAAKoL,iBAAiBlK,QAAQC,MAAQ8J,EAAeE,QACrDnL,EAAKf,SAAS,CAAEgM,oBAhIhBjL,EAAKnC,MAAQA,EACbmC,EAAKtB,MAAQ,CACTmJ,SAAU,CACN8C,IAAK,EACLC,IAAK,GAETe,mBAAmB,EACnBC,KAAwB,EAAlB5L,EAAKnC,MAAM+N,KACjBrB,YAAa,CACTzI,KAAM,GACNqJ,QAAS,IAEbf,KAAM,GACNzC,OAAQ,GACRsD,eAAgB,IAEpBjL,EAAK6L,kBAAoB7L,EAAK6L,kBAAkBlD,KAAvB1I,OAAA6L,EAAA,EAAA7L,QAAA6L,EAAA,EAAA7L,CAAAD,KACzBA,EAAK+L,OAAS3G,sBACdpF,EAAKkL,cAAgB9F,sBACrBpF,EAAKoL,iBAAmBhG,sBArBTpF,mFAyBC,IAAAnB,EAAAC,KACVkN,EAASlN,KAAKgL,gBAAgBkC,OACpCC,UAAUC,YAAYC,mBAAmB,SAACC,GACtCvN,EAAKI,SAAS,CACV4I,SAAU,CACN8C,IAAKyB,EAAS9D,OAAO+D,SACrBzB,IAAKwB,EAAS9D,OAAOgE,WAEzBV,KAAwB,EAAlB/M,EAAKhB,MAAM+N,KACjBD,mBAAmB,KAExB,WACCxJ,MAAK,GAAAC,OAAIvD,EAAKV,QAAQb,SAAjB,aAAsC,CAAE0O,OAAQA,IAChDhJ,KAAK,SAAAC,GAAG,OAAIA,EAAIG,SAChBJ,KAAK,SAAAuJ,GACF1N,EAAKI,SAAS,CACV4I,SAAU,CACN8C,IAAK4B,EAAI5I,KAAK0I,SACdzB,IAAK2B,EAAI5I,KAAK2I,WAElBV,KAAwB,GAAlB/M,EAAKhB,MAAM+N,KACjBD,mBAAmB,MAG1B5H,MAAM,SAAAC,GAAG,OAAItG,QAAQC,IAAR,oCAAAyE,OAAgD4B,uDAKtElF,KAAKgL,gBAAgB0C,kDAkBPzL,GACd,IAAMkE,EAASlE,EAAMkE,OACf9D,EAAQ8D,EAAO9D,MACfW,EAAOmD,EAAOnD,KACpBhD,KAAKG,SAAS,SAAAgL,GAAS,MAAK,CACxBM,YAAYtK,OAAAqK,EAAA,EAAArK,CAAA,GACLgK,EAAUM,YADNtK,OAAAwM,EAAA,EAAAxM,CAAA,GAEN6B,EAAOX,wCAsDX,IAAAuL,EAAA5N,KACCsN,EAAW,CAACtN,KAAKJ,MAAMmJ,SAAS8C,IAAK7L,KAAKJ,MAAMmJ,SAAS+C,KACzD+B,EAAa,GACfC,EAAiB9N,KAAKjB,MAAMkD,OAC5BjC,KAAKjB,MAAMkD,MAAMqJ,MACjBtL,KAAKjB,MAAMkD,MAAMqJ,KAAK7I,QACtBzC,KAAKjB,MAAMkD,MAAMqJ,KAAK,GAAG9B,OAAO/G,QAC/BzC,KAAKjB,MAAMkD,OACRjC,KAAKjB,MAAMkD,MAAMqJ,KAAK9B,QACtBxJ,KAAKjB,MAAMkD,MAAMqJ,KAAK9B,OAAO/G,OACjCzC,KAAKjB,MAAMkD,MAAMqJ,KAAO,KAE5B,OADItL,KAAKjB,MAAMkD,OAAS6L,IAAkBC,MAAMC,QAAQF,KAAgBA,EAAgB,CAACA,IAErF9O,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAC+O,EAAA,EAAD,CAAKC,OAAQJ,EAAgBA,EAAc,GAAGtE,OAAS8D,EACnDR,KAAM9M,KAAKJ,MAAMkN,KACjBrH,MAAO,CAAE0I,OAAQnO,KAAKjB,MAAMqP,OAAS,SACrC3H,IAAKzG,KAAKiN,OACVvN,QAASM,KAAK2L,YACd0C,gBAAqCC,OAAOC,WAAa,KAEzDvP,EAAAC,EAAAC,cAACsP,EAAA,EAAD,CACIC,YAAY,0EACZC,IAAI,uDAIN1O,KAAKjB,MAAM6M,cAAgB5M,EAAAC,EAAAC,cAAC0L,EAAD,CAAQtB,qBAAsBtJ,KAAKjB,MAAMuK,2BAAwBjL,IAE7F2B,KAAKJ,MAAMiN,mBAAqB7M,KAAKjB,MAAM4P,SACxC3P,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACKO,KAAKJ,MAAM0L,KAAK7I,QAAUzC,KAAKJ,MAAM0L,KAAK,GAAG9B,OAAO/G,OAASzC,KAAKJ,MAAM0L,KAAK5B,IAAI,SAACkD,EAAKgC,GACpF,OACI5P,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CACInP,QAASkO,EAAKnB,cACda,SAAUV,EAAIpD,OACdW,KAAMW,EACNgE,IAAG,GAAAxL,OAAKyL,KAAKC,MAAQJ,GACrBjJ,GAAE,GAAArC,OAAKsL,IACP5P,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,KACKrC,EAAI5J,SAIhBhE,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAQvB,SAAUA,EAAUnD,KAAMW,GAC/B9L,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,qBAIPjP,KAAKJ,MAAMiJ,OAAOpG,OACfzD,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAQvB,SAAUtN,KAAKJ,MAAMiJ,OAAQsB,KAAMW,GACvC9L,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,qBAGQ,MAGhBjQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACKqO,EAAgBA,EAAcpE,IAAI,SAACkD,EAAKgC,GAErC,OADAf,EAAWtC,KAAKqB,EAAIpD,QAEhBxK,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAQvB,SAAUV,EAAIpD,OAAQW,KAAc,IAARyE,EAAY3G,EAAkB6C,EAAagE,IAAKF,GAChF5P,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,KACKrC,EAAI5J,SAIhB,KACLhE,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,CAAUC,UAAWtB,GAAc,OAIlD7N,KAAKJ,MAAMiN,mBAAqB7M,KAAKjB,MAAM4P,SACxC3P,EAAAC,EAAAC,cAAA,WAASI,UAAU,aACfN,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMyH,SAAU3G,KAAKkL,eACjBlM,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,QAAf,eACApQ,EAAAC,EAAAC,cAAA,SACI4H,SAAU9G,KAAK+M,kBACftG,IAAKzG,KAAKoM,cACV7F,KAAK,OACLvD,KAAK,OACL2C,GAAG,SACP3G,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,WAAf,eACApQ,EAAAC,EAAAC,cAAA,SACI4H,SAAU9G,KAAK+M,kBACftG,IAAKzG,KAAKsM,iBACV/F,KAAK,OACLvD,KAAK,UACL2C,GAAG,YACP3G,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,SAASjH,UAAU,OAAhC,WAEJN,EAAAC,EAAAC,cAAA,UAAQQ,QAASM,KAAKgM,eAAgB1M,UAAU,OAAhD,UACAN,EAAAC,EAAAC,cAAA,UAAQQ,QAASM,KAAKuM,eAAgBjN,UAAU,OAAhD,UACAN,EAAAC,EAAAC,cAAA,UAAQQ,QAASM,KAAK+L,iBAAkBzM,UAAU,OAAlD,cAEJN,EAAAC,EAAAC,cAAA,OAAKI,UAAWgB,IAAW,CAC3B+O,cAAerP,KAAKjB,MAAM4P,SAC1BW,YAAatP,KAAKjB,MAAM4P,YAEpB3P,EAAAC,EAAAC,cAACqQ,EAAD,gBA9OK3O,aAAZmK,EACVpD,YAAcC,oBCPV4H,8MAtBXhM,KAAOO,SAASP,wFAGZxD,KAAKwD,KAAKiC,MAAMgK,UAAY,SAC5BzP,KAAKwD,KAAKiC,MAAM0I,OAAS,QACzBnO,KAAKwD,KAAKiC,MAAMiK,aAAe,sDAG/B1P,KAAKwD,KAAKiC,MAAMgK,UAAY,OAC5BzP,KAAKwD,KAAKiC,MAAM0I,OAAS,QACzBnO,KAAKwD,KAAKiC,MAAMiK,aAAe,qCAE1B,IAAA3P,EAAAC,KACL,OACIhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,UAAU6H,KAAK,KAAKzH,QAAS,SAACwG,GAAQA,EAAEhE,iBAAkBnC,EAAKhB,MAAMqB,YAAlF,KACApB,EAAAC,EAAAC,cAAA,eAAUc,KAAKjB,MAAM4Q,kBAjBd/O,aC6DRgP,eAtDX,SAAAA,IAAc,IAAA1O,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA4P,IACV1O,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAyO,GAAArO,KAAAvB,QAJJJ,MAAQ,CACJiQ,QAAQ,GAEE3O,EAKdd,QAAU,kBAAMc,EAAKf,SAAS,CAAE0P,QAAQ,KAL1B3O,EAed4O,QAAU,WACN5O,EAAKf,SAAS,CAAE0P,QAAS3O,EAAKtB,MAAMiQ,UAdpC3O,EAAK6O,UAAY7R,IAAMoI,YAFbpF,mFAQV6C,SAASiM,iBAAiB,UAAWhQ,KAAKI,wDAI1C2D,SAASkM,oBAAoB,UAAWjQ,KAAKI,0CAOxC,IAAAL,EAAAC,KACL,OACIhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,iBACdN,EAAAC,EAAAC,cAAA,UAAMc,KAAKjB,MAAM4P,SAA8B,gBAAnB3O,KAAKjB,MAAM8H,OACrC7G,KAAKjB,MAAM4P,SAaP,KAbkB3P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACpBT,EAAAC,EAAAC,cAAA,0BAAkBc,KAAKjB,MAAMkD,MAAMiO,OACnClR,EAAAC,EAAAC,cAAA,2BAAmB,IAAI6P,KAAK/O,KAAKjB,MAAMkD,MAAMkO,MAAMC,sBACnDpR,EAAAC,EAAAC,cAAA,gCAAwBc,KAAKjB,MAAMsR,gBAAkB,EAArD,IAAyDrQ,KAAKjB,MAAMuR,UAAY,GAC/EtQ,KAAKJ,MAAMiQ,QACR7Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAACqR,EAAD,MACAvR,EAAAC,EAAAC,cAACsR,GAAD,CAAUpQ,QAASJ,KAAK8P,SACpB9Q,EAAAC,EAAAC,cAACuR,EAAD,CAAKxO,MAAOjC,KAAKjB,MAAMkD,MAAO0M,UAAU,EAAO7B,KAAM,OAIjE9N,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KAAKzH,QAAS,SAACwG,GAAQA,EAAEhE,iBAAkBnC,EAAK+P,YAAa9Q,EAAAC,EAAAC,cAAA,KAAGI,UAAU,4BAG1FN,EAAAC,EAAAC,cAAA,eAAUc,KAAKjB,MAAM4Q,UACrB3Q,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAASI,UAAU,kBACdU,KAAKjB,MAAM2R,WACT1R,EAAAC,EAAAC,cAAA,UAAQI,UAAU,MAAMI,QAASM,KAAKjB,MAAM4R,UAA5C,UACF3Q,KAAKjB,MAAM6R,YACT5Q,KAAKjB,MAAMsR,eAAiBrQ,KAAKjB,MAAMuR,UACvCtR,EAAAC,EAAAC,cAAA,UAAQI,UAAU,MAAMI,QAASM,KAAKjB,MAAM8R,WAAY7Q,KAAKjB,MAAM+R,uBAlD1ElQ,yECGdmQ,WAAW,CAACC,KAAUC,KAASC,OAkEtBC,8MA/DXvR,MAAQ,CACJwR,WAAW,KAGfhR,QAAU,WACNc,EAAKf,SAAS,CAAEiR,WAAW,OAW/BtB,QAAU,WACN5O,EAAKf,SAAU,CAACiR,WAAYlQ,EAAKtB,MAAMwR,gGARvCrN,SAASiM,iBAAiB,UAAWhQ,KAAKI,wDAI1C2D,SAASkM,oBAAoB,UAAWjQ,KAAKI,0CAOxC,IAAAL,EAAAC,KACL,OACIhB,EAAAC,EAAAC,cAAA,MAAI4P,IAAK9O,KAAKjB,MAAMsS,QAAS/R,UAAU,qBACnCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,OAAKkI,IAAK2J,GAAS/Q,KAAKjB,MAAMuS,OAAQjK,IAAI,UAE9CrI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBAAyBU,KAAKjB,MAAM8H,OACnD7H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBAAwBU,KAAKjB,MAAMmR,MAAlD,QACAlR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACTU,KAAKjB,MAAMwS,SAAShT,QAClBS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,UAAQI,UAAU,MAAMI,QAASM,KAAKjB,MAAMyS,SAAS3H,KAAK7J,KAAMA,KAAKjB,MAAMsS,UAA3E,aACArS,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KAAKzH,QAASM,KAAKjB,MAAM0S,SAAS5H,KAAK7J,KAAMA,KAAKjB,MAAMsS,UAAUrS,EAAAC,EAAAC,cAAA,KAAGI,UAAU,0BAE3FN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,MAAMI,QAASM,KAAKjB,MAAMyS,SAAS3H,KAAK7J,KAAMA,KAAKjB,MAAMsS,UAA3E,iBAEPrR,KAAKJ,MAAMwR,WACRpS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACQT,EAAAC,EAAAC,cAACqR,EAAD,MACAvR,EAAAC,EAAAC,cAACsR,GAAD,CAAUpQ,QAASJ,KAAK8P,SACpB9Q,EAAAC,EAAAC,cAACuR,EAAD,CAAKxO,MAAOjC,KAAKjB,MAAMkD,MAAO0M,UAAU,EAAO7B,KAAM,MAIrE9N,EAAAC,EAAAC,cAAA,KAAGI,UAAU,eAAe6H,KAAK,KAAKzH,QAAS,SAACwG,GAAOA,EAAEhE,iBAAkBnC,EAAK+P,YAAhF,eAEJ9Q,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBAAf,oBAAuDU,KAAKjB,MAAMsR,eAAlE,IAAmFrQ,KAAKjB,MAAMuR,UAC9FtR,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGI,UAAU,mBAAnB,WAAgDN,EAAAC,EAAAC,cAAA,SAAI,IAAI6P,KAAK/O,KAAKjB,MAAMoR,MAAMC,uBAC7EpQ,KAAKjB,MAAM2S,QACR1S,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,UACKc,KAAKjB,MAAM2S,QAAQhI,IAAI,SAACiI,EAAQ/C,GAAT,OAAiB5P,EAAAC,EAAAC,cAAA,MAAI4P,IAAKC,KAAKC,MAAQJ,GAAK5P,EAAAC,EAAAC,cAAA,KAAGI,UAAS,MAAAgE,OAAQqO,EAAOxH,QAAtD,IAAkEwH,EAAO3O,KAAsB,aAAhB2O,EAAO3O,MAAuB2O,EAAOC,UAAY5S,EAAAC,EAAAC,cAAA,YAAOyS,EAAOC,eAEzL,cAxDNhR,aCgBTiR,WAvBG,SAAA9S,GACd,IAAM+S,EAAS/S,EAAM+S,OAAOpI,IAAI,SAACzH,EAAO2M,GACpC,OACI5P,EAAAC,EAAAC,cAAC6S,GAAD,CACIT,MAAO1C,EACPE,IAAK7M,EAAM+P,IACXX,QAASpP,EAAM+P,IACf/P,MAAOA,EACP4E,MAAO5E,EAAM4E,MACbsJ,KAAMlO,EAAMkO,KACZD,MAAOjO,EAAMiO,MACbwB,QAASzP,EAAMyP,QACfH,SAAUxS,EAAMwS,SAChBC,SAAUzS,EAAMkT,aAChB5B,eAAgBpO,EAAMoO,gBAAkB,EACxCC,SAAUrO,EAAMqO,UAAY,EAC5BmB,SAAU1S,EAAM0S,aAI5B,OAAQzS,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAewS,KC6G1BI,WAlIG,SAACnT,GACf,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,SAAf,SACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OAAOZ,GAAG,QAAQwM,UAAU,KAAK1L,IAAK1H,EAAMqT,cAE5DpT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,SAAf,SACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASZ,GAAG,QAAQc,IAAK1H,EAAMsT,cAE/CrT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,YAAf,gBACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASZ,GAAG,WAAWc,IAAK1H,EAAMuT,iBAElDtT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,WAAf,UAAgCpQ,EAAAC,EAAAC,cAAA,+CAChCF,EAAAC,EAAAC,cAAA,UAAQqT,UAAQ,EAAC5M,GAAG,UAAU6M,KAAK,IAAI/L,IAAK1H,EAAM0T,aAAc3L,SAAU/H,EAAM+H,SAAS+C,KAAK,KAAM,WAChG7K,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,WAAW1C,MAAM,cAA/B,WACA7H,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,uBAAuB1C,MAAM,YAC3C7H,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,kBAAkB1C,MAAM,eAAtC,qCACA7H,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,wBAAwB1C,MAAM,kBAC5C7H,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,kBAAkB1C,MAAM,UAAtC,uIAGA7H,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,MAAM1C,MAAM,WAC1B7H,EAAAC,EAAAC,cAAA,UAAQqK,MAAM,gBAAgB1C,MAAM,uBAG5C7H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,YAAf,qBACApQ,EAAAC,EAAAC,cAAA,YAAUqH,KAAK,OAAOZ,GAAG,WAAW+M,KAAK,IAAIP,UAAU,MAAM1L,IAAK1H,EAAM4T,cAAe7L,SAAU/H,EAAM+H,SAAS+C,KAAK,KAAM,gBAGnI7K,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAUuH,IAAK1H,EAAM6T,iBACjB5T,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,SAAS3C,KAAK,aAAaX,MAAM,WAC3DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,UAAf,8BAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,QAAQ3C,KAAK,aAAaX,MAAM,UAC1DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,SAAf,UAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,OAAO3C,KAAK,aAAaX,MAAM,SACzDrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,QAAf,cAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,QAAQ3C,KAAK,aAAaX,MAAM,UAC1DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,SAAf,4BAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,YAAY3C,KAAK,aAAaX,MAAM,cAC9DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,aAAf,qBAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,SAAS3C,KAAK,aAAaX,MAAM,WAC3DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,UAAf,oBAIZpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAUuH,IAAK1H,EAAM8T,iBACjB7T,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,SAAS3C,KAAK,cAAcX,MAAM,WAC5DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,UAAf,WAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,MAAM3C,KAAK,cAAcX,MAAM,QACzDrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,OAAf,+BAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,WAAW3C,KAAK,cAAcX,MAAM,aAC9DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,YAAf,sBAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,OAAO3C,KAAK,cAAcX,MAAM,SAC1DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,QAAf,SAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,OAAO3C,KAAK,cAAcX,MAAM,SAC1DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,QAAf,4BAIZpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAUuH,IAAK1H,EAAM+T,iBACjB9T,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,WAAW3C,KAAK,eAAeX,MAAM,aAC/DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,YAAf,wBAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,QAAQ3C,KAAK,eAAeX,MAAM,UAC5DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,SAAf,sBAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,aAAa3C,KAAK,eAAeX,MAAM,eACjErD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,cAAf,eAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,YAAY3C,KAAK,eAAeX,MAAM,cAChErD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,aAAf,cAEJpQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,WAAWZ,GAAG,OAAO3C,KAAK,eAAeX,MAAM,SAC3DrD,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,QAAf,YAKhBpQ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,QAAf,QACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,iBAAiBZ,GAAG,OAAOc,IAAK1H,EAAMgU,aAEtD/T,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,eAAf,eACApQ,EAAAC,EAAAC,cAAA,YAAUqH,KAAK,OAAOZ,GAAG,cAAcc,IAAK1H,EAAMiU,6FCpHjDC,uBAGnB,SAAAA,EAAYlU,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAiT,IACjB/R,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAA8R,GAAA1R,KAAAvB,KAAMjB,KAsFRmU,SAAW,WACThS,EAAKf,SAAS,CAACgT,QAAQ,EAAOxR,WAAW,KAxFxBT,EA0FnBkS,QAAU,WACRlS,EAAKf,SAAS,CAACkT,WAAW,EAAO1R,WAAW,KAxF5CT,EAAKe,MAAQlD,EAAMkD,MACnBf,EAAKoS,WAAL,4DAAAhQ,OAA8EpC,EAAKe,MAAM+P,IAAzF,KACA9Q,EAAKtB,MAAQ,CACX2T,SAAS,EACTC,YAAa,GACbL,QAAQ,EACRxR,WAAW,EACX0R,WAAW,EACXI,KAAM,GACNrM,IAAK,GACLsM,OAAQ,IAbOxS,mFAiBC,IAAAnB,EAAAC,KAClB2T,KAAMC,IAAN,GAAAtQ,OAAatD,KAAKX,QAAQb,SAA1B,oBAAsD,CAAEqV,OAAQ,CAAE5R,MAAOjC,KAAKiC,MAAM+P,OACjF9N,KAAK,SAAAC,GACJ,IAAMqP,EAAcrP,EAAIU,KAAKiP,MACzBJ,EAAS,IACZF,EAAY/Q,QAAUiR,EAAOnI,KAAK,CACjCwI,UAAS,yEACTC,SAAQ,yEACRC,SAAU,kEACVC,YAAa,4CAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAY/Q,OAAQ0R,IACtCT,EAAOnI,KAAK,CACVyI,SAAQ,GAAA1Q,OAAKvD,EAAKuT,YAAVhQ,OAAuBkQ,EAAYW,IAC3CJ,UAAS,GAAAzQ,OAAKvD,EAAKuT,YAAVhQ,OAAuBkQ,EAAYW,MAGhDpU,EAAKI,SAAS,CAAEoT,SAAS,EAAOC,YAAarP,EAAIU,KAAKiP,MAAOJ,aAE9DzO,MAAM,SAAAC,GAAG,OAAItG,QAAQC,IAAIqG,2CAGhBjD,GACZrD,QAAQC,IAAI,OAAQoD,EAAMkE,OAAQ,WAAYnG,KAAKoU,cAAcC,gLAI3DC,EAAgBtU,KAAKJ,MAAM8T,OAAO1T,KAAKoU,cAAcC,mBAArC,2BAEFV,KAAMC,IAAN,GAAAtQ,OAAatD,KAAKX,QAAQb,SAA1B,sBAChB,CACEqV,OAAQ,CAAE5R,MAAOjC,KAAKiC,MAAM+P,IAAKgC,SAAUM,YAFzCnQ,SAINvF,QAAQC,IAAR,+BAAAyE,OAA2Ca,IAC3CA,EAAMnE,KAAKG,SAAS,CAACwB,WAAW,IAAS3B,KAAKG,SAAS,CAACkT,WAAW,oDAEnEzU,QAAQC,IAAR0V,EAAAC,IACAxU,KAAKG,SAAS,CAACkT,WAAW,0LAIfnN,iFACPuO,EAAS,IAAIC,WACnB1U,KAAKG,SAAS,CAAEsT,KAAMvN,EAAEC,OAAOwO,MAAM,IAAM,WAAQF,EAAOG,cAAchH,EAAKhO,MAAM6T,QACnFgB,EAAOzE,iBAAiB,OAAQ,SAAC/N,GAC/B2L,EAAKzN,SAAS,CAAEiH,IAAKnF,EAAMkE,OAAOkD,WAEpCrJ,KAAKG,SAAS,CAAEgT,QAAQ,kLAGXjN,iFACbA,EAAEhE,kBACI2S,EAAW,IAAIC,UACZC,OAAO,QAAS/U,KAAKJ,MAAM6T,wBAEbE,KAAMqB,KAAN,GAAA1R,OAActD,KAAKX,QAAQb,SAA3B,sBAAyDqW,EAAU,CACtFhB,OAAQ,CACN5R,MAAOjC,KAAKiC,MAAM+P,KAEpBrO,QAAS,CACPC,OAAU,sBACVqR,eAAgB,uCAGXjV,KAAKG,SAAS,CAACwB,WAAW,IAAS3B,KAAKG,SAAS,CAACkT,WAAW,sDAEtEzU,QAAQC,IAAR,4BAAAyE,OAAwC4R,EAAAV,GAAIW,SAAStQ,KAAKgC,QAC1D7G,KAAKG,SAAS,CAACkT,WAAW,kJASrB,IAAA+B,EAAApV,KAAAqV,EAC6BrV,KAAKJ,MAAjC2T,EADD8B,EACC9B,QAASJ,EADVkC,EACUlC,OAAQO,EADlB2B,EACkB3B,OACzB,OACE1U,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACI8T,EAAiGvU,EAAAC,EAAAC,cAACqQ,EAAD,CAAS9J,MAAO,CAAE6P,OAAQ,SAAjHtW,EAAAC,EAAAC,cAACqW,GAAAtW,EAAD,CAAcwH,IAAK,SAAA0N,GAAC,OAAKiB,EAAKhB,cAAgBD,GAAIqB,UAAU,EAAM1B,MAAOJ,IACpF1T,KAAKX,QAAQd,QACZS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACZ6T,EAASnU,EAAAC,EAAAC,cAAA,OAAKkI,IAAKpH,KAAKJ,MAAMwH,IAAK9H,UAAU,YAAY+H,IAAI,KAAY,KAC1ErI,EAAAC,EAAAC,cAAA,QAAMyH,SAAU3G,KAAK2G,SAASkD,KAAK7J,OACjChB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,cAAc8P,QAAQ,cAAapQ,EAAAC,EAAAC,cAAA,KAAGI,UACrDgB,IAAW,CACTmV,qBAAsBtC,EACtBuC,oBAAqBvC,OAEvBA,EACEnU,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASjH,UAAU,eAAeqG,GAAG,eAD1C3G,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OAAOjH,UAAU,cAAcqG,GAAG,aAAamB,SAAU9G,KAAK8G,SAAS+C,KAAK7J,SAGrGhB,EAAAC,EAAAC,cAAA,UAAQQ,QAASM,KAAKyR,SAAS5H,KAAK7J,OAAOhB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBACvDU,KAAKJ,MAAM+B,WAAa3C,EAAAC,EAAAC,cAACsI,EAAD,CAAQ7G,KAAM,qCAAsCV,SAAU,EAAGG,QAASJ,KAAKkT,WACvGlT,KAAKJ,MAAMyT,WAAarU,EAAAC,EAAAC,cAACsI,EAAD,CAAQ9G,OAAO,EAAMC,KAAM,qBAAsBV,SAAU,EAAGG,QAASJ,KAAKoT,WAC9FpU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,cApHiBvB,IAAM0C,YAArBqS,GACZtL,YAAcC,aCJF+N,eAQjB,SAAAA,EAAY5W,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA2V,IACfzU,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAwU,GAAApU,KAAAvB,KAAMjB,KANVa,MAAQ,CACJ+B,WAAW,EACXiU,SAAS,GAGM1U,EAYnB2U,UAAY,SAAC3P,GACTA,EAAEhE,iBACF,IAAMc,EAAO9B,EAAK4U,UAAU1T,QAAQC,MAC9BvB,EAAQI,EAAK6U,WAAW3T,QAAQC,MAChC2T,EAAM9U,EAAK+U,SAAS7T,QAAQC,MAC5B6T,EAAUhV,EAAKiV,aAAa/T,QAAQC,MACpCgK,EAAUnL,EAAKkV,aAAahU,QAAQC,MAGpCmB,EAAO,CAAE1C,QAAOuV,QAFNnV,EAAKoV,aAAalU,QAAQC,MAEXW,OAAMkT,UAASK,OAD/BrV,EAAKsV,YAAYpU,QAAQC,MACc2T,MAAK3J,WAC3DsH,KAAMqB,KAAN,GAAA1R,OACOpC,EAAK7B,QAAQb,SADpB,SAEIgF,EACA,CACIG,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBI,YAAa,YAEhBC,KAAK,WACF,OAAOhD,EAAKf,SAAS,CAAEwB,WAAW,EAAMiU,SAAS,EAAMa,UAAW,sBAErExR,MAAM,SAAAC,GACH,OAAOhE,EAAKf,SAAS,CAAEwB,WAAW,EAAOiU,SAAS,EAAMa,UAAW,sBAAwB,kBAAM,IAAIpS,MAAMa,QAjCnHhE,EAAK4U,UAAY5X,IAAMoI,YACvBpF,EAAK6U,WAAa7X,IAAMoI,YACxBpF,EAAK+U,SAAW/X,IAAMoI,YACtBpF,EAAKiV,aAAejY,IAAMoI,YAC1BpF,EAAKkV,aAAelY,IAAMoI,YAC1BpF,EAAKoV,aAAepY,IAAMoI,YAC1BpF,EAAKsV,YAActY,IAAMoI,YATVpF,wEAyCf,OACIlC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACMO,KAAKJ,MAAMgW,QAsET5W,EAAAC,EAAAC,cAACsI,EAAD,CAAQ9G,OAAQV,KAAKJ,MAAM+B,UAAWhB,KAAMX,KAAKJ,MAAM6W,UAAWxW,SAAU,EAAGG,QAASJ,KAAKjB,MAAMqB,UArEnGpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAACqR,EAAD,MACAvR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,WAASI,UAAU,gBACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACXN,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,gCAIZF,EAAAC,EAAAC,cAAA,WAASI,UAAU,QACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,QAAMyH,SAAU3G,KAAK6V,WACjB7W,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,IAAf,QACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OAAOE,IAAKzG,KAAK8V,aAEjC9W,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,IAAf,UACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,QAAQvD,KAAK,QAAQyD,IAAKzG,KAAK+V,WAAYrP,UAAQ,KAEnE1H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,IAAf,OACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASE,IAAKzG,KAAKiW,YAEnCjX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,IAAf,WACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OAAOE,IAAKzG,KAAKmW,gBAEjCnX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQ8D,KAAK,SAASyD,IAAKzG,KAAKsW,cAC5BtX,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,QAAd,QACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,UAAd,UACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,QAAd,QACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,QAAd,QACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,aAAd,eAGRrD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQ8D,KAAK,SAASyD,IAAKzG,KAAKwW,aAC5BxX,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,QAAd,QACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,UAAd,UACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,SAAd,WAGRrD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,IAAf,YACApQ,EAAAC,EAAAC,cAAA,YAAUI,UAAU,gBAAgBmH,IAAKzG,KAAKoW,aAAc1P,UAAQ,KAExE1H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,UAAQqH,KAAK,SAASjH,UAAU,gBAAhC,yBAjHVsB,aAAjB+U,GACVhO,YAAcC,aCHnB8O,GAAc,CAChB,aACA,aACA,gCAYiBC,8MACjB/W,MAAQ,CACJ6K,UAAW,CACPf,KAAK,EACLkN,UAAU,MAIlBC,GAAK,SAAC3Q,GACgB,KAAdA,EAAE4Q,SACF5V,EAAKf,SAAS,CAAEsK,UAAW,CAAEf,KAAK,EAAOkN,UAAU,QAI3DG,WAAa,WACT7V,EAAKf,SAAS,CAAEsK,UAAW,CAAEmM,UAAU,yFAIvC7S,SAASiM,iBAAiB,UAAWhQ,KAAK6W,mDAI1C9S,SAASkM,oBAAoB,UAAWjQ,KAAK6W,qCAGxC,IAAA9W,EAAAC,KACL,OACIhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAC8X,GAAD,CAAQ/U,MAAOjC,KAAKjB,MAAMkD,SAE9BjD,EAAAC,EAAAC,cAAA,WAASI,UAAU,gBACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZN,EAAAC,EAAAC,cAAA,SAAgBc,KAAKjB,MAAMkD,MAAMiS,YA1CzC+C,MAAM,eACVC,OAAO,SAACC,EAAKlY,EAAG2P,GACvB,IAAMwI,EAAKpY,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,CAAgBqP,IAAKC,KAAKC,MAAQJ,GAAM3P,EAAED,EAAAC,EAAAC,cAAA,YACrD,OAAOiY,EAAI7T,OAAO8T,IACnB,OAyCapY,EAAAC,EAAAC,cAAA,WAASI,UAAU,gBACfN,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,UACKc,KAAKjB,MAAMkD,MAAMyP,QAAQhI,IAAI,SAACiI,EAAQ/C,GAAT,OAAiB5P,EAAAC,EAAAC,cAAA,MAAI4P,IAAKC,KAAKC,MAAQJ,GAAK5P,EAAAC,EAAAC,cAAA,KAAGI,UAAS,MAAAgE,OAAQqO,EAAOxH,QAAtD,IAAkEwH,EAAO3O,KAAM2O,EAAOC,UAAY5S,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KAAET,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,YAAOyS,EAAOC,gBAG/K5S,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,WAASI,UAAU,cACdU,KAAKjB,MAAMkD,MAAMoV,UAAU3N,IAAI,SAAC0N,EAAIE,GACjC,OACItY,EAAAC,EAAAC,cAAA,WAAS4P,IAAKC,KAAKC,MAAQsI,GACvBtY,EAAAC,EAAAC,cAAA,eAAUwX,GAAYY,IACtBtY,EAAAC,EAAAC,cAAA,MAAI4P,IAAKC,KAAKC,MAAQsI,EAAQ,GAEtBF,EAAGH,MAAM,KAAKM,KAAK,SAAAtY,GAAC,OAAIA,EAAEuY,MAAM,MAAQ,GAAK,IAAG9N,IAAI,SAAC+N,EAAMC,GACvD,GAAID,EAAKD,MAAM,MAAO,CAClB,IAAMG,EAAaF,EAAKG,MAAM,GAAGpV,OACjC,OAAQxD,EAAAC,EAAAC,cAAA,MAAI4P,IAAKC,KAAKC,MAAQ0I,GAAQ1Y,EAAAC,EAAAC,cAAA,KAAGI,UAAU,uBAAwBqY,GAE3E,OAAQ3Y,EAAAC,EAAAC,cAAA,MAAI4P,IAAKC,KAAKC,MAAQ0I,GAAQ1Y,EAAAC,EAAAC,cAAA,KAAGI,UAAU,uBAAwBmY,UAS3GzY,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,WAAQK,EAAKI,SAAS,CAAEsK,UAAW,CAAEf,KAAK,EAAOkN,UAAU,OAA5E,qBAEH5W,KAAKJ,MAAM6K,UAAUmM,UAClB5X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAC2Y,GAAD,CAAU5V,MAAOjC,KAAKjB,MAAMkD,MAAO7B,QAASJ,KAAK+W,wBAzE1CnW,aCHjCkX,uBAiBF,SAAAA,EAAY/Y,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA8X,IACf5W,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAA2W,GAAAvW,KAAAvB,KAAMjB,KAjBVa,MAAQ,CACJmY,UAAU,EACVjG,OAAQ,GACRkG,WAAW,EACXC,cAAe,KACf3M,KAAM,GACNwE,SAAS,EACTnO,WAAW,EACX0R,WAAW,EACXoD,UAAW,IAOIvV,EAJnBgX,UAAW,EAIQhX,EAanB2V,GAAK,SAAC3Q,GACgB,KAAdA,EAAE4Q,SACF5V,EAAKf,SAAS,CAAE8X,cAAe,QAfpB/W,EA6BnBiX,wBAA0B,WACtBjX,EAAKf,SAAS,CAAE4X,UAAU,KA9BX7W,EAiCnBkX,gBAAkB,SAAA9M,GACVA,EAAK7I,QACLvB,EAAKf,SAAS,CAAEmL,UAnCLpK,EAuCnBmX,cAAgB,SAACC,GACb,OAAOnX,OAAAkK,EAAA,EAAAlK,CAAImX,EAASlW,QAAQmW,UAAU7O,IAAI,SAAAY,GAAA,IAAGtE,EAAHsE,EAAGtE,YAAH,OAAAsE,EAAgBkO,QAAqB,GAAAlV,OAAM0C,EAAYR,WAAlB,IAAAlC,OAAoC0C,EAAYR,aAAaiT,KAAK,MAxClIvX,EA2CnBwX,kBAAoB,SAACnS,GACJ,WAATA,IACArF,EAAKyR,cAAcvQ,QAAQC,MAAQnB,EAAKuR,aAAarQ,QAAQuW,gBAAgB,GAAGtW,MAChFzD,QAAQC,IAAIqC,EAAKyR,cAAcvQ,QAAQC,QAE9B,aAATkE,GAAuBrF,EAAKuR,aAAarQ,QAAQuW,gBAAgBlW,SACjEvB,EAAKuR,aAAarQ,QAAQuW,gBAAgB,GAAGtW,MAAQnB,EAAKyR,cAAcvQ,QAAQC,QAjDrEnB,EAqDnB0X,oBAAsB,WAClB1X,EAAKf,SAAS,CAAE4X,UAAU,IAE1B,IAAMlR,EAAQ3F,EAAKkR,WAAWhQ,QAAQC,MAChC6N,GAAShP,EAAKmR,WAAWjQ,QAAQC,MACjC8N,EAAOjP,EAAK6R,UAAU3Q,QAAQC,MAC9B6R,EAAchT,EAAK8R,iBAAiB5Q,QAAQC,MAC5CiO,GAAYpP,EAAKoR,cAAclQ,QAAQC,MACvCwW,EAAW1X,OAAAkK,EAAA,EAAAlK,CAAOD,EAAKuR,aAAarQ,QAAQuW,iBAC5CjH,EAAUmH,GAAeA,EAAYnP,IAAI,SAAAiI,GAAM,MAAK,CAAExH,KAAMwH,EAAO9K,MAAO7D,KAAM2O,EAAOpI,MAAOqI,SAAUD,EAAOtP,OAAS,MAIxHgV,EAAY,CAHCnW,EAAKmX,cAAcnX,EAAK0R,iBACxB1R,EAAKmX,cAAcnX,EAAK2R,iBACxB3R,EAAKmX,cAAcnX,EAAK4R,kBAG3C,KAA4B,IAAxBjM,EAAMrE,OAAOC,QACbyN,GAAS,GACc,IAAvBC,EAAK3N,OAAOC,QACkB,IAA9ByR,EAAY1R,OAAOsW,QAHvB,CAOA,IAAIpW,EAAc,CACdC,MAAK,4jCAgCLC,UAAW,CAAEiE,QAAOqN,cAAa/D,OAAMD,QAAOI,WAAUhF,KAAMpK,EAAKtB,MAAM0L,KAAMoG,UAAS2F,cAG5FhU,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAK,GACFrD,EAAKf,SAAS,SAAAgL,GACV,IAAM4N,EAAa5X,OAAAkK,EAAA,EAAAlK,CAAOgK,EAAU2G,QAapC,OAZAiH,EAAcxN,KAAK,CACfyG,IAAKzN,EAASM,KAAKmU,YAAYhH,IAC/BnL,MAAOtC,EAASM,KAAKmU,YAAYnS,MACjCqJ,MAAO3L,EAASM,KAAKmU,YAAY9I,MACjCC,KAAM5L,EAASM,KAAKmU,YAAY7I,KAChC+D,YAAa3P,EAASM,KAAKmU,YAAY9E,YACvC5D,SAAU/L,EAASM,KAAKmU,YAAY1I,SACpCD,eAAgB9L,EAASM,KAAKmU,YAAY3I,eAC1C/E,KAAM/G,EAASM,KAAKmU,YAAY1N,KAChCoG,QAASnN,EAASM,KAAKmU,YAAYtH,QACnC2F,UAAW9S,EAASM,KAAKmU,YAAY3B,YAElC,CAAEvF,OAAQiH,EAAezN,KAAM,QAG7CpH,KAAK,kBAAMhD,EAAKf,SAAS,CAAEwB,WAAW,EAAM8U,UAAW,oCACvDxR,MAAM,SAAAC,GAEH,OADAhE,EAAKf,SAAS,CAAEkT,WAAW,EAAMoD,UAAW,wBACrC,IAAIpS,MAAMa,OApJVhE,EAwJnB+X,mBAAqB,WACjB/X,EAAKf,SAAS,CAAE4X,UAAU,EAAOE,cAAe,KAAM3M,KAAM,GAAIwE,SAAS,KAzJ1D5O,EAkNnBgY,kBAAoB,SAAA7H,GAChBnQ,EAAKf,SAAS,SAAAgL,GAEV,MAAO,CAAE8M,cADa9M,EAAU2G,OAAOnF,KAAK,SAAA1K,GAAK,OAAIA,EAAM+P,MAAQX,QApNxDnQ,EAyNnBiY,iBAAmB,WAEf,GADcjY,EAAK7B,QAAQjB,OAK3B,KAAI8C,EAAKtB,MAAMqY,cAAc5H,gBAAkBnP,EAAKtB,MAAMqY,cAAc3H,UAAxE,CACA,IAAI5N,EAAc,CACdC,MAAK,2JAOTU,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAK,GACF,IAAM6U,EAAS3U,YAAK,CAAC,OAAQ,YAAa,MAAOF,GAC7C6U,IACA1W,EAAc,CACVC,MAAK,kWAQLC,UAAW,CACPyW,aAAc,CACVC,UAAUF,EACV/H,QAASnQ,EAAKtB,MAAMqY,cAAcjG,IAClCuH,UAAWrY,EAAKtB,MAAMqY,cAAc/H,SAIhD7M,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEhBC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAK,GACErD,EAAKgX,UACLhX,EAAKf,SAAS,CAAE8X,cAAe,KAAMxB,UAAW,mCAAoC9U,WAAW,MAGtGsD,MAAM,SAAAC,GAAG,OAAI,IAAIb,MAAJ,4CAAAf,OAAsD4B,SAG3ED,MAAM,SAAAC,GAIH,MAHIhE,EAAKgX,UACLhX,EAAKf,SAAS,CAAE8X,cAAe,KAAMxB,UAAW,4BAA6BpD,WAAW,IAEtF,IAAIhP,MAAMa,WA5EpBhE,EAAKf,SAAS,CAAE8X,cAAe,QA5NpB/W,EA4SnBsY,WAAa,WACTtY,EAAKf,SAAS,CAAEwB,WAAW,EAAO0R,WAAW,EAAOoD,UAAW,MA7ShDvV,EAgTnBuY,mBAAqB,SAACpI,GAClB,IAAKA,EAAS,OAAO,IAAIhN,MAAM,0BAC/BzF,QAAQC,IAAIwS,GACZ,IAAM3O,EAAc,CAChBC,MAAK,uGAGLC,UAAW,CAAEyO,YAGjBhO,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAW,GACFjG,QAAQC,IAAIgG,GACZ3D,EAAKf,SAAS,SAACgL,GAEX,MAAO,CAAE2G,OADM3G,EAAU2G,OAAOtF,OAAO,SAAAvK,GAAK,OAAIA,EAAM+P,MAAQX,IAC7C1P,WAAW,EAAM8U,UAAW,sCAGpDxR,MAAM,SAAAC,GAEH,OADAhE,EAAKf,SAAS,CAAEkT,WAAW,EAAMoD,UAAW,yBACrC,IAAIpS,MAAMa,MAnVVhE,EAuVnBwY,eAAiB,WACbxY,EAAKf,SAAU,CAAC2P,SAAU5O,EAAKtB,MAAMkQ,WAtVrC5O,EAAKkR,WAAalU,IAAMoI,YACxBpF,EAAKmR,WAAanU,IAAMoI,YACxBpF,EAAK6R,UAAY7U,IAAMoI,YACvBpF,EAAK8R,iBAAmB9U,IAAMoI,YAC9BpF,EAAKoR,cAAgBpU,IAAMoI,YAC3BpF,EAAKuR,aAAevU,IAAMoI,YAC1BpF,EAAKyR,cAAgBzU,IAAMoI,YAC3BpF,EAAK0R,gBAAkB1U,IAAMoI,YAC7BpF,EAAK2R,gBAAkB3U,IAAMoI,YAC7BpF,EAAK4R,gBAAkB5U,IAAMoI,YAXdpF,mFAoBflB,KAAK2Z,cACL5V,SAASiM,iBAAiB,UAAWhQ,KAAK6W,mDAI1C7W,KAAKkY,UAAW,EAChBnU,SAASkM,oBAAoB,UAAWjQ,KAAK6W,0CAkInC,IAAA9W,EAAAC,KACVA,KAAKG,SAAS,CAAE6X,WAAW,IA2B3B3U,MAAK,GAAAC,OAAItD,KAAKX,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UA5BG,CACdf,MAAK,4tBA4BLgB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEhBC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEVJ,KAAK,SAAAK,GACF,IAAMuN,EAASvN,EAASM,KAAKiN,OAAO3I,UACpCpJ,EAAKI,SAAS,CAAE2R,OAAQA,EAAQkG,WAAW,MAE9C/S,MAAM,SAAAC,GAEH,MADAnF,EAAKI,SAAS,CAAE6X,WAAW,IACrB,IAAI3T,MAAMa,sCA6InB,IAAA0I,EAAA5N,KACL,OACIhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,WAASI,UAAU,qBACbU,KAAKJ,MAAMmY,UAAY/X,KAAKJ,MAAMqY,gBAAkBjZ,EAAAC,EAAAC,cAACqR,EAAD,MACrDvQ,KAAKJ,MAAMmY,UAAY/X,KAAKX,QAAQd,SACjCS,EAAAC,EAAAC,cAAC0a,GAAD,CACI/S,MAAM,WACN6J,WAAS,EACT/B,UAAU,EACViC,YAAU,EACVD,SAAU3Q,KAAKiZ,mBACfpI,UAAW7Q,KAAK4Y,oBAChB9H,YAAY,WACZ9R,EAAAC,EAAAC,cAAA,KAAGI,UAAU,UAAU6H,KAAK,KAAKzH,QAAS,SAACwG,GAAQA,EAAEhE,iBAAkB0L,EAAKzN,SAAS,CAAE2P,SAAS,MAAW9Q,EAAAC,EAAAC,cAAA,yBAA3G,aACCc,KAAKJ,MAAMkQ,SACR9Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAACqR,EAAD,MACAvR,EAAAC,EAAAC,cAACsR,GAAD,CAAWpQ,QAASJ,KAAK0Z,gBACrB1a,EAAAC,EAAAC,cAACuR,EAAD,CAAK/E,aAAc1L,KAAKoY,gBAAiBzJ,UAAU,MAI/D3P,EAAAC,EAAAC,cAAC2a,GAAD,CACI/S,SAAU9G,KAAK0Y,kBACftG,WAAYpS,KAAKoS,WACjBC,WAAYrS,KAAKqS,WACjBU,UAAW/S,KAAK+S,UAChBT,cAAetS,KAAKsS,cACpBU,iBAAkBhT,KAAKgT,iBACvBP,aAAczS,KAAKyS,aACnBE,cAAe3S,KAAK2S,cACpBC,gBAAiB5S,KAAK4S,gBACtBC,gBAAiB7S,KAAK6S,gBACtBC,gBAAiB9S,KAAK8S,mBAGjC9S,KAAKJ,MAAM+B,WAAa3C,EAAAC,EAAAC,cAACsI,EAAD,CAAQvH,SAAU,EAAGU,KAAMX,KAAKJ,MAAM6W,UAAWrW,QAASJ,KAAKwZ,aACvFxZ,KAAKJ,MAAMyT,WAAarU,EAAAC,EAAAC,cAACsI,EAAD,CAAQvH,SAAU,EAAGU,KAAMX,KAAKJ,MAAM6W,UAAW/V,OAAO,EAAMN,QAASJ,KAAKwZ,aACpGxZ,KAAKJ,MAAMqY,eACRjZ,EAAAC,EAAAC,cAAC0a,GAAD,CACI/S,MAAO7G,KAAKJ,MAAMqY,cAAcpR,MAChCwJ,eAAgBrQ,KAAKJ,MAAMqY,cAAc5H,gBAAkB,EAC3DC,SAAUtQ,KAAKJ,MAAMqY,cAAc3H,UAAY,EAC/CrO,MAAOjC,KAAKJ,MAAMqY,cAClBnH,YAAa9Q,KAAKX,QAAQjB,MAAQ,OAAS,UAC3CsS,WAAS,EACTE,YAAU,EACVjC,UAAU,EACVgC,SAAU3Q,KAAKiZ,mBACfpI,UAAW7Q,KAAKmZ,iBAAiBtP,QACjC7K,EAAAC,EAAAC,cAAC4a,GAAD,CACI7X,MAAOjC,KAAKJ,MAAMqY,iBAI7BjY,KAAKX,QAAQjB,OAAS4B,KAAKX,QAAQd,SAChCS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,MAAMI,QAASM,KAAKmY,yBAAtC,QAMPnY,KAAKJ,MAAMoY,UACRhZ,EAAAC,EAAAC,cAACqQ,EAAD,MACAvQ,EAAAC,EAAAC,cAAC6a,GAAD,CACIjI,OAAQ9R,KAAKJ,MAAMkS,OACnBP,SAAUvR,KAAKX,QACf4S,aAAcjS,KAAKkZ,kBACnBzH,SAAUzR,KAAKyZ,8BAlblB7Y,cAAnBkX,GAeKnQ,YAAcC,EA4aVkQ,sHChZAkC,WAxDK,SAAAjb,GAAK,OACvBC,EAAAC,EAAAC,cAAA,MAAII,UAAU,iBACXP,EAAMkb,QAAQvQ,IAAI,SAAAzH,GACjB,IAAMkO,EAAOlO,EAAMkO,KACf+J,KAAO,IAAInL,MAAM9M,EAAMkO,MAAMgK,eAAeC,WAC5C/b,EACJ,OACEW,EAAAC,EAAAC,cAAA,MAAI4P,IAAK7M,EAAM0D,GAAIrG,UAAU,uBAC3BN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UAAK+C,EAAM4E,OAAS5E,EAAMe,MAC1BhE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YAAOiR,GAAQA,EAAKkK,OAAO,QAC3Brb,EAAAC,EAAAC,cAAA,YAAO+C,EAAMqY,SAAb,YAEFtb,EAAAC,EAAAC,cAAA,cACG,KACA+C,EAAMiO,SAIblR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACgBF,EAAAC,EAAAC,cAAA,cAASiR,GAAQA,EAAKkK,OAAO,OAD7C,MACgE,IAC9Drb,EAAAC,EAAAC,cAAA,cAASiR,GAAQA,EAAKoK,SAAS,EAAG,QAAQF,OAAO,OAAgB,IAFnE,uBAMFrb,EAAAC,EAAAC,cAAA,YACIH,EAAMyb,UACNxb,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KACLzH,QAASX,EAAM0b,iBAAiB5Q,YAAW,CAAC5H,EAAM0D,GAAI,KACrD3G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,wBAGjBP,EAAMyb,UACNxb,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KACLzH,QAASX,EAAM0b,iBAAiB5Q,YAAW,CAAC5H,EAAM0D,IAAK,KACtD3G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,yBAGjBP,EAAMyb,UACNxb,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KACLzH,QAASX,EAAM0S,SAAS5H,YAAW5H,EAAM0D,KACxC3G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,sCC7C3Bob,WAAiB,CACnBC,MAAS,CACLC,IAAK,EACLC,IAAK,IAETC,OAAU,CACNF,IAAK,GACLC,IAAK,KAETE,UAAa,CACTH,IAAK,IACLC,IAAK,OAyCEG,GArCO,SAAAjc,GAClB,IAAIkc,EAAe,GACbC,EAAY,CAAEC,OAAQ,GAAIC,SAAU,IAFfC,EAAA,SAGhBC,GACP,IAAMC,EAAwBxc,EAAMyc,SAAStE,OAAO,SAACjL,EAAMwP,GACvD,OAAIA,EAAKvL,OAASwK,GAAeY,GAAMV,KAAOa,EAAKvL,OAASwK,GAAeY,GAAMT,IACtE5O,EAAO,EAEPA,GAEZ,GACCyP,EAAY,GAChB,OAAQJ,GACJ,IAAK,QAASI,EAAY,wBACtB,MACJ,IAAK,SAAUA,EAAY,UACvB,MACJ,IAAK,YAAaA,EAAY,2BAC1B,MACJ,QAASA,EAAY,wBAEzBR,EAAUC,OAAO5P,KAAK+P,GACtBL,EAAa1P,KAAKgQ,GAClBL,EAAUE,SAAS7P,KAAK,CACpBmQ,YACAC,YAAa,wBACbC,cAAe,yBACfC,gBAAiB,sBACjBhX,KAAMoW,KAEVA,EAAY9Z,OAAAkK,EAAA,EAAAlK,CAAO8Z,IACNA,EAAaxY,OAAS,GAAK,GA5B5C,IAAK,IAAM6Y,KAAQZ,GAAgBW,EAAxBC,GA+BX,OAAOtc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAiBN,EAAAC,EAAAC,cAAC4c,GAAA,IAAD,CAAKjX,KAAMqW,EAAWa,MAAM,MAAM5N,OAAO,UCxCrE6N,WAVU,SAAAjd,GACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,UAAQI,UAAoC,SAAzBP,EAAMkd,iBAA4B,SAAW,GAAIvc,QAASX,EAAM+H,SAAS+C,YAAW,SAAvG,QACA7K,EAAAC,EAAAC,cAAA,UAAQI,UAAoC,UAAzBP,EAAMkd,iBAA6B,SAAW,GAAIvc,QAASX,EAAM+H,SAAS+C,YAAW,UAAxG,SACA7K,EAAAC,EAAAC,cAAA,UAAQI,UAAoC,YAAzBP,EAAMkd,iBAA+B,SAAW,GAAIvc,QAASX,EAAM+H,SAAS+C,YAAW,YAA1G,oBCRGqS,GADO,CAAE,aAAe,UAAY,eAAiB,WAAa,yBAA2B,WAAa,oBAAsB,mBAAqB,UAAY,SAAW,UAAY,UAAY,UAAY,QAAU,SAAW,UAAY,gBAAkB,WAAa,QAAU,qCAAuC,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,aAAe,UAAY,eAAiB,aAAe,UAAY,UAAY,gBAAkB,OAAS,YAAc,+CAAiD,SAAW,oBAAsB,aAAe,QAAU,SAAW,WAAa,gBAAkB,UAAY,UAAY,iBAAmB,QAAU,cAAgB,SAAW,SAAW,YAAc,YAAc,QAAU,OAAS,UAAY,SAAW,UAAY,QAAU,UAAY,YAAc,WAAa,oCAAsC,YAAc,cAAgB,wBAA0B,QAAU,WAAa,yBAA2B,WAAa,OAAS,SAAW,mBAAqB,mBAAqB,OAAS,WAAa,cAAgB,WAAa,SAAW,4BAA8B,SAAW,iBAAmB,UAAY,QAAU,eAAiB,UAAY,QAAU,UAAY,kBAAoB,WAAa,UAAY,WAAa,eAAiB,QAAU,UAAY,aAAe,UAAY,aAAe,eAAiB,UAAY,SAAW,aAAe,UAAY,OAAS,QAAU,WAAa,mBAAqB,YAAc,YAAc,QAAU,SAAW,WAAa,aAAe,2BAA6B,aAAe,aAAe,cAAgB,SAAW,WAAa,WAAa,SAAW,SAAW,SAAW,iCAAmC,eAAiB,UAAY,OAAS,mBAAqB,aAAe,gBAAkB,YAAc,cAAgB,SAAW,UAAY,UAAY,gBAAkB,QAAU,iBAAmB,UAAY,cAAgB,QAAU,QAAU,OAAS,eAAiB,SAAW,cAAgB,cAAgB,WAAa,QAAU,WAAa,QAAU,gBAAkB,SAAW,wBAA0B,2BAA6B,mCAAqC,iBAAmB,SAAW,mBAAqB,aAAe,UAAY,aAAe,OAAS,YAAc,QAAU,eAAiB,aAAe,QAAU,cAAgB,WAAa,WAAa,WAAa,wBAA0B,UAAY,wBAA0B,WAAa,cAAgB,WAAa,cAAgB,SAAW,UAAY,aAAe,eAAiB,aAAe,aAAe,iBAAmB,YAAc,SAAW,QAAU,qBAAuB,WAAa,WAAa,UAAY,yBAA2B,UAAY,QAAU,UAAY,gBAAkB,UAAY,UAAY,uCAAyC,UAAY,cAAgB,OAAS,SAAW,SAAW,sBAAwB,SAAW,YAAc,gBAAkB,SAAW,QAAU,YAAc,aAAe,UAAY,UAAY,WAAa,8BAAgC,OAAS,OAAS,2BAA6B,QAAU,UAAY,mCAAqC,uBAAyB,UAAY,sBAAwB,cAAgB,WAAa,sBAAwB,UAAY,OAAS,UAAY,UAAY,SAAW,aAAe,iBAAmB,YAAc,YAAc,UAAY,QAAU,QAAU,gBAAkB,aAAe,UAAY,YAAc,UAAY,QAAU,cCiF7nHC,WA3Ef,SAAAC,GAGI,SAAAD,EAAYpd,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAmc,IACfjb,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAgb,GAAA5a,KAAAvB,KAAMjB,KAHVsd,SAAW,2CAEQnb,EAMnBob,mBAAqB,SAAApW,GACjBA,EAAEC,OAAON,UAAUC,IAAI,YAClBI,EAAEC,OAAOoW,SAASC,OAKnBtW,EAAEC,OAAOsW,mBAAmB5W,UAAUC,IAAI,sBAC1CI,EAAEC,OAAOsW,mBAAmB5W,UAAUP,OAAO,oBAC7CY,EAAEC,OAAOsW,mBAAmBC,UAAY,GACxCxb,EAAKnC,MAAM4d,aAAazW,EAAEC,OAAOnD,KAAjC9B,CAAuCgF,EAAEC,OAAO9D,SAPhD6D,EAAEC,OAAOsW,mBAAmB5W,UAAUP,OAAO,sBAC7CY,EAAEC,OAAOsW,mBAAmB5W,UAAUC,IAAI,oBAC1CI,EAAEC,OAAOsW,mBAAmBC,UAAYxW,EAAEC,OAAOyW,mBAOrD,IAAMC,EAAM1b,OAAAkK,EAAA,EAAAlK,CAAOD,EAAK4b,eAAe1a,QAAQmW,UAC/BsE,EAAOE,KAAK,SAAAC,GAAK,OAAKA,EAAMT,SAASC,QACaK,EAAOI,QAAQ,SAAA7F,GAC7EA,EAAGvR,UAAUC,IAAI,YACjB5E,EAAKnC,MAAM4d,aAAa,sBAAxBzb,EAA+C,KAFxCA,EAAKnC,MAAM4d,aAAa,sBAAxBzb,EAA+C,IAlB1DA,EAAKnC,MAAQA,EACbmC,EAAK4b,eAAiB5e,IAAMoI,YAHbpF,EAHvB,OAAAC,OAAA+b,EAAA,EAAA/b,CAAAgb,EAAAC,GAAAjb,OAAAgc,EAAA,EAAAhc,CAAAgb,EAAA,EAAArN,IAAA,SAAAzM,MAAA,WA8BQ,IAAM+a,EAASpd,KAAKjB,MAAMqe,OAC1B,OACIpe,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,YAAUI,UAAU,kBAAkBmH,IAAKzG,KAAK8c,gBAC5C9d,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,KAAGI,UAAU,YACTN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,aAAf,gBACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OAAOZ,GAAG,YAAY3C,KAAK,YAAYmP,UAAU,KAAKkL,aAAcD,EAAOE,UAAWC,QAASvd,KAAKsc,mBAAoB5V,UAAQ,IAC5I1H,EAAAC,EAAAC,cAAA,QAAMse,YAAU,YAEpBxe,EAAAC,EAAAC,cAAA,KAAGI,UAAU,YACTN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,YAAf,eACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,OAAOZ,GAAG,WAAW3C,KAAK,WAAWmP,UAAU,KAAKkL,aAAcD,EAAOK,SAAUF,QAASvd,KAAKsc,mBAAoB5V,UAAQ,IACzI1H,EAAAC,EAAAC,cAAA,QAAMse,YAAU,YAEpBxe,EAAAC,EAAAC,cAAA,KAAGI,UAAU,YACTN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,eAAf,WACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,QAAQZ,GAAG,cAAc3C,KAAK,cAAcmP,UAAU,MAAMkL,aAAcD,EAAOM,YAAaH,QAASvd,KAAKsc,mBAAoB5V,UAAQ,IACpJ1H,EAAAC,EAAAC,cAAA,QAAMse,YAAU,YAEpBxe,EAAAC,EAAAC,cAAA,KAAGI,UAAU,YACTN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,WAAf,aACApQ,EAAAC,EAAAC,cAAA,SAAOye,KAAK,YAAYhY,GAAG,UAAU3C,KAAK,UAAUqa,aAAcD,EAAOlH,QAASpP,SAAU9G,KAAKsc,mBAAoB5V,UAAQ,IAC7H1H,EAAAC,EAAAC,cAAA,QAAMse,YAAU,WAChBxe,EAAAC,EAAAC,cAAA,YAAUyG,GAAG,aACRuW,GAAcxS,IAAI,SAAAwM,GAAO,OAAIlX,EAAAC,EAAAC,cAAA,UAAQ4P,IAAKoH,EAAS7T,MAAO6T,QAGnElX,EAAAC,EAAAC,cAAA,KAAGI,UAAU,YACTN,EAAAC,EAAAC,cAAA,SAAOkQ,QAAQ,eAAf,kBACApQ,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,MAAMZ,GAAG,cACjB3C,KAAK,cAAcqa,aAAcD,EAAOQ,YACxCzL,UAAU,KACVoL,QAASvd,KAAKsc,mBACd9V,YAAY,0BACZI,QAAS5G,KAAKqc,SACd3V,UAAQ,IACZ1H,EAAAC,EAAAC,cAAA,QAAMse,YAAU,kBAnExCrB,EAAA,CAAqCvb,qBCFrC,SAASid,GAAU9e,GACjB,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAW,kBAAmBP,EAAM4Q,UAGlD,IAAMmO,GAAkB,SAAA/e,GAAS,IAAAgf,EACUC,oBAAS,GADnBC,EAAA9c,OAAA+c,GAAA,EAAA/c,CAAA4c,EAAA,GACxBI,EADwBF,EAAA,GACVG,EADUH,EAAA,GAAAI,EAEGL,mBAASjf,EAAMuf,YAFlBC,EAAApd,OAAA+c,GAAA,EAAA/c,CAAAkd,EAAA,GAExBG,EAFwBD,EAAA,GAEbE,EAFaF,EAAA,GAe/B,OAZAG,oBACE,WACMF,IAAczf,EAAMuf,aACtBF,GAAiB,GACjBle,WAAW,WACTke,GAAiB,IAChB,KACHK,EAAa1f,EAAMuf,cAGvB,CAACvf,EAAMuf,aAGPtf,EAAAC,EAAAC,cAAA,WACEI,UAAU,6BACVmG,MAAO,CAAEkZ,WAAY5f,EAAM6f,WAE3B5f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,sBAAcH,EAAM+S,OAAOrP,OAA3B,WACAzD,EAAAC,EAAAC,cAAA,UACEI,UAAWgB,IAAW,CACpBue,gBAAiBV,KAFrB,MAKMpf,EAAMuf,aAGdtf,EAAAC,EAAAC,cAAA,KAAGI,UAAU,mBACVP,EAAM+f,WAAa,qBAAuB,sBAE5C/f,EAAM4Q,kBCrCE,SAASoP,GAATzU,GAAoG,IAAA0U,EAAA1U,EAA9E8S,OAAUE,EAAoE0B,EAApE1B,UAAWG,EAAyDuB,EAAzDvB,SAAUC,EAA+CsB,EAA/CtB,YAAaxH,EAAkC8I,EAAlC9I,QAAS0H,EAAyBoB,EAAzBpB,YAAaqB,EAAYD,EAAZC,QACnG,OACIjgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,MAAII,UAAU,8BACVN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BAA2BF,EAAAC,EAAAC,cAAA,YAAOoe,IACtCte,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,2BAA0BF,EAAAC,EAAAC,cAAA,YAAOue,IACrCze,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAsBF,EAAAC,EAAAC,cAAA,YAAOwe,IACjC1e,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAwBF,EAAAC,EAAAC,cAAA,YAAOgX,IACnClX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAsBF,EAAAC,EAAAC,cAAA,YAAO0e,IACjC5e,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAA8BF,EAAAC,EAAAC,cAAA,YAAO+f,iBC4B1CC,GAtCQ,WACnB,OACIlgB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,qBAAd,qBACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mBACVN,EAAAC,EAAAC,cAAA,MAAII,UAAU,kCAAkCuH,MAAM,WACtD7H,EAAAC,EAAAC,cAAA,MAAII,UAAU,sCAAsCuH,MAAM,eAC1D7H,EAAAC,EAAAC,cAAA,MAAII,UAAU,gCAAgCuH,MAAM,SACpD7H,EAAAC,EAAAC,cAAA,MAAII,UAAU,mCAAmCuH,MAAM,YACvD7H,EAAAC,EAAAC,cAAA,MAAII,UAAU,gCAAgCuH,MAAM,UAG5D7H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,4BACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,qBAAd,iBACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,4BAAb,wCACIN,EAAAC,EAAAC,cAAA,sDADJ,2BAKRF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,qBAAd,wBACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,sBACTN,EAAAC,EAAAC,cAAA,wCADJ,8DAIAF,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BACTN,EAAAC,EAAAC,cAAA,iCADJ,2DCCLigB,sNA1BXxC,aAAe,SAACzW,GACRtH,QAAQC,IAAIqH,4EAIhB,OACIlH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACAT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,2BAEIF,EAAAC,EAAAC,cAACkgB,EAAA,kBAAD,OAEJpgB,EAAAC,EAAAC,cAAA,+BAEIF,EAAAC,EAAAC,cAACkgB,EAAA,kBAAD,OAEJpgB,EAAAC,EAAAC,cAAA,mBAEIF,EAAAC,EAAAC,cAACkgB,EAAA,eAAD,gBApBMlhB,IAAM0C,sBCQ1Bye,uBAeF,SAAAA,EAAYtgB,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAqf,IACfne,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAke,GAAA9d,KAAAvB,KAAMjB,KAbVa,MAYmBuB,OAAAqK,EAAA,EAAArK,CAAA,CAXfme,YAAY,EACZlb,OAAQ,CACJmb,WAAW,EACXC,QAAQ,EACRjM,SAAS,GAEbkM,eAAe,EACfC,cAAe,IACZxe,EAAKnC,MAAMqe,OAAOA,QAGNlc,EAKnBye,aAAe,SAACC,GACZA,EAAG1d,iBACHhB,EAAKnC,MAAM8gB,OAAOC,YAAY,CAAEvZ,KAAM,OAAQvD,KAAM9B,EAAKtB,MAAM0d,YAAapZ,KAAK,SAAAoG,GAAA,IAAGlM,EAAHkM,EAAGlM,MAAH,OAAe8C,EAAKf,SAAS,CAAE/B,MAAOA,EAAMuH,OAAOV,MAAM,SAAAC,GAAG,OAAItG,QAAQC,IAAIqG,KAC7JhE,EAAKnC,MAAM8gB,OAAOE,oBAAoB,OAAQ,CAAEC,gBAAiB,CAAEhd,KAAM9B,EAAKtB,MAAM0d,aAC/EpZ,KAAK,SAAA+b,GAAiC,IAAbC,EAAaD,EAA9BE,cAAiBD,KACtBhf,EAAKkf,eAAeF,KAEvBjb,MAAM,SAACC,GAAD,OAAStG,QAAQC,IAAIqG,MAZjBhE,EAenBkf,eAAiB,WACb,IAAMC,EAAgB,CAClB/C,UAAWpc,EAAKtB,MAAM0d,UACtBG,SAAUvc,EAAKtB,MAAM6d,SACrBvH,QAAShV,EAAKtB,MAAMsW,QACpBoK,UAAWpf,EAAKtB,MAAMqf,SAAW,GACjCvB,YAAaxc,EAAKtB,MAAM8d,YACxBE,YAAa1c,EAAKtB,MAAMge,aAGtB2C,EAAY7W,aADA,SAAA8W,GAAA,MAAsB,CAAE7a,GAAxB6a,EAAExO,IAA+BsI,SAAjCkG,EAAOlG,WACP5Q,CAAexI,EAAKtB,MAAMkS,QACxCpP,EAAc,CACdC,MAAK,6PAQLC,UAAW,CAAE6d,iBAAkB,CAAEriB,MAAO8C,EAAKtB,MAAMxB,MAAOsiB,MAAgC,IAAxBxf,EAAKtB,MAAM0e,WAAmBiC,eAEpGld,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAC,GACF,GAAIA,EAAIO,OAAQ,CACZxD,EAAKf,SAAS,CAAEsf,eAAe,EAAMC,cAAevb,EAAIO,OAAO,GAAG2H,UAClE,IAAMsU,EAAeC,aAAO,CAACzc,EAAIO,OAAO,GAAG2H,SAAU,CAAC,aAAc,YAAa,eAAgBlI,EAAIO,OAAO,IAE5G,OADAxD,EAAKf,SAAS,CAAEuf,cAAeiB,EAAa,GAAIlB,eAAe,IACxD,IAAIpb,MAAMF,EAAIO,OAAO,GAAG2H,SAE/B,OAAOlI,IAGdD,KAAK,SAAA2c,GAAuD,IAAAC,EAAAD,EAApDhc,KAAQkc,cAAiBpb,EAA2Bmb,EAA3Bnb,GAAIqb,EAAuBF,EAAvBE,KAAM5c,EAAiB0c,EAAjB1c,OACpC4c,IACAte,EAAc,CACVC,MAAK,kPAKLC,UAAW,CACPqe,cAAc9f,OAAAqK,EAAA,EAAArK,CAAA,GACPkf,EADM,CAETa,cAAevb,EACfwb,SAAUjgB,EAAKtB,MAAM0e,WACrB8C,cAAelgB,EAAKtB,MAAM0Z,UAC1B+H,kBAAmBjd,MAI/Bf,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEhBC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAC,GACFjD,EAAKf,SAAS,CAAEiE,OAAOjD,OAAAwM,EAAA,EAAAxM,CAAA,GAAIiD,GAAS,GAAQqb,eAAe,MAE9Dxa,MAAM,SAAAC,GAAG,mBAAA5B,OAAiB4B,QAGlCD,MAAM,SAAAC,GAAG,sBAAA5B,OAAoB4B,MArGlChE,EAAKnC,MAAQA,EAFEmC,wEA0GV,IAAAnB,EAAAC,KAAAqV,EAC4ErV,KAAKJ,MADjF0hB,EAAAjM,EACGjR,OAAUmb,EADb+B,EACa/B,UAAWhM,EADxB+N,EACwB/N,QAASiM,EADjC8B,EACiC9B,OAAUC,EAD3CpK,EAC2CoK,cAAeC,EAD1DrK,EAC0DqK,cAC/D,OACI1gB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,QAAMyH,SAAU3G,KAAK2f,aAAcrgB,UAAU,uBACzCN,EAAAC,EAAAC,cAACqiB,GAAD,MACAviB,EAAAC,EAAAC,cAAA,gCAEFugB,GAAiBzgB,EAAAC,EAAAC,cAACsI,EAAD,CAAQ7G,KAAM+e,EAAehf,OAAO,EAAMT,SAAS,IAAIG,QAAS,WAAQL,EAAKI,SAAS,CAAEsf,eAAe,OAC1HzgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACK8f,GAAahM,GAAWiM,EACrBxgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAACsI,EAAD,CAAQ7G,KAAO6e,EAAkF,mBAAzE,uEAA6F9e,MAAO8e,EAAQ/e,QAAS8e,GAAahM,EAAStT,SAAS,IAAIG,QAAS,WAAQL,EAAKI,SAAS,CAAEmf,YAAY,OAC5Ntf,KAAKJ,MAAM0f,YAActgB,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAUhiB,GAAG,aACrC,cAvIHtB,IAAM0C,YAA3Bye,GACK1X,YAAcC,EA6IV6Z,8BAAapC,IC7IbqC,oLARP,OACI1iB,EAAAC,EAAAC,cAACkgB,EAAA,SAAD,KACIpgB,EAAAC,EAAAC,cAACyiB,GAAD,CAAsBvE,OAAQpd,KAAKjB,gBAJvBb,IAAM0C,kDCCrBghB,WAAqB,SAAC7iB,GAAD,OAC9BC,EAAAC,EAAAC,cAAA,MAAII,UAAU,yBACbP,EAAMkb,QAAQvQ,IAAI,SAAAzH,GACjB,IAAMkO,EAAOlO,EAAMkO,KACf+J,KAAO,IAAInL,MAAM9M,EAAMkO,MAAMgK,eAAeC,WAC5C/b,EACJ,OACEW,EAAAC,EAAAC,cAAA,MAAI4P,IAAK7M,EAAM0D,GAAIrG,UAAU,+BAC3BN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAAA,UAAK+C,EAAM4E,OAAS5E,EAAMe,MAC1BhE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACbN,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YAAOiR,GAAQA,EAAKkK,OAAO,QAC3Brb,EAAAC,EAAAC,cAAA,YAAO+C,EAAMqY,SAAb,YAEFtb,EAAAC,EAAAC,cAAA,cACG,KACA+C,EAAMiO,eCdV2R,WAAkB,WAC3B,IAAMxiB,EAAUyiB,qBAAWla,GADMmW,EAECC,oBAAS,GAFVC,EAAA9c,OAAA+c,GAAA,EAAA/c,CAAA4c,EAAA,GAE1B/F,EAF0BiG,EAAA,GAEf8D,EAFe9D,EAAA,GAAAI,EAGHL,oBAAS,GAHNO,EAAApd,OAAA+c,GAAA,EAAA/c,CAAAkd,EAAA,GAG1B2D,EAH0BzD,EAAA,GAGjB0D,EAHiB1D,EAAA,GAAA2D,EAIDlE,mBAAS,MAJRmE,EAAAhhB,OAAA+c,GAAA,EAAA/c,CAAA+gB,EAAA,GAI1B1G,EAJ0B2G,EAAA,GAIhBC,EAJgBD,EAAA,GAqEjC,OAJAzD,oBAAU,WArCNrb,MAAK,GAAAC,OAAIjE,EAAQb,SAAZ,YAAgC,CACjC+E,OAAQ,OACRC,KAAMC,KAAKC,UAvBG,CACdf,MAAK,0kBAuBLgB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEhBC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAme,GACF,IAAM7G,EAAW/W,YAAK,CAAC,OAAQ,wBAAyB4d,GACxD,IAAK7G,EAGD,OAFAyG,GAAW,QACXF,GAAa,GAGjB,IAAMO,EAAQ,SAAAC,GAAC,OAAIC,aAAeC,aAAK,UAAWF,GAAIG,aAAK,CAAC,WAAYH,KAGlEI,EAAejZ,aAAIkZ,aAFL,SAAAC,GAAC,OAAInZ,aAAI4Y,EAAOO,IAClB,SAAA5I,GAAO,OAAIA,EAAQnI,SACuB0J,GACtDsH,EAAsBC,aAASrZ,KAATqZ,CAAc,SAACF,EAAGjU,GAE1C,OADAiU,EAAE/Q,OAAS6Q,EAAa/T,GACjBiU,GAFiBE,CAGzBvH,GACH4G,EAAYU,GACZf,GAAa,KAEhB9c,MAAM,SAAAC,GAAG,OAAI,IAAIb,MAAMa,MAKzB,IAGClG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,WAASI,UAAU,gBACb0Y,GAAahZ,EAAAC,EAAAC,cAACqQ,EAAD,OACZyI,GAAagK,GAAWhjB,EAAAC,EAAAC,cAAA,iDACxB8Y,IAAcgK,GACbxG,EAAS9R,IAAI,SAAAuQ,GACT,OACIjb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBAAgBwP,IAAKmL,EAAQtU,IACxC3G,EAAAC,EAAAC,cAAA,oBAAY+a,EAAQqB,MACpBtc,EAAAC,EAAAC,cAAA,kBAAU,IAAI6P,KAAKkL,EAAQ+I,WAAW7I,eACtCnb,EAAAC,EAAAC,cAAC+jB,GAAD,CAAoBhJ,QAASA,EAAQnI,oBCrD/DoR,eA6BF,SAAAA,EAAYnkB,GAAO,IAAAmC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAkjB,IACfhiB,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAA+hB,GAAA3hB,KAAAvB,KAAMjB,KA7BVa,MAAQ,CACJkS,OAAQ,GACRwH,UAAW,GACX6J,OAAQ,GACRnL,WAAW,EACXoL,WAAY,OACZ9E,WAAY,EACZ+E,cAAe,EACfC,KAAM,EACNC,MAAM,EACNC,MAAM,EACNC,YAAa,KACbnG,UAAW,GACXG,SAAU,GACVC,YAAa,GACbxH,QAAS,GACT0H,YAAa,GACb8F,qBAAqB,EACrBC,sBAAsB,EACtBC,eAAgB,CACZra,MAAO,GACPC,OAAQ,IAEZqa,gBAAiB,IAKF3iB,EAyEnB4iB,gBAAkB,SAACtF,EAADlU,GAAmC,IAArBsZ,EAAqBtZ,EAArBsZ,eAE5B,GAAI1iB,EAAKtB,MAAMkS,OAAQ,CACnB,IAAIuR,EAAgBniB,EAAKtB,MAAMkS,OAAOoF,OAAO,SAACwJ,EAAOqD,GACjD,GAAIA,EAAKzY,KAAK,IAAMyY,EAAKzY,KAAK,GAAG9B,QAAUua,EAAKzY,KAAK,GAAG9B,OAAO/G,OAAQ,CACnE,IAAMuhB,EAAcD,EAAKzY,KAAK,GAAG9B,OAEjC,OAAOkX,EADUxf,EAAK+iB,YAAYD,EAAaJ,EAAepa,QAGlE,OAAOkX,GACR,GACH2C,EAAgBa,KAAKC,MAAQd,EAAgB,IAAO,GAAM,OAC1DniB,EAAKf,SAAS,CAAEkjB,gBAAe/E,WAAY+E,EAAgB7E,EAAWoF,iBAAgBD,sBAAsB,MArFjGziB,EAyFnB+iB,YAAc,SAACG,EAAUC,GACrB,IAAMC,EAAUF,EAAS,IAAMF,KAAKK,GAAK,KACnCC,EAAUJ,EAAS,IAAMF,KAAKK,GAAK,KACnCE,EAAUJ,EAAS,IAAMH,KAAKK,GAAK,KAMnCG,EALUL,EAAS,IAAMH,KAAKK,GAAK,KAKbC,EACtBG,EAAWT,KAAKU,KAAKV,KAAKW,IAAIX,KAAKY,IAAIL,GAAWP,KAAKa,IAAIL,GAAY,GAAKR,KAAKW,IAAIX,KAAKY,IAAIR,GAAWJ,KAAKa,IAAIN,GAAWP,KAAKa,IAAIT,GAAWJ,KAAKY,IAAIL,GAAWP,KAAKY,IAAIJ,GAAY,IAC1LM,EAAcd,KAAKa,IAAIT,GAAWJ,KAAKa,IAAIN,GAAWP,KAAKY,IAAIR,GAAWJ,KAAKY,IAAIL,GAAWP,KAAKY,IAAIJ,GAG7G,OAPoB,aAKDR,KAAKe,MAAMN,EAAUK,IArGzB9jB,EA0GnBgkB,qBAAuB,SAAAjF,GAA+B,IAAAO,EAAArf,OAAA+c,GAAA,EAAA/c,CAAA8e,EAAA,GAA7BkF,EAA6B3E,EAAA,GAAdlG,EAAckG,EAAA,GAClD,GAAK2E,GAAkB7K,GAAapZ,EAAKtB,MAAMkS,OAAOrP,OAAtD,CAGA,IAAMR,EAAQ0K,aAAKyY,aAAO,KAAMD,GAAlBxY,CAAkCzL,EAAKtB,MAAMkS,QAC3D,GAAuB,IAAnB7P,EAAMqY,WAAgC,IAAdA,EACxB,OAAOpZ,EAAKmkB,qBAAqBF,GAErC,IAAMG,EAAiBrjB,EAAMqY,SAAWrY,EAAMiO,MAC9CoK,GAAYrY,EAAMqY,SA7JnB,SAAuB5X,GAC1B,OAAOW,MAAK,qEAAuE,CAC/EE,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAoKbshB,CAfkB,CACd5iB,MAAK,sQAOLC,UAAW,CACP4iB,uBAAwB,CACpB7f,GAAIwf,EACV7K,eAKLpW,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAK,GACF,GAAIA,EAAU,CACV,IAAMkhB,EAAchhB,YAAK,CAAC,OAAQ,oBAAqB,YAAaF,GAC9DmhB,EAAgBxkB,EAAKtB,MAAM0e,WAAagH,EAAkBG,EAAcxjB,EAAMiO,MACpFhP,EAAKf,SAAS,SAAAgL,GAQV,MAAO,CAAE2G,OAPapI,aAAI,SAAAkW,GACtB,OAAIA,EAAGja,KAAOwf,GACVvF,EAAGtF,SAAWmL,EACP7F,GAEJA,GALWlW,CAMnByB,EAAU2G,QACmBwM,WAAYoH,QAIvDzgB,MAAM,SAAAC,GAAG,OAAI,IAAIb,MAAMa,OA1JThE,EA6JnBmkB,qBAAuB,SAACF,GACpB,GAAKA,EAAL,CAGA,IAAIziB,EAAc,CACdC,MAAK,yPAOLC,UAAW,CACPuiB,cAAeA,IAGvB9hB,MAAK,GAAAC,OAAIpC,EAAK7B,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdJ,KAAK,SAAAK,GAEF,GADA3F,QAAQC,IAAI0F,GACRA,EAAU,KAAAohB,EACsBlhB,YAAK,CAAC,OAAQ,qBAAsBF,GAA5D+V,EADEqL,EACFrL,SAAUf,EADRoM,EACQpM,UAClBrY,EAAKf,SAAS,SAAAgL,GAGV,MAAO,CAAE2G,OAFa3G,EAAU2G,OAAOtF,OAAO,SAAAvK,GAAK,OAAIA,EAAM0D,KAAOwf,IAEpC7G,WADXnT,EAAUmT,WAAehE,EAAWf,QAKpEtU,MAAM,SAAAC,GAEH,MADAhE,EAAKf,SAAS,CAAE6X,WAAW,IACrB,IAAI3T,MAAMa,OA1MThE,EA8MnB0kB,mBAAqB,SAAAxC,GACbA,GACAliB,EAAKf,SAAS,CAAEijB,gBAhNLliB,EAoNnB2kB,SAAW,WAAM,IACLvC,EAASpiB,EAAKtB,MAAd0jB,KACRpiB,EAAKf,SAAS,CAAEmjB,KAAMA,EAAO,EAAGE,MAAM,EAAMD,MAAM,KAtNnCriB,EAwNnB4kB,SAAW,WAAM,IACLxC,EAASpiB,EAAKtB,MAAd0jB,KACRpiB,EAAKf,SAAS,CAAEmjB,KAAMA,EAAO,EAAGC,MAAM,EAAMC,MAAM,KA1NnCtiB,EA+NnBoI,qBAAuB,SAAC2V,GACfA,GACLA,EAAQnW,iBAAiB5E,KAAK,SAAAC,GAC1B,GAAgC,QAA5BA,EAAI8a,QAAQ8G,YACZ,OAAO7kB,EAAKf,SAAS,CAAEwjB,sBAAsB,EAAOE,gBAAiB,4CAEzE,IAAM6B,EAAgBxkB,EAAKtB,MAAMyjB,cAAyCniB,EAAKtB,MAAM0e,WAAapd,EAAKtB,MAAMyjB,cAA5DniB,EAAKtB,MAAM0e,WAC5Dpd,EAAK4iB,gBAAgB4B,EAAc,CAAE9B,eAAgB,CAAEra,MAAO0V,EAAQ1V,MAAOC,OAAQyV,EAAQzV,YAM9FvE,MAAM,SAAAC,GACLtG,QAAQC,IAAIqG,GACZhE,EAAKf,SAAS,CAAEwjB,sBAAsB,EAAOE,gBAAiB3e,EAAI8gB,SAAW9gB,EAAI8gB,QAAQ,QA9O9E9kB,EAkPnByb,aAAe,SAAAK,GAAK,OAAI,SAAC3a,GACrBnB,EAAKf,SAALgB,OAAAwM,EAAA,EAAAxM,CAAA,GAAiB6b,EAAQ3a,MAjPzBnB,EAAKnC,MAAQA,EACbmC,EAAK4b,eAAiB5e,IAAMoI,YAHbpF,mFAOflB,KAAKimB,kDAGI,IAAAlmB,EAAAC,KACTA,KAAKG,SAAS,CAAE6X,WAAW,IAuB3B3U,MAAK,GAAAC,OAAItD,KAAKX,QAAQb,SAAjB,YAAqC,CACtC+E,OAAQ,OACRC,KAAMC,KAAKC,UAxBG,CACdf,MAAK,ynBAwBLgB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEdW,MAAM,SAAAC,GAAG,sBAAA5B,OAAoB4B,KAC7BhB,KAAK,SAAAK,GACF,IAAMsN,EAAYpN,YAAK,CAAC,OAAQ,oBAAqBF,GAC/C2hB,EAAqBrU,EAAYlF,aAAK,SAAA1K,GAAK,OAAKA,EAAMkkB,WAArBxZ,CAAgCkF,QAAaxT,EAEpF,GAAKwT,EAAUpP,QAAWyjB,GAAuBA,EAAmBpU,OAApE,CAIA,IACM6Q,EAAeyD,aADD,SAACvD,GAAD,OAAOwD,aAAc5D,aAAK,UAAWI,GAAIH,aAAK,CAAC,WAAYG,KACtCqD,EAAmBpU,QACxDwM,EAAa,EACjBqE,EAAa1F,QAAQ,SAAAhb,GACbA,EAAMiO,QAAOoO,GAAcgI,aAASrkB,EAAMqY,SAAUrY,EAAMiO,UAElEnQ,EAAKI,SAAS,CAAE2R,OAAQ6Q,EAAerE,aAAYtG,WAAW,EAAOsB,UAAW4M,EAAmBvgB,UAT/F5F,EAAKI,SAAS,CAAE2R,OAAQ,GAAIqR,OAAQ,GAAInL,WAAW,MAW1D/S,MAAM,SAAAC,GAEH,MADAnF,EAAKI,SAAS,CAAE6X,WAAW,IACrB,IAAI3T,MAAJ,aAAAf,OAAuB4B,uCAiLhC,IAAA0I,EAAA5N,KACGsjB,EAAStjB,KAAKJ,MAAd0jB,KADHjO,EAEiIrV,KAAKJ,MACrIwd,EAAS,CAAEE,UAHZjI,EAEGiI,UACoBG,SAHvBpI,EAEcoI,SACmBC,YAHjCrI,EAEwBqI,YACsBxH,QAH9Cb,EAEqCa,QACkB0H,YAHvDvI,EAE8CuI,YACsBqB,QAHpE5J,EAE2DuO,eAAkBra,MACA+U,WAH7EjJ,EAE+FiJ,WACNhF,UAHzFjE,EAE2GiE,UACPxH,OAHpGuD,EAEsHvD,QAE3H,OAAQwR,GACJ,KAAK,EACD,OAAQtjB,KAAKJ,MAAMoY,UAiCfhZ,EAAAC,EAAAC,cAACqQ,EAAD,MAhCAvQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAQ,SAAA,KACIT,EAAAC,EAAAC,cAAA,WAASI,UAAWgB,IAChB,CACIimB,mBAAqB,EACrB/C,KAAQxjB,KAAKJ,MAAM4jB,KACnBD,KAAQvjB,KAAKJ,MAAM2jB,QAGvBvkB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAACsnB,GAAD,CACIvK,iBAAkBjc,KAAKJ,MAAMwjB,WAC7Btc,SAAU9G,KAAK4lB,qBAEnB5mB,EAAAC,EAAAC,cAAA,WAC+B,SAA1Bc,KAAKJ,MAAMwjB,YACZpkB,EAAAC,EAAAC,cAACunB,GAAD,CAAaxM,QAASja,KAAKJ,MAAMkS,OAC7BL,SAAUzR,KAAKqlB,qBACf5K,iBAAkBza,KAAKklB,uBACA,UAA1BllB,KAAKJ,MAAMwjB,YACZpkB,EAAAC,EAAAC,cAACwnB,GAAD,CAAelL,SAAUxb,KAAKJ,MAAMkS,SACT,YAA1B9R,KAAKJ,MAAMwjB,YACZpkB,EAAAC,EAAAC,cAACynB,GAAD,QAGR3nB,EAAAC,EAAAC,cAAC0nB,GAAD,CAAiB9U,OAAQ9R,KAAKJ,MAAMkS,OAAQwM,WAAYte,KAAKJ,MAAM0e,YAC/Dtf,EAAAC,EAAAC,cAAC2e,GAAD,KACI7e,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBAAmBI,QAASM,KAAK6lB,SAAUgB,UAAW7mB,KAAKJ,MAAMkS,OAAOrP,QAA1F,QACAzD,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAASO,GAAG,UAAUF,UAAU,6BAAhC,2BAMxB,KAAK,EACD,OACIN,EAAAC,EAAAC,cAAA,WAASI,UAAWgB,IAChB,CACIimB,mBAAqB,EACrB/C,KAAQxjB,KAAKJ,MAAM4jB,KACnBD,KAAQvjB,KAAKJ,MAAM2jB,QAGvBvkB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAC4nB,GAAD,CAAiBnK,aAAc3c,KAAK2c,aAAcS,OAAQA,KAE9Dpe,EAAAC,EAAAC,cAAC0nB,GAAD,CAAiB9U,OAAQ9R,KAAKJ,MAAMkS,OAAQwM,WAAYte,KAAKJ,MAAM0e,WAAYuH,SAAU7lB,KAAK6lB,SAAUC,SAAU9lB,KAAK8lB,SAAUe,UAAW7mB,KAAKJ,MAAM8jB,qBACnJ1kB,EAAAC,EAAAC,cAACunB,GAAD,CAAaxM,QAASja,KAAKJ,MAAMkS,OAAQ0I,UAAU,IACnDxb,EAAAC,EAAAC,cAAC2e,GAAD,KACI7e,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBAAmBI,QAASM,KAAK6lB,SAAUgB,UAAW7mB,KAAKJ,MAAM8jB,qBAAnF,QACA1kB,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KAAK7H,UAAU,4BAA4BI,QAASM,KAAK8lB,UAAjE,WAKpB,KAAK,EACD,OACI9mB,EAAAC,EAAAC,cAAA,WAASI,UAAWgB,IAChB,CACIimB,mBAAqB,EACrB/C,KAAQxjB,KAAKJ,MAAM4jB,KACnBD,KAAQvjB,KAAKJ,MAAM2jB,QAGvBvkB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAACuR,EAAD,CAAKrC,MAAM,QAAQ9E,qBAAsBtJ,KAAKsJ,qBAAsBsC,cAAY,MAGvF5L,KAAKJ,MAAMikB,iBAAmB7kB,EAAAC,EAAAC,cAACsI,EAAD,CAAQ7G,KAAMX,KAAKJ,MAAMikB,gBAAiBrjB,SAAO,EAACP,SAAU,EAAGG,QAAS,WAAQwN,EAAKzN,SAAS,CAAE0jB,gBAAiB,QAChJ7kB,EAAAC,EAAAC,cAAC0nB,GAAD,CAAiB9U,OAAQ9R,KAAKJ,MAAMkS,OAAQwM,WAAYte,KAAKJ,MAAM0e,WAAYuH,SAAU7lB,KAAK6lB,SAAUC,SAAU9lB,KAAK8lB,SAAUhH,YAAU,GACvI9f,EAAAC,EAAAC,cAACunB,GAAD,CAAaxM,QAASja,KAAKJ,MAAMkS,OAAQ0I,UAAU,IACnDxb,EAAAC,EAAAC,cAAC2e,GAAD,KACI7e,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBAAmBI,QAASM,KAAK6lB,SAAUgB,UAAW7mB,KAAKJ,MAAM+jB,sBAAnF,QACA3kB,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KAAK7H,UAAU,4BAA4BI,QAASM,KAAK8lB,UAAjE,WAKpB,KAAK,EACD,OACI9mB,EAAAC,EAAAC,cAAA,WAASI,UAAWgB,IAChB,CACIimB,mBAAqB,EACrB/C,KAAQxjB,KAAKJ,MAAM4jB,KACnBD,KAAQvjB,KAAKJ,MAAM2jB,QAGvBvkB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAC6nB,GAAD,CAAa3J,OAAQA,KAEzBpe,EAAAC,EAAAC,cAAC0nB,GAAD,CAAiB9U,OAAQ9R,KAAKJ,MAAMkS,OAAQwM,WAAYte,KAAKJ,MAAM0e,WAAYuH,SAAU7lB,KAAK6lB,SAAUC,SAAU9lB,KAAK8lB,SAAUhH,YAAU,GACvI9f,EAAAC,EAAAC,cAACunB,GAAD,CAAaxM,QAASja,KAAKJ,MAAMkS,OAAQ0I,UAAU,IACnDxb,EAAAC,EAAAC,cAAC2e,GAAD,KACI7e,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBAAmBI,QAASM,KAAK6lB,SAAUgB,UAAW7mB,KAAKJ,MAAM8jB,sBAAwB1jB,KAAKJ,MAAM+jB,sBAAtH,iBACA3kB,EAAAC,EAAAC,cAAA,KAAGiI,KAAK,KAAK7H,UAAU,4BAA4BI,QAASM,KAAK8lB,UAAjE,WAKpB,KAAK,EACD,OACI9mB,EAAAC,EAAAC,cAAA,WAASI,UAAWgB,IAChB,CACIimB,mBAAqB,EACrB/C,KAAQxjB,KAAKJ,MAAM4jB,KACnBD,KAAQvjB,KAAKJ,MAAM2jB,QAGvBvkB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBAEXN,EAAAC,EAAAC,cAAC8nB,GAAD,CAAe5J,OAAQA,KAE3Bpe,EAAAC,EAAAC,cAAC0nB,GAAD,CAAiBhI,SAAS,UAAU9M,OAAQ9R,KAAKJ,MAAMkS,OAAQwM,WAAYte,KAAKJ,MAAM0e,WAAYuH,SAAU7lB,KAAK6lB,SAAUC,SAAU9lB,KAAK8lB,SAAUhH,YAAU,GAC1J9f,EAAAC,EAAAC,cAAC2e,GAAD,KACI7e,EAAAC,EAAAC,cAAC+nB,GAAD,SAKpB,QAAS,eApZKrmB,aAApBsiB,GA2BKvb,YAAcC,EA8XVsb,UChbTgE,WAAuC,eAA7B5Y,OAAOvF,SAASvK,SAA4B,wBAA0B,8DAEhF2oB,GAAW,IAAIpmB,OAAO,oDA0B5B,SAASqmB,GAAapkB,IAzBtB,SAAmBA,EAAMX,GAAqB,IAAdqP,EAActM,UAAA3C,OAAA,QAAApE,IAAA+G,UAAA,GAAAA,UAAA,GAAJ,IAExCsM,EAAOvQ,OAAAqK,EAAA,EAAArK,CAAA,CACLsD,KAAM,KACHiN,IAGO2V,SAAW3V,EAAQ2V,QAAQlN,cACrCzI,EAAQ2V,QAAU3V,EAAQ2V,QAAQlN,eAGpC,IAAImN,EAAgBC,mBAAmBvkB,GAAQ,IAAMukB,mBAAmBllB,GAExE,IAAK,IAAImlB,KAAa9V,EAAS,CAC7B4V,GAAiB,KAAOE,EACxB,IAAIC,EAAc/V,EAAQ8V,IACN,IAAhBC,IACFH,GAAiB,IAAMG,GAG3B7oB,QAAQC,IAAI,uCACZD,QAAQC,IAAIyoB,GACZvjB,SAASC,OAASsjB,EAIlBI,CAAU1kB,EAAM,GAAI,CAClB2kB,WAAY,QA8GDC,8MAxGbhoB,MAAQ,CACNxB,WAAOC,EACPE,SAAS,EACTD,OAAQ,QAGVupB,QAAU,SAACrjB,GACT,IAAMsjB,EAActjB,EAAQgT,MAAM2P,IAAU,GACxCY,EAAOtkB,KAAKukB,MAAMC,KAAKH,IAE3B,OADAC,EAAKxpB,QAAwC,UAA9BwpB,EAAK,kBAAkB,GAC/BA,KAGTrpB,MAAQ,SAAC8F,GACP,IAAMujB,EAAO7mB,EAAK2mB,QAAQrjB,GAC1BtD,EAAKf,SAAS,CAAE/B,MAAOoG,EAASlG,OAAQypB,EAAKG,IAAK3pB,QAASwpB,EAAKxpB,UAChE4pB,aAAaC,QAAQ,QAAS5jB,MAGhC7F,OAAS,WAOP0E,MAAK,GAAAC,OAAI4jB,GAAJ,YAAuB,CAC1B3jB,OAAQ,OACRC,KAAMC,KAAKC,UARO,CAClBf,MAAK,sDAQLgB,QAAS,CACLC,OAAU,mBACVC,eAAgB,mBAChBC,OAAA,GAAAR,OAAaS,SAASC,SAE1BC,YAAa,YAEZC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B,MAAM,IAAIC,MAAM,WAEpB,OAAOF,EAAIG,SAEZJ,KAAK,SAAAoG,GAA0B,IAAf3L,EAAe2L,EAAvBzF,KAAQlG,QACXA,GAAqB,OAAXA,KACZuC,EAAKf,SAAS,CAAE/B,MAAO,KAAME,OAAQ,OACrC6pB,aAAaE,WAAW,SACxBjB,GAAa,gBACbA,GAAa,oBAGlBniB,MAAM,SAAAC,GACLtG,QAAQC,IAAI,UACZD,QAAQC,IAAIqG,yFAKhB,IAAMV,EAAU2jB,aAAaG,QAAQ,SACrC,GAAI9jB,EAAS,CACX,IAAMujB,EAAO/nB,KAAK6nB,QAAQrjB,GAC1BxE,KAAKG,SAAS,CAAE/B,MAAOoG,EAASlG,OAAQypB,EAAKG,IAAK3pB,QAASwpB,EAAKxpB,4CAKlE,OACES,EAAAC,EAAAC,cAACkgB,EAAA,eAAD,CAAgBmJ,OArGK,8CAsGnBvpB,EAAAC,EAAAC,cAACspB,EAAA,EAAD,KACExpB,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACET,EAAAC,EAAAC,cAACC,EAAYspB,SAAb,CAAsBpmB,MAAO,CAC3BjE,MAAO4B,KAAKJ,MAAMxB,MAClBE,OAAQ0B,KAAKJ,MAAMtB,OACnBC,QAASyB,KAAKJ,MAAMrB,QACpBG,MAAOsB,KAAKtB,MACZC,OAAQqB,KAAKrB,OACbH,SAAU0oB,GACVzoB,eA/Ga,+CAiHbO,EAAAC,EAAAC,cAACwpB,EAAD,MACA1pB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBACdN,EAAAC,EAAAC,cAACypB,EAAA,EAAD,MACI3oB,KAAKJ,MAAMxB,OAASY,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAUoH,KAAK,YAAYppB,GAAG,QAAQqpB,OAAK,IAChE7pB,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAUoH,KAAK,IAAIppB,GAAG,UAAUqpB,OAAK,IACrC7oB,KAAKJ,MAAMxB,OAASY,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAUoH,KAAK,IAAIppB,GAAG,UAAUqpB,OAAK,IACzD7oB,KAAKJ,MAAMxB,OAASY,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAUoH,KAAK,QAAQppB,GAAG,UAAUqpB,OAAK,KAC5D7oB,KAAKJ,MAAMxB,OACXY,EAAAC,EAAAC,cAAC4pB,EAAA,EAAD,CAAOrkB,KAAK,QAAQskB,UAAW9nB,IAEjCjC,EAAAC,EAAAC,cAAC4pB,EAAA,EAAD,CAAOrkB,KAAK,UAAUskB,UAAWjR,KAEhC9X,KAAKJ,MAAMxB,OACVY,EAAAC,EAAAC,cAAC4pB,EAAA,EAAD,CAAOrkB,KAAK,YAAYskB,UAAW7F,MAEnCljB,KAAKJ,MAAMxB,OAASY,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAUhiB,GAAG,QAAQqpB,OAAK,iBA/FhDjoB,aCzClBooB,IAASC,OAAOjqB,EAAAC,EAAAC,cAACgqB,GAAD,MAASnlB,SAASsB,eAAe,6BCLjD8jB,EAAAC,QAAiBC,EAAA9jB,EAAuB,8DCAxC4jB,EAAAC,QAAiBC,EAAA9jB,EAAuB,0DCAxC4jB,EAAAC,QAAiBC,EAAA9jB,EAAuB,mDCAxC4jB,EAAAC,QAAiBC,EAAA9jB,EAAuB,mDCAxC4jB,EAAAC,QAAiBC,EAAA9jB,EAAuB","file":"static/js/main.d7a62c3f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: undefined,\r\n    userId: null,\r\n    isAdmin: false,\r\n    hostname: null,\r\n    stripe_pub_key: null,\r\n    login: () => {},\r\n    logout: () => {console.log('logout!')}\r\n});","import React from 'react';\r\nimport NavLink from 'react-router-dom/NavLink';\r\nimport Authcontext from '../../context/auth-context';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst mainNavigation = props => (\r\n    <Authcontext.Consumer>\r\n\r\n        {(context) => {\r\n            return (\r\n                <header className=\"main-navigation\">\r\n                    <div className=\"main-navigation__logo\">\r\n                        <h1>\r\n                            Turkey Tours\r\n                        </h1>\r\n                    </div>\r\n                    <nav className=\"main-navigation__items\">\r\n                        <ul>\r\n                            {!context.token && (\r\n                                <li>\r\n                                    <NavLink to=\"/auth\">Authenticate</NavLink>\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <NavLink to=\"/events\">Tours</NavLink>\r\n                            </li>\r\n                            {context.token && <React.Fragment>\r\n                                    <li>\r\n                                        <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <button onClick={context.logout}>Logout</button>\r\n                                    </li>\r\n                            </React.Fragment>}\r\n                            {/* <li>\r\n                                <NavLink to=\"/hotels\">Hotels</NavLink>\r\n                            </li> */}\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n            )}\r\n        }\r\n\r\n    </Authcontext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Notify.scss';\r\n\r\nclass Notify extends Component {\r\n    state = {\r\n        isHide: false\r\n    };\r\n\r\n    timer = null;\r\n\r\n    componentDidMount() {\r\n        const duration = this.props.duration | 2\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isHide: true })\r\n            this.props.onClose && this.props.onClose();\r\n        }, duration * 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.isHide && (\r\n                    <div className={classNames({\r\n                        'notify__container': true,\r\n                        'warning': this.props.warning,\r\n                        'success': !this.props.error,\r\n                        'error': this.props.error,\r\n                    })}>\r\n                        <div>{this.props.text}</div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notify\r\n","import React, { Component } from 'react'\r\nimport { path, view, lensPath } from 'ramda'\r\n\r\nimport './Auth.scss'\r\nimport authContext from '../../context/auth-context'\r\nimport Notify from '../../shared/Notify/Notify'\r\n\r\nconst regex = {\r\n    email: new RegExp(\r\n    '^(([^<>()[\\\\]\\\\\\\\.,;:\\\\s@\\\\\"]+(\\\\.[^<>()[\\\\]\\\\\\\\.,;:\\\\s@\\\\\"]+)*)|' +\r\n    '(\\\\\".+\\\\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])' +\r\n    '|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$'),\r\n    password: '^(?=.)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$'\r\n}\r\n\r\nclass AuthPage extends Component {\r\n    state = {\r\n        isLogin: true,\r\n        isPendingConfirmation: false,\r\n        isConfirmed: false,\r\n        isSuccess: false,\r\n        popupMessage: ''\r\n    };\r\n\r\n    static contextType = authContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.emailEl = React.createRef()\r\n        this.passwordEl = React.createRef()\r\n        this.phoneNumberEl = React.createRef()\r\n        this.confirmationCodeEl = React.createRef()\r\n    }\r\n\r\n    switchModeHandler = () => {\r\n        this.resetInvalidFields()\r\n        this.setState(pervState => {\r\n            return { isLogin: !pervState.isLogin }\r\n        })\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        const password = this.passwordEl.current.value;\r\n        const phone_number = this.phoneNumberEl.current.value;\r\n\r\n        if (password.trim().length === 0 || \r\n            phone_number.trim().length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        let requestBody = {\r\n            query: `\r\n                mutation Login($LoginInput: LoginInput!){\r\n                    login(input: $LoginInput) {\r\n                        idToken\r\n                    }\r\n                }\r\n            `,\r\n            variables: { LoginInput: { phoneNumber: phone_number, password } }\r\n        };\r\n\r\n        if (!this.state.isLogin && !this.state.isPendingConfirmation) {\r\n            const email = this.emailEl.current.value\r\n            requestBody = {\r\n                query: `\r\n                mutation Signup($SignupInput: SignupInput!){\r\n                    signup(input: $SignupInput) {\r\n                        username\r\n                    }\r\n                }`,\r\n                variables: { SignupInput: { phoneNumber: phone_number, password, name: email }}\r\n            }\r\n        }\r\n\r\n        if (!this.state.isLogin && !this.state.isConfirmed && this.state.isPendingConfirmation) {\r\n            const confirmationCode = this.confirmationCodeEl.current.value\r\n            requestBody = {\r\n                query:`\r\n                    mutation SignupConfirm($SignupConfirmInput: SignupConfirmInput!) {\r\n                        signupConfirm(input: $SignupConfirmInput)\r\n                    }\r\n                `,\r\n                variables: { SignupConfirmInput: { phoneNumber: phone_number, confirmationCode }}\r\n            }\r\n        }\r\n\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`,\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resParse => {\r\n                const idToken = path(['data', 'login', 'idToken'], resParse)\r\n                const errors = view(lensPath(['errors', 0, 'message']), resParse)\r\n                if (this.state.isLogin && !resParse.data.login && errors) {\r\n                    this.setInvalidFields(errors)\r\n                }\r\n                if (errors) {\r\n                    console.log(errors)\r\n                    this.setState({ isSuccess: false, popupMessage: errors })\r\n                    return\r\n                }\r\n                if (!this.state.isLogin && !this.state.isConfirmed && resParse.data.signup) {\r\n                    this.setState({ isPendingConfirmation: true })\r\n                }\r\n                if (this.state.isLogin && idToken) {\r\n                    this.context.login(idToken);\r\n                }\r\n                if (resParse.data.signupConfirm) {\r\n                    this.setState({ isSuccess: true, isConfirmed: true, popupMessage: 'You are successfully signed up' })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                throw Error(err)\r\n            });\r\n    };\r\n\r\n    setInvalidFields = (errorMessage = 'Invalid data') => {\r\n        document.getElementById('loginErrorMsg') && document.getElementById('loginErrorMsg').remove()\r\n        const p = document.createElement(\"p\")\r\n        p.innerText = errorMessage\r\n        p.style.color = 'red'\r\n        p.id = 'loginErrorMsg'\r\n        this.phoneNumberEl.current && this.phoneNumberEl.current.parentElement.classList.add('invalid_auth')\r\n        this.passwordEl.current && this.passwordEl.current.parentElement.classList.add('invalid_auth')\r\n        this.passwordEl.current && this.passwordEl.current.parentElement.parentElement.insertBefore(p, this.passwordEl.current.parentElement.nextSibling)\r\n    }\r\n\r\n    resetInvalidFields = () => {\r\n        this.phoneNumberEl.current && this.phoneNumberEl.current.parentElement.classList.remove('invalid_auth')\r\n        this.passwordEl.current && this.passwordEl.current.parentElement.classList.remove('invalid_auth')\r\n        document.getElementById('loginErrorMsg') && document.getElementById('loginErrorMsg').remove()\r\n    }\r\n\r\n    emailInputHandle = (e) => {\r\n        e.target.parentElement.classList.toggle('email__success', regex.email.test(this.emailEl.current.value));\r\n    }\r\n    \r\n    renderConfirmationForm() {\r\n        return (\r\n            <div className=\"email\">\r\n                <input type=\"number\" id=\"confirmationCode\" name=\"confirmationCode\" placeholder=\"code\" ref={this.confirmationCodeEl} required />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderSignupForm() {\r\n        return (\r\n            <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n               <div className=\"email\">\r\n                    <input type=\"text\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"tel\"\r\n                        ref={this.phoneNumberEl}\r\n                        pattern=\"^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$\"\r\n                        title=\"Invalid phone number try again\"\r\n                        required />\r\n                </div>\r\n                <div className=\"email\">\r\n                    <input type=\"text\" \r\n                        placeholder=\"test@test.com\"\r\n                        ref={this.emailEl}\r\n                        onChange={this.emailInputHandle}\r\n                        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\r\n                        title=\"Invalid email please try better\" />\r\n                    <svg viewBox=\"0 0 16 16\">\r\n                        <path d=\"M10.8000002,10.8000002 C9.85000038,11.6500006 9.18349609,12 8,12 C5.80000019,12 4,10.1999998 4,8 C4,5.80000019 5.80000019,4 8,4 C10.1999998,4 12,6 12,8 C12,9.35332031 12.75,9.5 13.5,9.5 C14.25,9.5 15,8.60000038 15,8 C15,4 12,1 8,1 C4,1 1,4 1,8 C1,12 4,15 8,15 C12,15 15,12 15,8\"></path>\r\n                        <polyline points=\"5 8.375 7.59090909 11 14.5 4\" transform='translate(0 -0.5)'></polyline>\r\n                    </svg>\r\n                    <a className=\"dribbble\" href=\" +\" target=\"_blank\">\r\n                        <img src=\"https://cdn.dribbble.com/assets/dribbble-ball-1col-dnld-e29e0436f93d2f9c430fde5f3da66f94493fdca66351408ab0f96e2ec518ab17.png\" alt=\"\" />\r\n                    </a>\r\n                </div>\r\n                <div className=\"email\">\r\n                    <input type=\"password\" \r\n                        placeholder=\"passwod\" \r\n                        ref={this.passwordEl}\r\n                        pattern='^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$'\r\n                        autoComplete=\"off\"\r\n                        required\r\n                        title=\"Enter an password consisting of 8+ symbols with at least one uppercase and lowercase letter\" />\r\n                </div>\r\n                { this.state.isPendingConfirmation && this.renderConfirmationForm() }\r\n                { this.state.popupMessage && this.state.isSuccess && <Notify error={!this.state.isSuccess} text={this.state.popupMessage} onClose={() => {this.setState({ popupMessage: '' })}} />}\r\n                { this.state.popupMessage && !this.state.isSuccess && <Notify error={!this.state.isSuccess} text={this.state.popupMessage} onClose={() => {this.setState({ popupMessage: '' })}} />}\r\n                <div className=\"form-action\">\r\n                    <button type=\"submit\">{ this.state.isPendingConfirmation ? 'Submit' : 'Confirm' }</button>\r\n                    <button type=\"button\" onClick={this.switchModeHandler}>{this.state.isLogin ? 'Sign Up' : 'Login'}</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    renderLoginForm() {\r\n        return (\r\n            <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n               <div className=\"email\">\r\n                    <input type=\"text\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"tel\"\r\n                        ref={this.phoneNumberEl}\r\n                        pattern=\"^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$\"\r\n                        title=\"Invalid phone number try again\"\r\n                        required />\r\n                </div>\r\n                <div className=\"email\">\r\n                    <input type=\"password\" \r\n                            placeholder=\"passwod\" \r\n                            ref={this.passwordEl}\r\n                            pattern='^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$'\r\n                            autoComplete=\"off\"\r\n                            required\r\n                            title=\"Enter an password consisting of 7+ symbols with at least one upper case letter\" />\r\n                </div>\r\n                    <div className=\"form-action\">\r\n                        <button type=\"submit\">Submit</button>\r\n                        <button type=\"button\" onClick={this.switchModeHandler}>{this.state.isLogin ? 'Sign Up' : 'Login'}</button>\r\n                    </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"auth-container\">\r\n                    <div className=\"auth-control\">\r\n                        <div className=\"header\">{!this.state.isLogin ? 'Sign Up' : 'Login'}</div>\r\n                            { this.state.isLogin ? (\r\n                                this.renderLoginForm()\r\n                            ) : (\r\n                                this.renderSignupForm()\r\n                            ) }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthPage;","import React, {Component} from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nclass Backdrop extends Component {\r\n    render() { \r\n        return <div className=\"backdrop\"></div>\r\n    }    \r\n}\r\n\r\nexport default Backdrop;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = (props) => (\r\n    <div className=\"spinner\" style={props.style}>\r\n        <div className=\"lds-ripple\">\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\nexport default Spinner;","import { GeoSearchControl, EsriProvider } from 'leaflet-geosearch'\r\nimport { GeocodeService } from 'esri-leaflet-geocoder';\r\nimport { MapControl } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\nimport './SearchBar.scss'\r\n\r\nconst geocodeService = new GeocodeService();\r\nexport const initPointerIcon = new L.Icon({\r\n    iconUrl: require('../../assets/initPointIcon.svg'),\r\n    iconRetinaUrl: require('../../assets/initPointIcon.svg'),\r\n    iconAnchor: [-5, 35],\r\n    popupAnchor: [25, -17],\r\n    iconSize: [25, 55],\r\n    shadowSize: [68, 95],\r\n    shadowAnchor: [20, 92],\r\n})\r\n\r\nfunction getFullLocationInfo(latlng) {\r\n    return new Promise((res, rej) => {\r\n        geocodeService.reverse().latlng(latlng).run(function (error, result) {\r\n                return error ? rej(error) : res(result)\r\n        });\r\n    })\r\n}\r\n\r\nexport default class SearchBar extends MapControl {\r\n    onShowLocation(event) {\r\n        const fullLocationInfo = getFullLocationInfo(event.location.bounds[0])\r\n        this.props.getUserHotelLocation && this.props.getUserHotelLocation({ label: event.location.label, coords: event.location.bounds[0], fullLocationInfo  })\r\n    }\r\n\r\n    createLeafletElement() {\r\n        this.props.leaflet.map.on('geosearch/showlocation', this.onShowLocation.bind(this))\r\n        return GeoSearchControl({\r\n            provider: new EsriProvider(),\r\n            style: 'bar',\r\n            maxMarkers: 2,\r\n            marker: {\r\n                icon: initPointerIcon,\r\n                draggable: false,\r\n            },\r\n            autoComplete: true,\r\n            popupFormat: ({ query, result }) => {\r\n                return result.label\r\n            },\r\n            autoClose: true,\r\n            keepResult: true,\r\n            showPopup: true,\r\n            showMarker: true\r\n        });\r\n    }\r\n}\r\n","import React, { createRef, Component } from 'react';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Marker, Popup, Polyline, withLeaflet } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'\r\nimport classNames from 'classnames';\r\n\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport Spinner from '../../shared/Spinner/Spinner';\r\nimport authContext from \"../../context/auth-context\";\r\nimport './Geo.scss';\r\n\r\nconst Search = withLeaflet(SearchBar);\r\n\r\nexport const pointerIcon = new L.Icon({\r\n    iconUrl: require('../assets/pointIcon.svg'),\r\n    iconRetinaUrl: require('../assets/pointIcon.svg'),\r\n    iconAnchor: [13, 41],\r\n    popupAnchor: [15, -24],\r\n    iconSize: [25, 55],\r\n    shadowSize: [68, 95],\r\n    shadowAnchor: [20, 92],\r\n})\r\n\r\nexport const initPointerIcon = new L.Icon({\r\n    iconUrl: require('../assets/initPointIcon.svg'),\r\n    iconRetinaUrl: require('../assets/initPointIcon.svg'),\r\n    iconAnchor: [13, 41],\r\n    popupAnchor: [15, -24],\r\n    iconSize: [25, 55],\r\n    shadowSize: [68, 95],\r\n    shadowAnchor: [20, 92],\r\n})\r\n\r\nexport default class Geo extends Component {\r\n    static contextType = authContext;\r\n    abortController = new AbortController();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            location: {\r\n                lat: 0,\r\n                lng: 0\r\n            },\r\n            haveUsersLocation: false,\r\n            zoom: this.props.zoom | 1,\r\n            userMessage: {\r\n                name: '',\r\n                message: ''\r\n            },\r\n            geos: [],\r\n            latlng: [],\r\n            selectedMarker: {}\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.mapRef = createRef()\r\n        this.markerNameRef = createRef();\r\n        this.markerMessageRef = createRef();\r\n    }\r\n\r\n    /* Getting User Location */\r\n    componentDidMount() {\r\n        const signal = this.abortController.signal;\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            this.setState({\r\n                location: {\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                },\r\n                zoom: this.props.zoom | 2,\r\n                haveUsersLocation: true\r\n            })\r\n        }, () => {\r\n            fetch(`${this.context.hostname}/location`, { signal: signal })\r\n                .then(res => res.json())\r\n                .then(loc => {\r\n                    this.setState({\r\n                        location: {\r\n                            lat: loc.data.latitude,\r\n                            lng: loc.data.longitude\r\n                        },\r\n                        zoom: this.props.zoom | 10,\r\n                        haveUsersLocation: true\r\n                    })\r\n                })\r\n                .catch(err => console.log(`Tried to get aproximate location ${err}`))\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.abortController.abort();\r\n    }\r\n\r\n    /* Send geo data to the event component */\r\n    formSubmitted = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => {\r\n            const updatedGeos = [...prevState.geos];\r\n            console.log(updatedGeos)\r\n            updatedGeos.push({\r\n                coords: this.state.latlng,\r\n                ...this.state.userMessage\r\n            })\r\n            return { geos: updatedGeos }\r\n        }, () => this.props.onFormSubmit(this.state.geos));\r\n    }\r\n\r\n    /* Getting values from input fields */\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState(prevState => ({\r\n            userMessage: {\r\n                ...prevState.userMessage,\r\n                [name]: value,\r\n            }\r\n        })\r\n        )\r\n    }\r\n\r\n    /* Getting coordinates by click on the map */\r\n    handleClick = (e) => {\r\n        if (!this.props.enableSearch) {\r\n            this.setState({\r\n                latlng: [e.latlng.lat, e.latlng.lng],\r\n            });\r\n        }\r\n    }\r\n\r\n    /* Remove all markers from the map */\r\n    onMarkerClearAll = () => {\r\n        this.setState({ geos: [] });\r\n    }\r\n\r\n    /* Update selected marker from the map */\r\n    onMarkerUpdate = () => {\r\n        this.setState(prev => (\r\n            {\r\n                geos: prev.geos.map(geoItem => {\r\n                    if (geoItem.coords[0] === this.state.selectedMarker.coords[0] && geoItem.coords[1] === this.state.selectedMarker.coords[1]) {\r\n                        geoItem.name = this.markerNameRef.current.value;\r\n                        geoItem.message = this.markerMessageRef.current.value;\r\n                    }\r\n                    return geoItem;\r\n                })\r\n            })\r\n        )\r\n    }\r\n\r\n    /* Remove selected marker from the map */\r\n    onMarkerRemove = () => {\r\n        this.setState(prev => (\r\n            {\r\n                geos: prev.geos.filter(geoItem =>\r\n                    (geoItem.coords[0] !== this.state.selectedMarker.coords[0] && geoItem.coords[1] !== this.state.selectedMarker.coords[1] ? geoItem : false)\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    onMarkerClick = (e) => {\r\n        const { lat, lng } = e.latlng;\r\n        const selectedMarker = this.state.geos.find(geo => geo.coords[0] === lat && geo.coords[1] === lng);\r\n        this.markerNameRef.current.value = selectedMarker.name;\r\n        this.markerMessageRef.current.value = selectedMarker.message;\r\n        this.setState({ selectedMarker });\r\n    }\r\n\r\n    render() {\r\n        const position = [this.state.location.lat, this.state.location.lng];\r\n        const latLngList = [];\r\n        let geosFromEvent = (this.props.event &&\r\n            this.props.event.geos &&\r\n            this.props.event.geos.length &&\r\n            this.props.event.geos[0].coords.length) ||\r\n            (this.props.event &&\r\n                this.props.event.geos.coords &&\r\n                this.props.event.geos.coords.length) ?\r\n            this.props.event.geos : null;\r\n        if (this.props.event && geosFromEvent && !Array.isArray(geosFromEvent)) geosFromEvent = [geosFromEvent];\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"map\">\r\n                    <Map center={geosFromEvent ? geosFromEvent[0].coords : position}\r\n                        zoom={this.state.zoom}\r\n                        style={{ height: this.props.heigh || '600px' }}\r\n                        ref={this.mapRef}\r\n                        onClick={this.handleClick}\r\n                        scrollWheelZoom={(function(){ return window.innerWidth > 650 })()}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n                        {/* todo NEED REFACTOR! */}\r\n                        { this.props.enableSearch && <Search getUserHotelLocation={this.props.getUserHotelLocation || undefined}/>}\r\n\r\n                        {this.state.haveUsersLocation && this.props.editable ? (\r\n                            <React.Fragment>\r\n                                {this.state.geos.length && this.state.geos[0].coords.length ? this.state.geos.map((geo, idx) => {\r\n                                    return (\r\n                                        <Marker\r\n                                            onClick={this.onMarkerClick}\r\n                                            position={geo.coords}\r\n                                            icon={pointerIcon}\r\n                                            key={`${Date.now() + idx}`}\r\n                                            id={`${idx}`}>\r\n                                            <Popup>\r\n                                                {geo.name}\r\n                                            </Popup>\r\n                                        </Marker>\r\n                                    )\r\n                                }) : <Marker position={position} icon={pointerIcon} >\r\n                                        <Popup>\r\n                                            Init Marker\r\n                                        </Popup>\r\n                                    </Marker>}\r\n                                {this.state.latlng.length ?\r\n                                    <Marker position={this.state.latlng} icon={pointerIcon}>\r\n                                        <Popup>\r\n                                            Your marker\r\n                                        </Popup>\r\n                                    </Marker> : null}\r\n                            </React.Fragment>\r\n                        ) : (\r\n                                <React.Fragment>\r\n                                    {geosFromEvent ? geosFromEvent.map((geo, idx) => {\r\n                                        latLngList.push(geo.coords)\r\n                                        return (\r\n                                            <Marker position={geo.coords} icon={idx === 0 ? initPointerIcon : pointerIcon} key={idx}>\r\n                                                <Popup>\r\n                                                    {geo.name}\r\n                                                </Popup>\r\n                                            </Marker>\r\n                                        )\r\n                                    }) : null}\r\n                                    <Polyline positions={latLngList || []} />\r\n                                </React.Fragment>\r\n                            )}\r\n                    </Map>\r\n                    {this.state.haveUsersLocation && this.props.editable ? (\r\n                        <section className=\"map__form\">\r\n                            <h3>Add Event Marker</h3>\r\n                            <form onSubmit={this.formSubmitted}>\r\n                                <label htmlFor=\"name\">Marker Name</label>\r\n                                <input\r\n                                    onChange={this.handleInputChange}\r\n                                    ref={this.markerNameRef}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\" />\r\n                                <label htmlFor=\"message\">Description</label>\r\n                                <input\r\n                                    onChange={this.handleInputChange}\r\n                                    ref={this.markerMessageRef}\r\n                                    type=\"text\"\r\n                                    name=\"message\"\r\n                                    id=\"message\" />\r\n                                <button type=\"submit\" className=\"btn\">Attach</button>\r\n                            </form>\r\n                            <button onClick={this.onMarkerUpdate} className=\"btn\">Update</button>\r\n                            <button onClick={this.onMarkerRemove} className=\"btn\">Remove</button>\r\n                            <button onClick={this.onMarkerClearAll} className=\"btn\">Clear All</button>\r\n                        </section>\r\n                    ) : <div className={classNames({\r\n                        'geo-spinner': this.props.editable,\r\n                        'hide-map': !this.props.editable\r\n                    })}>\r\n                            <Spinner />\r\n                        </div>}\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './MapModal.scss'\r\n\r\nclass MapModal extends Component {\r\n    body = document.body;\r\n\r\n    componentDidMount() {    \r\n        this.body.style.overflowY = 'hidden';\r\n        this.body.style.height = '100vh';\r\n        this.body.style.paddingRight = '15px';\r\n    }\r\n    componentWillUnmount() {\r\n        this.body.style.overflowY = 'auto';\r\n        this.body.style.height = '100vh';\r\n        this.body.style.paddingRight = '0';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"modal-map\">\r\n                <a className=\"__close\" href=\" #\" onClick={(e) => { e.preventDefault(); this.props.onClose() } }> </a>\r\n                <section>{this.props.children}</section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapModal;","import React, { Component } from 'react';\r\n\r\nimport './Modal.scss'\r\nimport Geo from '../../../shared/Geo/Geo';\r\nimport MapModal from '../MapModal/MapModal';\r\nimport Backdrop from '../../../shared/Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    constructor() {\r\n        super()\r\n        this.dialogRef = React.createRef();\r\n    }\r\n    \r\n    onClose = () => this.setState({ isOpen: false })\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.onClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.onClose);\r\n    }\r\n\r\n    showMap = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\">\r\n                <header className=\"modal__header\">\r\n                    <h1>{!this.props.editable ? this.props.title : 'Tour Creating'}</h1>\r\n                    {!this.props.editable ? <>\r\n                        <span>Price: US$ {this.props.event.price}</span>\r\n                        <span>Start date: {new Date(this.props.event.date).toLocaleDateString()}</span>\r\n                        <span>Available Seats: {this.props.availableSeats || 0}/{this.props.maxSeats || 9}</span>\r\n                        {this.state.isOpen && (\r\n                            <>\r\n                                <Backdrop />\r\n                                <MapModal onClose={this.showMap}>\r\n                                    <Geo event={this.props.event} editable={false} zoom={15} />\r\n                                </MapModal>\r\n                            </>\r\n                        )}\r\n                        <a href=\"# \" onClick={(e) => { e.preventDefault(); this.showMap() }}><i className=\"fa fa-map-marked-alt\" /></a>\r\n                    </> : null}\r\n                </header>\r\n                <section>{this.props.children}</section>\r\n                <div>\r\n                    <section className=\"modal__actions\">\r\n                        {this.props.canCancel \r\n                        && <button className=\"btn\" onClick={this.props.onCancel}>Cancel</button>}\r\n                        {this.props.canConfirm \r\n                        && this.props.availableSeats < this.props.maxSeats \r\n                        && <button className=\"btn\" onClick={this.props.onConfirm}>{this.props.confirmText}</button>}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","import React, { Component } from 'react';\r\nimport picture from '../../../../shared/assets/tour_item_img/t2.jpg'\r\nimport picture2 from '../../../../shared/assets/tour_item_img/t1.jpg';\r\nimport picture3 from '../../../../shared/assets/tour_item_img/t3.jpg';\r\n\r\nimport './EventItem.scss';\r\nimport Backdrop from '../../../../shared/Backdrop/Backdrop';\r\nimport MapModal from '../../../Modal/MapModal/MapModal';\r\nimport Geo from '../../../../shared/Geo/Geo';\r\n\r\nconst Pictures = [picture3, picture, picture2];\r\n\r\nclass EventItem extends Component {\r\n    state = {\r\n        mapIsOpen: false\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mapIsOpen: false })\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.onClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.onClose);\r\n    }\r\n\r\n    showMap = () => {\r\n        this.setState( {mapIsOpen: !this.state.mapIsOpen} );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li key={this.props.eventId} className=\"events__list-item\">\r\n                <div className=\"events__list-item__img\">\r\n                    <img src={Pictures[this.props.count]} alt=\"Tour\" />\r\n                </div>\r\n                <div className=\"events__list-item__content\">\r\n                    <div className=\"item__content__header\">{this.props.title}</div>\r\n                    <div className=\"item__content__price\">{this.props.price} USD</div>\r\n                    <div className=\"item__content__button\">\r\n                        { this.props.userInfo.isAdmin ?\r\n                            <>\r\n                                <button className=\"btn\" onClick={this.props.onDetail.bind(this, this.props.eventId)}>View/Edit</button>\r\n                                <a href=\" #\" onClick={this.props.onDelete.bind(this, this.props.eventId)}><i className=\"fa fa-trash-restore\"></i></a>\r\n                            </> :\r\n                            <button className=\"btn\" onClick={this.props.onDetail.bind(this, this.props.eventId)}>View Details</button>}\r\n                    </div>\r\n                    {this.state.mapIsOpen && (\r\n                        <>\r\n                                <Backdrop />\r\n                                <MapModal onClose={this.showMap}>\r\n                                    <Geo event={this.props.event} editable={false} zoom={8}/>\r\n                                </MapModal>\r\n                            </>\r\n                    )}\r\n                    <a className=\"__show_route\" href=' #' onClick={(e) => {e.preventDefault(); this.showMap()}}>show route</a>\r\n                </div>\r\n                <div className=\"events__list-item__botton\">\r\n                    <div className=\"item__botton__seats\">Seats Available: {this.props.availableSeats}/{this.props.maxSeats}</div>\r\n                    <span><i className=\"fa fa-calendar\"></i> Start: <b>{new Date(this.props.date).toLocaleDateString()}</b></span>\r\n                    {this.props.options ?\r\n                        <>\r\n                            <ul>\r\n                                {this.props.options.map((option, idx) => <li key={Date.now() + idx}><i className={`fa ${option.icon}`} /> {option.name}{option.name === 'Duration' && option.subtitle && <span>{option.subtitle}</span>}</li>)}\r\n                            </ul>\r\n                        </> : null}\r\n                </div>\r\n            </li>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default EventItem;\r\n","import React from 'react';\r\n\r\nimport EventItem from './EventItem/EventItem';\r\nimport './EventList.scss';\r\n\r\nconst eventList = props => {\r\n    const events = props.events.map((event, idx) => {\r\n        return (\r\n            <EventItem\r\n                count={idx}\r\n                key={event._id} \r\n                eventId={event._id}\r\n                event={event}\r\n                title={event.title}\r\n                date={event.date}\r\n                price={event.price}\r\n                options={event.options}\r\n                userInfo={props.userInfo}\r\n                onDetail={props.onViewDetail}\r\n                availableSeats={event.availableSeats || 0}\r\n                maxSeats={event.maxSeats || 9}\r\n                onDelete={props.onDelete}\r\n                />\r\n        );\r\n    });\r\n    return (<ul className=\"event__list\">{events}</ul>);\r\n};\r\n\r\nexport default eventList;","import React from 'react'\r\n\r\nimport './EventForm.scss'\r\n\r\nconst EventForm = (props) => {\r\n    return (\r\n        <>\r\n            <form>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" maxLength=\"32\" ref={props.titleElRef} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input type=\"number\" id=\"price\" ref={props.priceElRef} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"maxSeats\">Seats number</label>\r\n                    <input type=\"number\" id=\"maxSeats\" ref={props.maxSeatsElRef} />\r\n                </div>\r\n                <div className=\"form-control options\">\r\n                    <div className=\"options__list\">\r\n                        <label htmlFor=\"options\">Options<em>(for several options press Ctrl)</em></label>\r\n                        <select multiple id=\"options\" size=\"7\" ref={props.optionsElRef} onChange={props.onChange.bind(null, 'option')}>\r\n                            <option label=\"Duration\" title=\"fa-history\">9 hours</option>\r\n                            <option label=\"Instant confirmation\" title=\"fa-bolt\"></option>\r\n                            <option label=\"Live tour guide\" title=\"fa-language\">Turkish, English, German, Russian</option>\r\n                            <option label=\"Wheelchair accessible\" title=\"fa-wheelchair\"></option>\r\n                            <option label=\"Pickup included\" title=\"fa-bus\">\r\n                                Pickup is from hotels in Side, Turkey. Please meet your guide 5 minutes before your pickup time at the security door to your hotel.\r\n                        </option>\r\n                            <option label=\"Spa\" title=\"fa-spa\"></option>\r\n                            <option label=\"Swimming pool\" title=\"fa-swimming-pool\"></option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"options__subtitle\">\r\n                        <label htmlFor=\"subtitle\">Option's subtitle</label>\r\n                        <textarea type=\"text\" id=\"subtitle\" rows=\"7\" maxLength=\"150\" ref={props.subtitleElRef} onChange={props.onChange.bind(null, 'subtitle')} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"about-activity\">\r\n                    <div>\r\n                        <fieldset ref={props.inclusionsElRef}>\r\n                            <legend>Inclusions</legend>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"pickup\" name=\"inclusions\" value=\"pickup\" />\r\n                                <label htmlFor=\"pickup\">Hotel pickup and drop-off</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"lunch\" name=\"inclusions\" value=\"lunch\" />\r\n                                <label htmlFor=\"lunch\">Lunch</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"boat\" name=\"inclusions\" value=\"boat\" />\r\n                                <label htmlFor=\"boat\">Boat trip</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"guide\" name=\"inclusions\" value=\"guide\" />\r\n                                <label htmlFor=\"guide\">Professional tour guide</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"insurance\" name=\"inclusions\" value=\"insurance\" />\r\n                                <label htmlFor=\"insurance\">Travel insurance</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"fruits\" name=\"inclusions\" value=\"fruits\" />\r\n                                <label htmlFor=\"fruits\">Fruit service</label>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                    <div>\r\n                        <fieldset ref={props.exclusionsElRef}>\r\n                            <legend>Not allowed</legend>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"drinks\" name=\"exclustions\" value=\"drinks\" />\r\n                                <label htmlFor=\"drinks\">Drinks</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"fee\" name=\"exclustions\" value=\"fee\" />\r\n                                <label htmlFor=\"fee\">Damlatas Cave entrance fee</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"expenses\" name=\"exclustions\" value=\"expenses\" />\r\n                                <label htmlFor=\"expenses\">Personal expenses</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"pets\" name=\"exclustions\" value=\"pets\" />\r\n                                <label htmlFor=\"pets\">Pets</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"bags\" name=\"exclustions\" value=\"bags\" />\r\n                                <label htmlFor=\"bags\">Luggage or large bags</label>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                    <div>\r\n                        <fieldset ref={props.goodToKnowElRef}>\r\n                            <legend>Prepare for the activity</legend>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"passport\" name=\"good-to-know\" value=\"passport\" />\r\n                                <label htmlFor=\"passport\">Passport or ID card</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"shoes\" name=\"good-to-know\" value=\"shoes\" />\r\n                                <label htmlFor=\"shoes\">Comfortable shoes</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"sunglasses\" name=\"good-to-know\" value=\"sunglasses\" />\r\n                                <label htmlFor=\"sunglasses\">Sunglasses</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"sunscreen\" name=\"good-to-know\" value=\"sunscreen\" />\r\n                                <label htmlFor=\"sunscreen\">Sunscreen</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"cash\" name=\"good-to-know\" value=\"cash\" />\r\n                                <label htmlFor=\"cash\">Cash</label>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input type=\"dateTime-local\" id=\"date\" ref={props.dateElRef} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea type=\"text\" id=\"description\" ref={props.descriptionElRef} />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventForm\r\n","import React from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport axios from 'axios';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport authContext from \"../../context/auth-context\";\r\nimport './Slider.scss';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Notify from '../Notify/Notify';\r\n\r\nexport default class Slider extends React.Component {\r\n  static contextType = authContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.event = props.event;\r\n    this.PREFIX_URL = `https://iran-tour-bucket.s3.eu-north-1.amazonaws.com/img/${this.event._id}/`\r\n    this.state = {\r\n      pending: true,\r\n      imageBucket: [],\r\n      upload: false,\r\n      isSuccess: false,\r\n      withError: false,\r\n      file: {},\r\n      src: '',\r\n      images: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`${this.context.hostname}/file/image-list`, { params: { event: this.event._id } })\r\n      .then(res => {\r\n        const imageBucket = res.data.items\r\n        let images = [];\r\n        !imageBucket.length && images.push({\r\n          thumbnail: `https://iran-tour-bucket.s3.eu-north-1.amazonaws.com/img/event1/4v.jpg`,\r\n          original: `https://iran-tour-bucket.s3.eu-north-1.amazonaws.com/img/event1/4v.jpg`,\r\n          embedUrl: 'https://www.youtube.com/embed/4pSzhZ76GdM?autoplay=1&showinfo=0',\r\n          description: 'Render custom slides within the gallery',\r\n        });\r\n        for (let i = 0; i < imageBucket.length; i++) {\r\n          images.push({\r\n            original: `${this.PREFIX_URL}${imageBucket[i]}`,\r\n            thumbnail: `${this.PREFIX_URL}${imageBucket[i]}`\r\n          });\r\n        }\r\n        this.setState({ pending: false, imageBucket: res.data.items, images });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  _onImageClick(event) {\r\n    console.log('HERE', event.target, 'at index', this._imageGallery.getCurrentIndex());\r\n  }\r\n\r\n  async onDelete() {\r\n    const selectedImage = this.state.images[this._imageGallery.getCurrentIndex()]['original'];\r\n    try {\r\n      const res = await axios.get(`${this.context.hostname}/file/image-delete`,\r\n        {\r\n          params: { event: this.event._id, original: selectedImage }\r\n        });\r\n      console.log(`Image Successfully deleted: ${res}`);\r\n      res ? this.setState({isSuccess: true}) : this.setState({withError: true})\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.setState({withError: true})\r\n    }\r\n  }\r\n\r\n  async onChange(e) {\r\n    const reader = new FileReader();\r\n    this.setState({ file: e.target.files[0] }, () => { reader.readAsDataURL(this.state.file) });\r\n    reader.addEventListener('load', (event) => {\r\n      this.setState({ src: event.target.result });\r\n    })\r\n    this.setState({ upload: true });\r\n  }\r\n\r\n  async onSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('image', this.state.file);\r\n    try {\r\n      const upload = await axios.post(`${this.context.hostname}/file/image-upload`, formData, {\r\n        params: {\r\n          event: this.event._id\r\n        },\r\n        headers: {  \r\n          \"Accept\": \"multipart/form-data\",\r\n          'Content-type': 'multipart/form-data'\r\n        },\r\n      })\r\n      upload ? this.setState({isSuccess: true}) : this.setState({withError: true})\r\n    } catch (err) {\r\n      console.log(`error during the upload: ${err.response.data.title}`)\r\n      this.setState({withError: true})\r\n    }\r\n  }\r\n  onUpload = () => {\r\n    this.setState({upload: false, isSuccess: false})\r\n  }\r\n  onError = () => {\r\n    this.setState({withError: false, isSuccess: false})\r\n  }\r\n  render() {\r\n    const { pending, upload, images } = this.state;\r\n    return (\r\n      <>\r\n        {!pending ? <ImageGallery ref={i => (this._imageGallery = i)} lazyLoad={true} items={images} /> : (<Spinner style={{ margin: '34%' }} />)}\r\n        {this.context.isAdmin  ?\r\n          <div className=\"file\">\r\n            {upload ? <img src={this.state.src} className=\"file__img\" alt=\"\"></img> : null}\r\n            <form onSubmit={this.onSubmit.bind(this)}>\r\n              <label className=\"file__label\" htmlFor=\"customFile\"><i className={\r\n                classNames({\r\n                  'fa fa-file-export': !upload,\r\n                  'fa fa-file-upload': upload\r\n                })}></i></label>\r\n              {!upload ? <input type=\"file\" className=\"file__input\" id=\"customFile\" onChange={this.onChange.bind(this)} />\r\n                : <input type=\"submit\" className=\"file__upload\" id=\"customFile\" />}\r\n            </form>\r\n            <button onClick={this.onDelete.bind(this)}><i className=\"fa fa-trash-alt\"></i></button>\r\n            {this.state.isSuccess && <Notify text={'Image was load/delete successfully'} duration={2} onClose={this.onUpload}/>}\r\n            {this.state.withError && <Notify error={true} text={'Loading was failed'} duration={3} onClose={this.onError}/>}\r\n          </div> : <></>}\r\n      </>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport './FeedBack.scss'\r\nimport authContext from '../../context/auth-context'\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Notify from '../Notify/Notify';\r\n\r\nexport default class FeedBack extends Component {\r\n    static contextType = authContext;\r\n\r\n    state = {\r\n        isSuccess: false,\r\n        hasSent: false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.nameElRef = React.createRef();\r\n        this.emailElRef = React.createRef();\r\n        this.ageElRef = React.createRef();\r\n        this.countryElRef = React.createRef();\r\n        this.messageElRef = React.createRef();\r\n        this.subjectElRef = React.createRef();\r\n        this.genderElRef = React.createRef();\r\n    }\r\n\r\n    sendEmail = (e) => {\r\n        e.preventDefault();\r\n        const name = this.nameElRef.current.value;\r\n        const email = this.emailElRef.current.value;\r\n        const age = this.ageElRef.current.value;\r\n        const country = this.countryElRef.current.value;\r\n        const message = this.messageElRef.current.value;\r\n        const subject = this.subjectElRef.current.value;\r\n        const gender = this.genderElRef.current.value;\r\n        const body = { email, subject, name, country, gender, age, message }\r\n        axios.post(\r\n            `${this.context.hostname}/send`,\r\n            body,\r\n            {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: \"include\"\r\n            })\r\n            .then(() => {\r\n                return this.setState({ isSuccess: true, hasSent: true, notifyMsg: 'Email was sent!' })\r\n            })\r\n            .catch(err => {\r\n                return this.setState({ isSuccess: false, hasSent: true, notifyMsg: 'Email wasn\\'t sent!'}, () => new Error(err)) \r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.hasSent ? (\r\n                    <>\r\n                        <Backdrop />\r\n                        <div className=\"container\">\r\n                            <div className=\"wrapper\">\r\n                                <section className=\"contact-info\">\r\n                                    <div className=\"contact-info__header\">\r\n                                        <h1>Contact Info</h1>\r\n                                    </div>\r\n                                    <div className=\"contact-info__body\">\r\n                                        <ul>\r\n                                            <li>first corner St LA</li>\r\n                                            <li>aemail@gmail.com</li>\r\n                                            <li>(777)-4545-4545</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </section>\r\n                                <section className=\"form\">\r\n                                    <div className=\"form__header\">\r\n                                        <h3>Email Us</h3>\r\n                                    </div>\r\n                                    <div className=\"form__body\">\r\n                                        <form onSubmit={this.sendEmail}>\r\n                                            <div className=\"form__input\">\r\n                                                <label htmlFor=\"\">Name</label>\r\n                                                <input type=\"text\" ref={this.nameElRef} />\r\n                                            </div>\r\n                                            <div className=\"form__input\">\r\n                                                <label htmlFor=\"\">Email*</label>\r\n                                                <input type=\"email\" name=\"email\" ref={this.emailElRef} required />\r\n                                            </div>\r\n                                            <div className=\"form__input\">\r\n                                                <label htmlFor=\"\">Age</label>\r\n                                                <input type=\"number\" ref={this.ageElRef} />\r\n                                            </div>\r\n                                            <div className=\"form__input\">\r\n                                                <label htmlFor=\"\">Country</label>\r\n                                                <input type=\"text\" ref={this.countryElRef} />\r\n                                            </div>\r\n                                            <div className=\"form__input\">\r\n                                                <label>Reason</label>\r\n                                                <select name=\"reason\" ref={this.subjectElRef}>\r\n                                                    <option value=\"Cost\">Cost</option>\r\n                                                    <option value=\"Secure\">Secure</option>\r\n                                                    <option value=\"Visa\">Visa</option>\r\n                                                    <option value=\"Food\">Food</option>\r\n                                                    <option value=\"Transport\">Transport</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form__input\">\r\n                                                <label>Gender</label>\r\n                                                <select name=\"gender\" ref={this.genderElRef}>\r\n                                                    <option value=\"Male\">Male</option>\r\n                                                    <option value=\"Female\">Female</option>\r\n                                                    <option value=\"Other\">Other</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form__message full\">\r\n                                                <label htmlFor=\"\">Message*</label>\r\n                                                <textarea className=\"form__message\" ref={this.messageElRef} required></textarea>\r\n                                            </div>\r\n                                            <div className=\"form__button full\">\r\n                                                <button type=\"submit\" className=\"form__button\">Submit</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ) : <Notify error={!this.state.isSuccess} text={this.state.notifyMsg} duration={3} onClose={this.props.onClose} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Slider from '../../../shared/Slider/Slider';\r\nimport FeedBack from '../../../shared/FeedBack/FeedBack';\r\n\r\nimport './EventView.scss'\r\nconst summaryList = [\r\n    'Inclusions',\r\n    'Exclusions',\r\n    'Prepare for the activity'\r\n]\r\n\r\nfunction textToHtml(html)\r\n{\r\n    let arr = html.split(/<br\\s*\\/?>/i);\r\n    return arr.reduce((acc, a, idx) => {\r\n        const el = <React.Fragment key={Date.now() + idx}>{a}<br /></React.Fragment>;\r\n        return acc.concat(el);\r\n    }, []);\r\n}\r\n\r\nexport default class EventView extends Component {\r\n    state = {\r\n        showPopup: {\r\n            map: false,\r\n            feedBack: false\r\n        }\r\n    }\r\n\r\n    cb = (e) => {\r\n        if (e.keyCode === 27) {\r\n            this.setState({ showPopup: { map: false, feedBack: false } })\r\n        }\r\n    }\r\n\r\n    onSendForm = () => {\r\n        this.setState({ showPopup: { feedBack: false } })\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.cb);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.cb);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"tour-container\">\r\n                    <div className=\"tour-slider\">\r\n                        <Slider event={this.props.event} />\r\n                    </div>\r\n                    <section className=\"tour-content\">\r\n                        <div className=\"see-more-content\">\r\n                           <p>{ textToHtml(this.props.event.description) }</p>\r\n                        </div>\r\n                    </section>\r\n                    <article className=\"tour-sidebar\">\r\n                        <h2>About this activity</h2>\r\n                        <ul>\r\n                            {this.props.event.options.map((option, idx) => <li key={Date.now() + idx}><i className={`fa ${option.icon}`} /> {option.name}{option.subtitle && <><br /><span>{option.subtitle}</span></>}</li>)}\r\n                        </ul>\r\n                    </article>\r\n                    <div className=\"modal__footer\">\r\n                        <section className=\"extra-info\">\r\n                            {this.props.event.extraInfo.map((el, elIdx) => {\r\n                                return (\r\n                                    <details key={Date.now() + elIdx}>\r\n                                        <summary>{summaryList[elIdx]}</summary>\r\n                                        <ul key={Date.now() + elIdx + 1}>\r\n                                            {\r\n                                                el.split('&').sort(a => a.match('^!') ? 1 : -1).map((item, itmIdx) => {\r\n                                                    if (item.match('^!')) {\r\n                                                        const clippedItm = item.slice(1).trim();\r\n                                                        return (<li key={Date.now() + itmIdx}><i className=\"fa fa-times-circle\" />{clippedItm}</li>)\r\n                                                    } else {\r\n                                                        return (<li key={Date.now() + itmIdx}><i className=\"fa fa-check-circle\" />{item}</li>)\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                    </details>\r\n                                )\r\n                            })}\r\n                        </section>\r\n                        <h2>Contact the host</h2>\r\n                        <div className=\"contact-host\">\r\n                            <p>Need more details before you book your trip?</p>\r\n                            <button onClick={() => { this.setState({ showPopup: { map: false, feedBack: true } }) }}>Contact the host</button>\r\n                        </div>\r\n                        {this.state.showPopup.feedBack &&\r\n                            <>\r\n                                <FeedBack event={this.props.event} onClose={this.onSendForm} />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { path } from 'ramda'\r\n\r\nimport authContext from \"../../context/auth-context\";\r\n\r\nimport Backdrop from '../../shared/Backdrop/Backdrop';\r\nimport Spinner from '../../shared/Spinner/Spinner';\r\nimport Geo from \"../../shared/Geo/Geo\";\r\n\r\nimport Modal from '../../components/Modal/MainModal/Modal';\r\nimport MapModal from '../../components/Modal//MapModal/MapModal';\r\nimport EventList from '../../components/Events/EventList/EventList';\r\nimport EventForm from \"../../components/Events/EventForm/EventForm\";\r\nimport EventView from \"../../components/Events/EventView/EventView\";\r\n\r\nimport './Events.scss';\r\nimport Notify from \"../../shared/Notify/Notify\";\r\n\r\nclass EventsPage extends Component {\r\n    state = {\r\n        creating: false,\r\n        events: [],\r\n        isLoading: false,\r\n        selectedEvent: null,\r\n        geos: [],\r\n        showMap: false,\r\n        isSuccess: false,\r\n        withError: false,\r\n        notifyMsg: ''\r\n    };\r\n\r\n    isActive = true;\r\n\r\n    static contextType = authContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleElRef = React.createRef();\r\n        this.priceElRef = React.createRef();\r\n        this.dateElRef = React.createRef();\r\n        this.descriptionElRef = React.createRef();\r\n        this.maxSeatsElRef = React.createRef();\r\n        this.optionsElRef = React.createRef();\r\n        this.subtitleElRef = React.createRef();\r\n        this.inclusionsElRef = React.createRef();\r\n        this.exclusionsElRef = React.createRef();\r\n        this.goodToKnowElRef = React.createRef();\r\n    }\r\n    cb = (e) => {\r\n        if (e.keyCode === 27) {\r\n            this.setState({ selectedEvent: null })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchEvents();\r\n        document.addEventListener('keydown', this.cb);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.isActive = false;\r\n        document.removeEventListener('keydown', this.cb);\r\n    }\r\n\r\n    startCreateEventHandler = () => {\r\n        this.setState({ creating: true });\r\n    }\r\n\r\n    onGeoFormSubmit = geos => {\r\n        if (geos.length) {\r\n            this.setState({ geos })\r\n        }\r\n    }\r\n\r\n    extraInfoJoin = (fieldSet) => {\r\n        return [...fieldSet.current.elements].map(({ nextSibling, checked }) => checked ? `${nextSibling.innerText}` : `!${nextSibling.innerText}`).join('&')\r\n    }\r\n\r\n    formChangeHandler = (type) => {\r\n        if (type === 'option') {\r\n            this.subtitleElRef.current.value = this.optionsElRef.current.selectedOptions[0].value;\r\n            console.log(this.subtitleElRef.current.value);\r\n        }\r\n        if (type === 'subtitle' && this.optionsElRef.current.selectedOptions.length) {\r\n            this.optionsElRef.current.selectedOptions[0].value = this.subtitleElRef.current.value;\r\n        }\r\n    }\r\n\r\n    modalConfirmHandler = () => {\r\n        this.setState({ creating: false });\r\n\r\n        const title = this.titleElRef.current.value;\r\n        const price = +this.priceElRef.current.value;\r\n        const date = this.dateElRef.current.value;\r\n        const description = this.descriptionElRef.current.value;\r\n        const maxSeats = +this.maxSeatsElRef.current.value;\r\n        const optionsList = [...this.optionsElRef.current.selectedOptions];\r\n        const options = optionsList && optionsList.map(option => ({ icon: option.title, name: option.label, subtitle: option.value || '' }));\r\n        const inclusions = this.extraInfoJoin(this.inclusionsElRef);\r\n        const exclusions = this.extraInfoJoin(this.exclusionsElRef);\r\n        const goodToKnow = this.extraInfoJoin(this.goodToKnowElRef);\r\n        const extraInfo = [inclusions, exclusions, goodToKnow]\r\n\r\n        if (title.trim().length === 0 ||\r\n            price <= 0 ||\r\n            date.trim().length === 0 ||\r\n            description.trim().lenght === 0) {\r\n            return;\r\n        }\r\n\r\n        let requestBody = {\r\n            query: `\r\n            mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!, $maxSeats: Int, $geos: [GeoInputArgs!]!, $options: [OptionInputArgs!]!, $extraInfo: [String]){\r\n                createEvent(eventInput: {\r\n                  title: $title,\r\n                  description: $description,\r\n                  price: $price,\r\n                  date: $date,\r\n                  geos: $geos,\r\n                  maxSeats: $maxSeats\r\n                  options: $options\r\n                  extraInfo: $extraInfo\r\n                    }) {\r\n                  _id\r\n                  price\r\n                  date\r\n                  description\r\n                  title\r\n                  maxSeats\r\n                  availableSeats\r\n                  geos {\r\n                    _id\r\n                    coords\r\n                    name\r\n                    message\r\n                  }\r\n                  options {\r\n                      icon\r\n                      name\r\n                  }\r\n                  extraInfo\r\n                }\r\n              }`,\r\n            variables: { title, description, date, price, maxSeats, geos: this.state.geos, options, extraInfo }\r\n        };\r\n\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resParse => {\r\n                this.setState(prevState => {\r\n                    const updatedEvents = [...prevState.events];\r\n                    updatedEvents.push({\r\n                        _id: resParse.data.createEvent._id,\r\n                        title: resParse.data.createEvent.title,\r\n                        price: resParse.data.createEvent.price,\r\n                        date: resParse.data.createEvent.date,\r\n                        description: resParse.data.createEvent.description,\r\n                        maxSeats: resParse.data.createEvent.maxSeats,\r\n                        availableSeats: resParse.data.createEvent.availableSeats,\r\n                        geos: resParse.data.createEvent.geos,\r\n                        options: resParse.data.createEvent.options,\r\n                        extraInfo: resParse.data.createEvent.extraInfo\r\n                    });\r\n                    return { events: updatedEvents, geos: [] };\r\n                });\r\n            })\r\n            .then(() => this.setState({ isSuccess: true, notifyMsg: 'Tour was successfylly created' }))\r\n            .catch(err => {\r\n                this.setState({ withError: true, notifyMsg: 'Tour wasn\\'t created' })\r\n                return new Error(err)\r\n            });\r\n    }\r\n\r\n    modalCancelHandler = () => {\r\n        this.setState({ creating: false, selectedEvent: null, geos: [], showMap: false });\r\n    }\r\n\r\n    fetchEvents() {\r\n        this.setState({ isLoading: true });\r\n        let requestBody = {\r\n            query: `\r\n                query {\r\n                    events {\r\n                        _id\r\n                        title\r\n                        price\r\n                        date\r\n                        description\r\n                        geos {\r\n                            _id\r\n                            coords\r\n                            name\r\n                            message\r\n                        }\r\n                        options {\r\n                            icon\r\n                            name\r\n                            subtitle\r\n                        }\r\n                        availableSeats\r\n                        maxSeats\r\n                        extraInfo\r\n                    }\r\n            }`\r\n        };\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n        .then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed!');\r\n            }\r\n            return res.json();\r\n            })\r\n            .then(resParse => {\r\n                const events = resParse.data.events.reverse();\r\n                this.setState({ events: events, isLoading: false });\r\n            })\r\n            .catch(err => {\r\n                this.setState({ isLoading: false });\r\n                throw new Error(err)\r\n            });\r\n    }\r\n\r\n    showDetailHandler = eventId => {\r\n        this.setState(prevState => {\r\n            const selectedEvent = prevState.events.find(event => event._id === eventId);\r\n            return { selectedEvent: selectedEvent };\r\n        })\r\n    }\r\n\r\n    bookEventHandler = () => {\r\n        const token = this.context.token;\r\n        if (!token) {\r\n            this.setState({ selectedEvent: null });\r\n            return;\r\n        }\r\n        if (this.state.selectedEvent.availableSeats >= this.state.selectedEvent.maxSeats) return;\r\n        let requestBody = {\r\n            query: `\r\n                    mutation {\r\n                        bookEvent {\r\n                            id\r\n                        }\r\n                    }`\r\n        };\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resParse => {\r\n                const bookId = path(['data', 'bookEvent', 'id'], resParse)\r\n                if (bookId) {\r\n                    requestBody = {\r\n                        query: `\r\n                            mutation CreateBookingItem($BookItemArgs: CreateBookingItemInput!) {\r\n                                createBookingItem(input: $BookItemArgs) {\r\n                                    id\r\n                                    quantity\r\n                                }\r\n                            }\r\n                        `,\r\n                        variables: {\r\n                            BookItemArgs: {\r\n                                bookingId:bookId,\r\n                                eventId: this.state.selectedEvent._id,\r\n                                unitPrice: this.state.selectedEvent.price\r\n                            }\r\n                        }\r\n                    }\r\n                    fetch(`${this.context.hostname}/graphql`, {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(requestBody),\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            'Cookie': `${document.cookie}`\r\n                        },\r\n                        credentials: \"include\"\r\n                    })\r\n                    .then(res => {\r\n                        if (res.status !== 200 && res.status !== 201) {\r\n                            throw new Error('Failed!');\r\n                        }\r\n                        return res.json();\r\n                    })\r\n                    .then(resParse => {\r\n                        if (this.isActive) {\r\n                            this.setState({ selectedEvent: null, notifyMsg: 'The tour was successfully booked', isSuccess: true });\r\n                        }\r\n                    })\r\n                    .catch(err => new Error(`Error occured while creating bookingItem ${err}`))\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (this.isActive) {\r\n                    this.setState({ selectedEvent: null, notifyMsg: 'Sorry some error happened', withError: true });\r\n                }\r\n                throw new Error(err)\r\n            });\r\n    }\r\n\r\n    resetFlags = () => {\r\n        this.setState({ isSuccess: false, withError: false, notifyMsg: '' })\r\n    }\r\n\r\n    eventRemoveHandler = (eventId) => {\r\n        if (!eventId) return new Error('eventId was not passed');\r\n        console.log(eventId);\r\n        const requestBody = {\r\n            query: `mutation RemoveEvent($eventId: ID!) {\r\n                removeEvent(eventId: $eventId)\r\n            }`,\r\n            variables: { eventId }\r\n        };\r\n\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState((prevState) => {\r\n                    const events = prevState.events.filter(event => event._id !== eventId)\r\n                    return { events, isSuccess: true, notifyMsg: 'Event was successfylly deleted' }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ withError: true, notifyMsg: 'Event wasn\\'t deleted' })\r\n                return new Error(err)\r\n            });\r\n    }\r\n\r\n    showMapHandler = () => {\r\n        this.setState( {showMap: !this.state.showMap} )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <section className=\"events-container\">\r\n                    {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n                    {this.state.creating && this.context.isAdmin && (\r\n                        <Modal\r\n                            title=\"Add Tour\"\r\n                            canCancel\r\n                            editable={true}\r\n                            canConfirm\r\n                            onCancel={this.modalCancelHandler}\r\n                            onConfirm={this.modalConfirmHandler}\r\n                            confirmText=\"Confirm\">\r\n                            <a className=\"map-ref\" href=\"# \" onClick={(e) => { e.preventDefault(); this.setState({ showMap: true }) }}><span>Set route</span> - on map</a>\r\n                            {this.state.showMap && (\r\n                                <>\r\n                                    <Backdrop />\r\n                                    <MapModal  onClose={this.showMapHandler} >\r\n                                        <Geo onFormSubmit={this.onGeoFormSubmit} editable={true} />\r\n                                    </MapModal>\r\n                                </>\r\n                            )}\r\n                            <EventForm\r\n                                onChange={this.formChangeHandler}\r\n                                titleElRef={this.titleElRef}\r\n                                priceElRef={this.priceElRef}\r\n                                dateElRef={this.dateElRef}\r\n                                maxSeatsElRef={this.maxSeatsElRef}\r\n                                descriptionElRef={this.descriptionElRef}\r\n                                optionsElRef={this.optionsElRef}\r\n                                subtitleElRef={this.subtitleElRef}\r\n                                inclusionsElRef={this.inclusionsElRef}\r\n                                exclusionsElRef={this.exclusionsElRef}\r\n                                goodToKnowElRef={this.goodToKnowElRef}\r\n                            />\r\n                        </Modal>)}\r\n                    {this.state.isSuccess && <Notify duration={3} text={this.state.notifyMsg} onClose={this.resetFlags} />}\r\n                    {this.state.withError && <Notify duration={3} text={this.state.notifyMsg} error={true} onClose={this.resetFlags} />}\r\n                    {this.state.selectedEvent && (\r\n                        <Modal\r\n                            title={this.state.selectedEvent.title}\r\n                            availableSeats={this.state.selectedEvent.availableSeats || 0}\r\n                            maxSeats={this.state.selectedEvent.maxSeats || 9}\r\n                            event={this.state.selectedEvent}\r\n                            confirmText={this.context.token ? 'Book' : 'Confirm'}\r\n                            canCancel\r\n                            canConfirm\r\n                            editable={false}\r\n                            onCancel={this.modalCancelHandler}\r\n                            onConfirm={this.bookEventHandler.bind()}>\r\n                            <EventView\r\n                                event={this.state.selectedEvent}\r\n                            />\r\n                        </Modal>\r\n                    )}\r\n                    {this.context.token && this.context.isAdmin && (\r\n                        <div className=\"sticky_btn\">\r\n                            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n                                Add\r\n                            </button>\r\n                        </div>\r\n                        \r\n                    )}\r\n                    {this.state.isLoading ?\r\n                        <Spinner /> :\r\n                        <EventList\r\n                            events={this.state.events}\r\n                            userInfo={this.context}\r\n                            onViewDetail={this.showDetailHandler}\r\n                            onDelete={this.eventRemoveHandler}\r\n                        />\r\n                    }\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventsPage;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nimport './BookingList.scss'\r\n\r\nconst bookingList = props => (\r\n  <ul className=\"booking_items\">\r\n    {props.booking.map(event => {\r\n      const date = event.date\r\n        ? moment(new Date(+event.date).toUTCString()).utc()\r\n        : undefined\r\n      return (\r\n        <li key={event.id} className=\"booking_items__item\">\r\n          <div className=\"item__body\">\r\n            <h3>{event.title || event.name}</h3>\r\n            <div className=\"item_body__content\">\r\n              <p>\r\n                <span>{date && date.format('LLL')}</span>\r\n                <span>{event.quantity} Person</span>\r\n              </p>\r\n              <strong>\r\n                {' $'}\r\n                {event.price}\r\n              </strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"item__footer\">\r\n            <div>\r\n              <span>\r\n                Cancel before <strong>{date && date.format('LT')}</strong> on{' '}\r\n                <strong>{date && date.subtract(1, 'days').format('LL')}</strong>{' '}\r\n                for a full refund.\r\n              </span>\r\n            </div>\r\n            <div>\r\n              {!props.readOnly && (\r\n                <a href=\" #\"\r\n                   onClick={props.onChangeQuantity.bind(this, [event.id, 1])} >\r\n                    <i className=\"fa fa-plus-circle\" />\r\n                </a>\r\n              )}\r\n              {!props.readOnly && (\r\n                <a href=\" #\"\r\n                   onClick={props.onChangeQuantity.bind(this, [event.id, -1])} >\r\n                    <i className=\"fa fa-minus-circle\" />\r\n                </a>\r\n              )}\r\n              {!props.readOnly && (\r\n                <a href=\" #\"\r\n                   onClick={props.onDelete.bind(this, event.id)} >\r\n                    <i className=\"fa fa-trash-alt\" />\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    })}\r\n  </ul>\r\n)\r\n\r\nexport default bookingList\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs';\r\n\r\nimport './BookingsChart.css';\r\n\r\nconst BOOKINGS_COSTS = {\r\n    'Cheap': {\r\n        min: 0,\r\n        max: 50\r\n    },\r\n    'Normal': {\r\n        min: 50,\r\n        max: 250\r\n    },\r\n    'Expensive': {\r\n        min: 250,\r\n        max: 100000,\r\n    }\r\n}\r\n\r\nconst BookingsChart = props => {\r\n    let float_values = [];\r\n    const chartData = { labels: [], datasets: [] };\r\n    for (const cost in BOOKINGS_COSTS) {\r\n        const filteredBookingsCount = props.bookings.reduce((prev, curr) => {\r\n            if (curr.price >= BOOKINGS_COSTS[cost].min && curr.price <= BOOKINGS_COSTS[cost].max) {\r\n                return prev + 1;\r\n            } else {\r\n                return prev;\r\n            }\r\n        }, 0);\r\n        let fillColor = '';\r\n        switch (cost) {\r\n            case 'Cheap': fillColor = \"rgba(220,220,220,0.5)\";\r\n                break;\r\n            case 'Normal': fillColor = \"#3F51B5\";\r\n                break;\r\n            case 'Expensive': fillColor = \"rgba(255, 69, 12, 0.856)\";\r\n                break;\r\n            default: fillColor = \"rgba(220,220,220,0.5)\";\r\n        }\r\n        chartData.labels.push(cost);\r\n        float_values.push(filteredBookingsCount);\r\n        chartData.datasets.push({\r\n            fillColor,\r\n            strokeColor: \"rgba(220,220,220,0.8)\",\r\n            highlightFill: \"rgba(220,220,220,0.75)\",\r\n            highlightStroke: \"rgba(220,220,220,1)\",\r\n            data: float_values\r\n        });\r\n        float_values = [...float_values];\r\n        float_values[float_values.length - 1] = 0;\r\n    };\r\n\r\n    return <div className=\"chartContainer\"><Bar data={chartData} width=\"600\" height=\"250\" /></div>\r\n}\r\n\r\nexport default BookingsChart;","import React from 'react';\r\n\r\nimport './BookingsControls.scss';\r\n\r\nconst BookingsControls = props => {\r\n    return (\r\n        <div className=\"bookings-controls\">\r\n            <button className={props.activeOutputType==='list' ? 'active' : ''} onClick={props.onChange.bind(this, 'list')}>List</button>\r\n            <button className={props.activeOutputType==='chart' ? 'active' : ''} onClick={props.onChange.bind(this, 'chart')}>Chart</button>\r\n            <button className={props.activeOutputType==='history' ? 'active' : ''} onClick={props.onChange.bind(this, 'history')}>Paid bookings</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingsControls;","const countriesList = [ \"Bangladesh\",  \"Belgium\",  \"Burkina Faso\",  \"Bulgaria\",  \"Bosnia and Herzegovina\",  \"Barbados\",  \"Wallis and Futuna\",  \"Saint Barthelemy\",  \"Bermuda\",  \"Brunei\",  \"Bolivia\",  \"Bahrain\",  \"Burundi\",  \"Benin\",  \"Bhutan\",  \"Jamaica\",  \"Bouvet Island\",  \"Botswana\",  \"Samoa\",  \"Bonaire, Saint Eustatius and Saba \",  \"Brazil\",  \"Bahamas\",  \"Jersey\",  \"Belarus\",  \"Belize\",  \"Russia\",  \"Rwanda\",  \"Serbia\",  \"East Timor\",  \"Reunion\",  \"Turkmenistan\",  \"Tajikistan\",  \"Romania\",  \"Tokelau\",  \"Guinea-Bissau\",  \"Guam\",  \"Guatemala\",  \"South Georgia and the South Sandwich Islands\",  \"Greece\",  \"Equatorial Guinea\",  \"Guadeloupe\",  \"Japan\",  \"Guyana\",  \"Guernsey\",  \"French Guiana\",  \"Georgia\",  \"Grenada\",  \"United Kingdom\",  \"Gabon\",  \"El Salvador\",  \"Guinea\",  \"Gambia\",  \"Greenland\",  \"Gibraltar\",  \"Ghana\",  \"Oman\",  \"Tunisia\",  \"Jordan\",  \"Croatia\",  \"Haiti\",  \"Hungary\",  \"Hong Kong\",  \"Honduras\",  \"Heard Island and McDonald Islands\",  \"Venezuela\",  \"Puerto Rico\",  \"Palestinian Territory\",  \"Palau\",  \"Portugal\",  \"Svalbard and Jan Mayen\",  \"Paraguay\",  \"Iraq\",  \"Panama\",  \"French Polynesia\",  \"Papua New Guinea\",  \"Peru\",  \"Pakistan\",  \"Philippines\",  \"Pitcairn\",  \"Poland\",  \"Saint Pierre and Miquelon\",  \"Zambia\",  \"Western Sahara\",  \"Estonia\",  \"Egypt\",  \"South Africa\",  \"Ecuador\",  \"Italy\",  \"Vietnam\",  \"Solomon Islands\",  \"Ethiopia\",  \"Somalia\",  \"Zimbabwe\",  \"Saudi Arabia\",  \"Spain\",  \"Eritrea\",  \"Montenegro\",  \"Moldova\",  \"Madagascar\",  \"Saint Martin\",  \"Morocco\",  \"Monaco\",  \"Uzbekistan\",  \"Myanmar\",  \"Mali\",  \"Macao\",  \"Mongolia\",  \"Marshall Islands\",  \"Macedonia\",  \"Mauritius\",  \"Malta\",  \"Malawi\",  \"Maldives\",  \"Martinique\",  \"Northern Mariana Islands\",  \"Montserrat\",  \"Mauritania\",  \"Isle of Man\",  \"Uganda\",  \"Tanzania\",  \"Malaysia\",  \"Mexico\",  \"Israel\",  \"France\",  \"British Indian Ocean Territory\",  \"Saint Helena\",  \"Finland\",  \"Fiji\",  \"Falkland Islands\",  \"Micronesia\",  \"Faroe Islands\",  \"Nicaragua\",  \"Netherlands\",  \"Norway\",  \"Namibia\",  \"Vanuatu\",  \"New Caledonia\",  \"Niger\",  \"Norfolk Island\",  \"Nigeria\",  \"New Zealand\",  \"Nepal\",  \"Nauru\",  \"Niue\",  \"Cook Islands\",  \"Kosovo\",  \"Ivory Coast\",  \"Switzerland\",  \"Colombia\",  \"China\",  \"Cameroon\",  \"Chile\",  \"Cocos Islands\",  \"Canada\",  \"Republic of the Congo\",  \"Central African Republic\",  \"Democratic Republic of the Congo\",  \"Czech Republic\",  \"Cyprus\",  \"Christmas Island\",  \"Costa Rica\",  \"Curacao\",  \"Cape Verde\",  \"Cuba\",  \"Swaziland\",  \"Syria\",  \"Sint Maarten\",  \"Kyrgyzstan\",  \"Kenya\",  \"South Sudan\",  \"Suriname\",  \"Kiribati\",  \"Cambodia\",  \"Saint Kitts and Nevis\",  \"Comoros\",  \"Sao Tome and Principe\",  \"Slovakia\",  \"South Korea\",  \"Slovenia\",  \"North Korea\",  \"Kuwait\",  \"Senegal\",  \"San Marino\",  \"Sierra Leone\",  \"Seychelles\",  \"Kazakhstan\",  \"Cayman Islands\",  \"Singapore\",  \"Sweden\",  \"Sudan\",  \"Dominican Republic\",  \"Dominica\",  \"Djibouti\",  \"Denmark\",  \"British Virgin Islands\",  \"Germany\",  \"Yemen\",  \"Algeria\",  \"United States\",  \"Uruguay\",  \"Mayotte\",  \"United States Minor Outlying Islands\",  \"Lebanon\",  \"Saint Lucia\",  \"Laos\",  \"Tuvalu\",  \"Taiwan\",  \"Trinidad and Tobago\",  \"Turkey\",  \"Sri Lanka\",  \"Liechtenstein\",  \"Latvia\",  \"Tonga\",  \"Lithuania\",  \"Luxembourg\",  \"Liberia\",  \"Lesotho\",  \"Thailand\",  \"French Southern Territories\",  \"Togo\",  \"Chad\",  \"Turks and Caicos Islands\",  \"Libya\",  \"Vatican\",  \"Saint Vincent and the Grenadines\",  \"United Arab Emirates\",  \"Andorra\",  \"Antigua and Barbuda\",  \"Afghanistan\",  \"Anguilla\",  \"U.S. Virgin Islands\",  \"Iceland\",  \"Iran\",  \"Armenia\",  \"Albania\",  \"Angola\",  \"Antarctica\",  \"American Samoa\",  \"Argentina\",  \"Australia\",  \"Austria\",  \"Aruba\",  \"India\",  \"Aland Islands\",  \"Azerbaijan\",  \"Ireland\",  \"Indonesia\",  \"Ukraine\",  \"Qatar\",  \"Mozambique\" ]\r\nexport default countriesList;","import React, { Component } from 'react'\r\n\r\nimport countriesList from \"../../../../shared/countriesList\";\r\n\r\nimport './PersonalDetails.scss'\r\n\r\nexport class PersonalDetails extends Component {\r\n    telRegex = '^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-/0-9]*$'\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.billDetailsRef = React.createRef();\r\n    }\r\n\r\n    billDetailsHandler = e => {\r\n        e.target.classList.add('validate');\r\n        if (!e.target.validity.valid) {\r\n            e.target.nextElementSibling.classList.remove('validation_success')\r\n            e.target.nextElementSibling.classList.add('validation_error')\r\n            e.target.nextElementSibling.innerHTML = e.target.validationMessage\r\n        } else {\r\n            e.target.nextElementSibling.classList.add('validation_success')\r\n            e.target.nextElementSibling.classList.remove('validation_error')\r\n            e.target.nextElementSibling.innerHTML = ''\r\n            this.props.handleChange(e.target.name)(e.target.value);\r\n        }\r\n        const inputs = [...this.billDetailsRef.current.elements]\r\n        const inValid = inputs.some(input => !input.validity.valid)\r\n        !inValid ? this.props.handleChange('isValidPersonalInfo')(true) : inputs.forEach(el => {\r\n            el.classList.add('validate')\r\n            this.props.handleChange('isValidPersonalInfo')(false)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const values = this.props.values\r\n        return (\r\n            <>\r\n                <fieldset className=\"billing_details\" ref={this.billDetailsRef}>\r\n                    <legend>Personal details</legend>\r\n                    <p className=\"form-row\">\r\n                        <label htmlFor=\"firstName\">First name *</label>\r\n                        <input type=\"text\" id=\"firstName\" name=\"firstName\" maxLength=\"45\" defaultValue={values.firstName} onInput={this.billDetailsHandler} required />\r\n                        <span aria-live=\"polite\"></span>\r\n                    </p>\r\n                    <p className=\"form-row\">\r\n                        <label htmlFor=\"lastName\">Last name *</label>\r\n                        <input type=\"text\" id=\"lastName\" name=\"lastName\" maxLength=\"45\" defaultValue={values.lastName} onInput={this.billDetailsHandler} required />\r\n                        <span aria-live=\"polite\"></span>\r\n                    </p>\r\n                    <p className=\"form-row\">\r\n                        <label htmlFor=\"clientEmail\">Email *</label>\r\n                        <input type=\"email\" id=\"clientEmail\" name=\"clientEmail\" maxLength=\"255\" defaultValue={values.clientEmail} onInput={this.billDetailsHandler} required />\r\n                        <span aria-live=\"polite\"></span>\r\n                    </p>\r\n                    <p className=\"form-row\">\r\n                        <label htmlFor=\"country\">Country *</label>\r\n                        <input list=\"countries\" id=\"country\" name=\"country\" defaultValue={values.country} onChange={this.billDetailsHandler} required />\r\n                        <span aria-live=\"polite\"></span>\r\n                        <datalist id=\"countries\" >\r\n                            {countriesList.map(country => <option key={country} value={country}></option>)}\r\n                        </datalist>\r\n                    </p>\r\n                    <p className=\"form-row\">\r\n                        <label htmlFor=\"mobilePhone\">Mobile phone *</label>\r\n                        <input type=\"tel\" id=\"mobilePhone\"\r\n                            name=\"mobilePhone\" defaultValue={values.mobilePhone}\r\n                            maxLength=\"20\"\r\n                            onInput={this.billDetailsHandler}\r\n                            placeholder=\"e.g. +43 (0)288 234 534\"\r\n                            pattern={this.telRegex}\r\n                            required />\r\n                        <span aria-live=\"polite\"></span>\r\n                    </p>\r\n                </fieldset>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonalDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\nimport './BookingsSideBar.scss'\r\n\r\nfunction TotalBtns(props) {\r\n  return <div className={'total__buttons'}>{props.children}</div>\r\n}\r\n\r\nconst BookingsSideBar = props => {\r\n  const [totalChanged, setIndicateStyle] = useState(false)\r\n  const [prevTotal, setPrevTotal] = useState(props.total_cost)\r\n  useEffect(\r\n    function updateTotal() {\r\n      if (prevTotal !== props.total_cost) {\r\n        setIndicateStyle(true)\r\n        setTimeout(() => {\r\n          setIndicateStyle(false)\r\n        }, 1000)\r\n        setPrevTotal(props.total_cost)\r\n      }\r\n    },\r\n    [props.total_cost]\r\n  )\r\n  return (\r\n    <article\r\n      className=\"total bill_details_article\"\r\n      style={{ background: props.bg_color }}\r\n    >\r\n      <div className=\"total__cost\">\r\n        <span>Total ({props.events.length} items)</span>\r\n        <strong\r\n          className={classNames({\r\n            'total-changed': totalChanged\r\n          })}\r\n        >\r\n          US${props.total_cost}\r\n        </strong>\r\n      </div>\r\n      <p className=\"total__gasoline\">\r\n        {props.includeGas ? 'Including gasoline' : 'Excluding gasoline'}\r\n      </p>\r\n      {props.children}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport { BookingsSideBar, TotalBtns }\r\n","import React from 'react'\r\n\r\nimport './ConfirmInfo.scss'\r\n\r\nexport default function ConfirmInfo({values: { firstName, lastName, clientEmail, country, mobilePhone, address }}) {\r\n    return (\r\n        <>\r\n            <h2>Please confirm the specified data</h2>\r\n            <ul className=\"booking_items confirm_list\">\r\n                <li><strong>First Name</strong><span>{firstName}</span></li>\r\n                <li><strong>Last Name</strong><span>{lastName}</span></li>\r\n                <li><strong>Email</strong><span>{clientEmail}</span></li>\r\n                <li><strong>Country</strong><span>{country}</span></li>\r\n                <li><strong>Phone</strong><span>{mobilePhone}</span></li>\r\n                <li><strong>Hotel Address</strong><span>{address}</span></li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './PayMethodsInfo.scss'\r\n\r\nconst PayMethodsInfo = () => {\r\n    return (\r\n        <div className=\"content-secondary\">\r\n            <div className=\"trust-block accept\">\r\n                <h4 className=\"trust-block-title\">You can pay with:</h4>\r\n                <ul className=\"payment-methods\">\r\n                    <li className=\"payment-method paypal available\" title=\"PayPal\"></li>\r\n                    <li className=\"payment-method mastercard available\" title=\"MasterCard\"></li>\r\n                    <li className=\"payment-method visa available\" title=\"VISA\"></li>\r\n                    <li className=\"payment-method maestro available\" title=\"Maestro\"></li>\r\n                    <li className=\"payment-method jcb  available\" title=\"JCB\"></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"trust-block security-gyg\">\r\n                <h4 className=\"trust-block-title\">Data Security</h4>\r\n                <div className=\"trust-block-lock icon-lock\">\r\n                    <p className=\"security-gyg__item first\">Your info's safe with us. All data is\r\n                        <strong> encrypted and transmitted securely </strong>with an SSL protocol.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"trust-block why-gyg\">\r\n                <h4 className=\"trust-block-title\">Book with confidence</h4>\r\n                <div className=\"trust-block-checkmark\">\r\n                    <p className=\"why-gyg-item first\">\r\n                        <strong>Best price guarantee. </strong>\r\n                        Found your activity for less? We'll refund the difference.\r\n                    </p>\r\n                    <p className=\"why-gyg-item subsequent\">\r\n                        <strong>Peace of mind. </strong>\r\n                        Book ahead to skip the lines and reserve your spot.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayMethodsInfo\r\n","import React from 'react';\r\nimport { CardNumberElement, CardExpiryElement, CardCvcElement } from 'react-stripe-elements'\r\n\r\nimport './CardSection.scss'\r\n\r\nclass CardSection extends React.Component {\r\n\r\n    handleChange = (e) => {\r\n            console.log(e)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"payment_form_elements\">\r\n                <label>\r\n                    Card number\r\n                    <CardNumberElement />\r\n                </label>\r\n                <label>\r\n                    Expiration date\r\n                    <CardExpiryElement />\r\n                </label>\r\n                <label>\r\n                    CVC\r\n                    <CardCvcElement />\r\n                </label>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardSection;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { injectStripe } from 'react-stripe-elements';\r\nimport CardSection from './CardSection';\r\nimport { map, pathOr } from 'ramda'\r\n\r\nimport './CheckoutForm.scss'\r\nimport authContext from \"../../../context/auth-context\";\r\nimport Notify from '../../../shared/Notify/Notify';\r\n\r\n// Visa: 4242 4242 4242 4242 — Exp: 01/20 — CVV: 123\r\n// Mastercard: 5555 5555 5555 4444 — Exp: 01/20 — CVV: 123\r\n\r\nclass CheckoutForm extends React.Component {\r\n    static contextType = authContext;\r\n\r\n    state = {\r\n        isRedirect: false,\r\n        status: {\r\n            succeeded: false,\r\n            failed: false,\r\n            pending: false\r\n        },\r\n        isInvalidForm: false,\r\n        error_message: '',\r\n        ...this.props.values.values\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.stripe.createToken({ type: 'card', name: this.state.firstName }).then(({ token }) => this.setState({ token: token.id })).catch(err => console.log(err));\r\n        this.props.stripe.createPaymentMethod('card', { billing_details: { name: this.state.firstName } })\r\n            .then(({ paymentMethod: { card } }) => {\r\n                this.onPaymentCheck(card)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    };\r\n\r\n    onPaymentCheck = () => {\r\n        const customerInput = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            country: this.state.country,\r\n            residence: this.state.address || '',\r\n            clientEmail: this.state.clientEmail,\r\n            mobilePhone: this.state.mobilePhone\r\n        }\r\n        const transform = ({_id, quantity}) => ({ id: _id, quantity })\r\n        const eventsIds = map(transform)(this.state.events)\r\n        let requestBody = {\r\n            query: `\r\n            mutation CreatePayment($PaymentInputArgs: PaymentInputArgs! ){\r\n                createPayment(paymentInput: $PaymentInputArgs) {\r\n                  id\r\n                  paid\r\n                  status\r\n                }\r\n              }`,\r\n            variables: { PaymentInputArgs: { token: this.state.token, total: (this.state.total_cost * 100), eventsIds } }\r\n        };\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`,\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(res => {\r\n                if (res.errors) {\r\n                    this.setState({ isInvalidForm: true, error_message: res.errors[0].message })\r\n                    const humanMessage = pathOr([res.errors[0].message], ['extensions', 'exception', 'invalidArgs'], res.errors[0])\r\n                    this.setState({ error_message: humanMessage[0], isInvalidForm: true })\r\n                    return new Error(res.errors[0].message)\r\n                } else {\r\n                    return res\r\n                }\r\n            })\r\n            .then(({ data: { createPayment: { id, paid, status } } }) => {\r\n                if (paid) {\r\n                    requestBody = {\r\n                        query: `\r\n                            mutation CreateOrUpdateCustomer($CustomerInput: CustomerInput!) {\r\n                                createOrUpdateCustomer(customerInput: $CustomerInput)\r\n                            }\r\n                        `,\r\n                        variables: {\r\n                            CustomerInput: {\r\n                                ...customerInput,\r\n                                lastPaymentId: id,\r\n                                lastBill: this.state.total_cost,\r\n                                lastBookingId: this.state.bookingId,\r\n                                lastPaymentStatus: status\r\n                            }\r\n                        }\r\n                    }\r\n                    fetch(`${this.context.hostname}/graphql`, {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(requestBody),\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            'Cookie': `${document.cookie}`,\r\n                        },\r\n                        credentials: \"include\"\r\n                    })            \r\n                    .then(res => {\r\n                        if (res.status !== 200 && res.status !== 201) {\r\n                            throw new Error('Failed!');\r\n                        }\r\n                        return res.json();\r\n                    })\r\n                    .then(res => {\r\n                        this.setState({ status: { [status]: true }, isInvalidForm: false })\r\n                    })\r\n                    .catch(err => `Customer: ${err}`)\r\n                }\r\n            })\r\n            .catch(err => `From Server: ${err}`)\r\n    };\r\n\r\n    render() {\r\n        const { status: { succeeded, pending, failed }, isInvalidForm, error_message } = this.state\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handleSubmit} className=\"payment_stripe_form\">\r\n                    <CardSection />\r\n                    <button>Confirm order</button>\r\n                </form>\r\n                { isInvalidForm && <Notify text={error_message} error={true} duration=\"4\" onClose={() => { this.setState({ isInvalidForm: false }) }} />}\r\n                <>\r\n                    {succeeded || pending || failed ?\r\n                        <>\r\n                            <Notify text={!failed ? 'Payment was successful.\\nDetailed information was sent to your email' : 'Payment declined'} error={failed} success={succeeded || pending} duration=\"3\" onClose={() => { this.setState({ isRedirect: true }) }} />\r\n                            {this.state.isRedirect && <Redirect to=\"/events\" />}\r\n                        </> : null}\r\n                </>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectStripe(CheckoutForm);","import React from 'react';\r\nimport { Elements } from 'react-stripe-elements'\r\nimport InjectedCheckoutForm from './CheckoutForm';\r\n\r\nclass StoreCheckout extends React.Component {\r\n    render() {\r\n        return (\r\n            <Elements>\r\n                <InjectedCheckoutForm values={this.props}/>\r\n            </Elements>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StoreCheckout;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nimport './BookingHistoryItem.scss'\r\n\r\nexport const BookingHistoryItem = (props) => (\r\n    <ul className=\"booking_history_items\">\r\n    {props.booking.map(event => {\r\n      const date = event.date\r\n        ? moment(new Date(+event.date).toUTCString()).utc()\r\n        : undefined\r\n      return (\r\n        <li key={event.id} className=\"booking_history_items__item\">\r\n          <div className=\"history_item__body\">\r\n            <h3>{event.title || event.name}</h3>\r\n            <div className=\"history_item_body__content\">\r\n              <p>\r\n                <span>{date && date.format('LLL')}</span>\r\n                <span>{event.quantity} Person</span>\r\n              </p>\r\n              <strong>\r\n                {' $'}\r\n                {event.price}\r\n              </strong>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    })}\r\n  </ul>\r\n)\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { path, addIndex, compose, mergeDeepRight, prop, omit, map } from 'ramda'\r\nimport authContext from \"../../../context/auth-context\";\r\n\r\nimport Spinner from '../../../shared/Spinner/Spinner'\r\nimport { BookingHistoryItem } from './BookingHistoryItem/BookingHistoryItem';\r\nimport './BookingsHistory.scss'\r\n\r\nexport const BookingsHistory = () => {\r\n    const context = useContext(authContext)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [bookings, setBookings] = useState(null)\r\n\r\n    const fetchBookings = () => {\r\n        let requestBody = {\r\n            query: `\r\n                query {\r\n                    paidBookingsByUserId {\r\n                        id\r\n                        completed\r\n                        cost\r\n                        updatedAt\r\n                        events {\r\n                           id\r\n                           quantity\r\n                           eventId {\r\n                               _id\r\n                               title\r\n                               date\r\n                               price\r\n                           }\r\n                        }\r\n                    }\r\n            }`\r\n        };\r\n        fetch(`${context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n        .then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed!');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resParsed => {\r\n            const bookings = path(['data', 'paidBookingsByUserId'], resParsed)\r\n            if (!bookings) {\r\n                setIsEmpty(true)\r\n                setIsLoading(false)\r\n                return\r\n            }\r\n            const merge = y => mergeDeepRight(prop('eventId', y), omit(['eventId'], y))\r\n            const transformer = x => map(merge, x)\r\n            const getEvents = booking => booking.events\r\n            const bookedEvents = map(compose( transformer, getEvents ), bookings)\r\n            const transformedBookings = addIndex(map)((x, idx) => {\r\n                x.events = bookedEvents[idx]\r\n                return x\r\n            })(bookings)\r\n            setBookings(transformedBookings)\r\n            setIsLoading(false)\r\n        })\r\n        .catch(err => new Error(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBookings()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"history_list\">\r\n                { isLoading && <Spinner /> }\r\n                { !isLoading && isEmpty && <h1>You have not paid any bookings yet</h1> }\r\n                { !isLoading && !isEmpty &&  \r\n                    bookings.map(booking => {\r\n                        return (\r\n                            <div className=\"history_total\" key={booking.id}>\r\n                                <h3>Total: {booking.cost}</h3>\r\n                                <p>Paid: {new Date(booking.updatedAt).toUTCString()}</p>\r\n                                <BookingHistoryItem booking={booking.events} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classNames from 'classnames';\r\nimport { path, mergeDeepLeft, prop, omit, map, propEq, chain, multiply, find } from 'ramda'\r\n\r\nimport BookingList from '../../components/Bookings/BookingsList/BookingList';\r\nimport authContext from \"../../context/auth-context\";\r\nimport Spinner from \"../../shared/Spinner/Spinner\";\r\nimport BookingsChart from \"../../components/Bookings/BookingsChart/BookingsChart\";\r\nimport BookingsControls from \"../../components/Bookings/BookingsControls/BookingsControls\";\r\n\r\nimport Geo from \"../../shared/Geo/Geo\";\r\nimport PersonalDetails from \"../../components/Bookings/FormUserDetails/PersonalDetails/PersonalDetails\";\r\nimport { BookingsSideBar, TotalBtns } from \"../../components/Bookings/BookingsSideBar/BookingsSideBar\";\r\nimport NavLink from \"react-router-dom/NavLink\";\r\nimport Notify from '../../shared/Notify/Notify';\r\nimport ConfirmInfo from \"../../components/Bookings/FormUserDetails/ConfirmInfo/ConfirmInfo\";\r\nimport PayMethodsInfo from \"../../components/Bookings/BookingsSideBar/PayMethodsInfo/PayMethodsInfo\";\r\n\r\nimport StoreCheckout from '../../components/Payment/StoreCheckout/StoreCheckout'\r\nimport './Bookings.scss';\r\nimport { BookingsHistory } from \"../../components/Bookings/BookingsHistory/BookingsHistory\";\r\n\r\nexport function fetchFunction(requestBody) {\r\n    return fetch(`https://6uu2upeg5a.execute-api.eu-west-2.amazonaws.com/dev/graphql`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Cookie': `${document.cookie}`\r\n        },\r\n        credentials: \"include\"\r\n    })\r\n}\r\n\r\nclass BookingPage extends Component {\r\n    state = {\r\n        events: [],\r\n        bookingId: '',\r\n        hotels: [],\r\n        isLoading: false,\r\n        outputType: 'list',\r\n        total_cost: 0,\r\n        paid_distance: 0,\r\n        step: 1,\r\n        back: false,\r\n        next: false,\r\n        billDetails: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        clientEmail: '',\r\n        country: '',\r\n        mobilePhone: '',\r\n        isValidPersonalInfo: false,\r\n        isValidResidenceInfo: false,\r\n        user_residence: {\r\n            label: '',\r\n            coords: []\r\n        },\r\n        warning_message: ''\r\n    };\r\n\r\n    static contextType = authContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.billDetailsRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchBooks();\r\n    }\r\n\r\n    fetchBooks() {\r\n        this.setState({ isLoading: true });\r\n        let requestBody = {\r\n            query: `\r\n                query {\r\n                    bookingsByUserId {\r\n                        id\r\n                        completed\r\n                        events {\r\n                           id\r\n                           quantity\r\n                           eventId {\r\n                               _id\r\n                               title\r\n                               date\r\n                               price\r\n                               geos {\r\n                                   coords\r\n                               }\r\n                           }\r\n                        }\r\n                    }\r\n            }`\r\n        };\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .catch(err => `From Server: ${err}`)\r\n            .then(resParse => {\r\n                const eventList = path(['data', 'bookingsByUserId'], resParse)\r\n                const uncompletedBooking = eventList ? find(event => !event.completed)(eventList) : undefined\r\n\r\n                if (!eventList.length || !uncompletedBooking || !uncompletedBooking.events) {\r\n                    this.setState({ events: [], hotels: [], isLoading: false })\r\n                    return\r\n                }\r\n                const transformer = (x) => mergeDeepLeft(prop('eventId', x), omit(['eventId'], x))\r\n                const bookedEvents = chain( transformer, uncompletedBooking.events )\r\n                let total_cost = 0\r\n                bookedEvents.forEach(event => {\r\n                    if (event.price) total_cost += multiply(event.quantity, event.price)\r\n                });\r\n                this.setState({ events: bookedEvents,  total_cost, isLoading: false, bookingId: uncompletedBooking.id })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ isLoading: false });\r\n                throw new Error(`On client ${err}`)\r\n            });\r\n    }\r\n\r\n    getPaidDistance = (prevTotal, { user_residence }) => {\r\n        // const tourHasGeos = processedBook.eventId.some(tour => tour.geos && tour.geos[0] && tour.geos[0].coords && tour.geos[0].coords.length)\r\n        if (this.state.events) {\r\n            let paid_distance = this.state.events.reduce((total, tour) => {\r\n                if (tour.geos[0] && tour.geos[0].coords && tour.geos[0].coords.length) {\r\n                    const tourLatLang = tour.geos[0].coords;\r\n                    const distance = this.getDistance(tourLatLang, user_residence.coords); // from hotel to start point of tour in KM\r\n                    return total + distance;\r\n                }\r\n                return total;\r\n            }, 0)\r\n            paid_distance = Math.floor(((paid_distance / 100) * 12) * 1.181);\r\n            this.setState({ paid_distance, total_cost: paid_distance + prevTotal, user_residence, isValidResidenceInfo: true })\r\n        }\r\n    }\r\n\r\n    getDistance = (latLang1, latLang2) => {\r\n        const radLat1 = latLang1[0] * (Math.PI / 180);\r\n        const radLon1 = latLang1[1] * (Math.PI / 180);\r\n        const radLat2 = latLang2[0] * (Math.PI / 180);\r\n        const radLon2 = latLang2[1] * (Math.PI / 180);\r\n\r\n        //mean radius according to WGS 84\r\n        const earthRadius = 6371.0087714;\r\n\r\n        const radLonDif = radLon2 - radLon1;\r\n        const atan2top = Math.sqrt(Math.pow(Math.cos(radLat2) * Math.sin(radLonDif), 2) + Math.pow(Math.cos(radLat1) * Math.sin(radLat2) - Math.sin(radLat1) * Math.cos(radLat2) * Math.cos(radLonDif), 2));\r\n        const atan2bottom = Math.sin(radLat1) * Math.sin(radLat2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.cos(radLonDif);\r\n        const deltaAngle = Math.atan2(atan2top, atan2bottom);\r\n\r\n        return earthRadius * deltaAngle;\r\n    }\r\n\r\n    eventQuantityHandler = ([bookingItemId, quantity]) => {\r\n        if (!bookingItemId || !quantity || !this.state.events.length) {\r\n            return\r\n        }\r\n        const event = find(propEq('id', bookingItemId))(this.state.events)\r\n        if (event.quantity === 1 && quantity === -1) {\r\n            return this.deleteBookingHandler(bookingItemId)\r\n        }\r\n        const prevEventTotal = event.quantity * event.price\r\n        quantity += event.quantity\r\n        let requestBody = {\r\n            query:`\r\n                mutation UpdateBookingItem($UpdateBookingItemInput: UpdateBookingItemInput!) {\r\n                    updateBookingItem(input: $UpdateBookingItemInput) {\r\n                        quantity\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                UpdateBookingItemInput: {\r\n                    id: bookingItemId,\r\n\t\t            quantity\r\n                }\r\n            }\r\n        }\r\n        fetchFunction(requestBody)\r\n        .then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed!');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resParse => {\r\n            if (resParse) {\r\n                const updatedQnty = path(['data', 'updateBookingItem', 'quantity'], resParse)\r\n                const updatedTotal = (this.state.total_cost - prevEventTotal) + updatedQnty * event.price\r\n                this.setState(prevState => {\r\n                    const updatedEvents = map(ev => {\r\n                        if (ev.id === bookingItemId) {\r\n                            ev.quantity = updatedQnty\r\n                            return ev\r\n                        } \r\n                        return ev\r\n                    })(prevState.events)\r\n                    return { events: updatedEvents, total_cost: updatedTotal };\r\n                });\r\n            }\r\n        })\r\n        .catch(err => new Error(err))\r\n    }\r\n\r\n    deleteBookingHandler = (bookingItemId) => {\r\n        if (!bookingItemId) {\r\n            return\r\n        }\r\n        let requestBody = {\r\n            query: `\r\n                mutation DeleteBookingItem($bookingItemId: ID!) {\r\n                    deleteBookingItem(bookingItemId: $bookingItemId) {\r\n                        unitPrice\r\n                        quantity\r\n                    }\r\n            }`,\r\n            variables: {\r\n                bookingItemId: bookingItemId\r\n            }\r\n        };\r\n        fetch(`${this.context.hostname}/graphql`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': `${document.cookie}`\r\n            },\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resParse => {\r\n                console.log(resParse)\r\n                if (resParse) {\r\n                    const { quantity, unitPrice } = path(['data', 'deleteBookingItem'], resParse)\r\n                    this.setState(prevState => {\r\n                        const updatedEvents = prevState.events.filter(event => event.id !== bookingItemId);\r\n                        const updatedTotal = prevState.total_cost - ( quantity * unitPrice )\r\n                        return { events: updatedEvents, total_cost: updatedTotal };\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({ isLoading: false });\r\n                throw new Error(err)\r\n            });\r\n    }\r\n\r\n    outPutTypeSwitcher = outputType => {\r\n        if (outputType) {\r\n            this.setState({ outputType })\r\n        }     \r\n    };\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({ step: step + 1, next: true, back: false })\r\n    };\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({ step: step - 1, back: true, next: false });\r\n    };\r\n\r\n\r\n    // get user hotel address and calculates extra payment for difference between tours start point and his hotel\r\n    getUserHotelLocation = (address) => {\r\n        if (!address) return\r\n        address.fullLocationInfo.then(res => {\r\n            if (res.address.CountryCode !== 'TUR') {\r\n                return this.setState({ isValidResidenceInfo: false, warning_message: 'Please select location from Turkey area' })\r\n            }\r\n            const updatedTotal = !this.state.paid_distance ? this.state.total_cost : (this.state.total_cost - this.state.paid_distance);\r\n            this.getPaidDistance(updatedTotal, { user_residence: { label: address.label, coords: address.coords }})\r\n            // this.setState(prevState => {\r\n            //     const updatedTotal = !this.state.paid_distance ? prevState.total_cost : (prevState.total_cost - prevState.paid_distance);\r\n            //     this.getPaidDistance(updatedTotal)\r\n            //     return { user_residence: { label: address.label, coords: address.coords }, isValidResidenceInfo: true }\r\n            // })\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({ isValidResidenceInfo: false, warning_message: err.details && err.details[0] })\r\n        })\r\n    }\r\n\r\n    handleChange = input => (value) => {\r\n        this.setState({ [input]: value })\r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state\r\n        const { firstName, lastName, clientEmail, country, mobilePhone, user_residence: { label: address }, total_cost, bookingId, events } = this.state\r\n        const values = { firstName, lastName, clientEmail, country, mobilePhone, address, total_cost, bookingId, events }\r\n        switch (step) {\r\n            case 1:\r\n                return !this.state.isLoading ? (\r\n                    <>\r\n                        <section className={classNames(\r\n                            {\r\n                                'booking_container': true,\r\n                                'next': this.state.next,\r\n                                'back': this.state.back\r\n                            }\r\n                        )}>\r\n                            <div className=\"booking_list\">\r\n                                <BookingsControls\r\n                                    activeOutputType={this.state.outputType}\r\n                                    onChange={this.outPutTypeSwitcher}\r\n                                />\r\n                                <div>\r\n                                    {this.state.outputType === 'list' &&\r\n                                    <BookingList booking={this.state.events} \r\n                                        onDelete={this.deleteBookingHandler}\r\n                                        onChangeQuantity={this.eventQuantityHandler} />}\r\n                                    {this.state.outputType === 'chart' &&\r\n                                    <BookingsChart bookings={this.state.events} />}\r\n                                    {this.state.outputType === 'history' &&\r\n                                    <BookingsHistory />}\r\n                                </div>\r\n                            </div>\r\n                            <BookingsSideBar events={this.state.events} total_cost={this.state.total_cost} >\r\n                                <TotalBtns>\r\n                                    <button className=\"btn checkout_btn\" onClick={this.nextStep} disabled={!this.state.events.length}>Next</button>\r\n                                    <NavLink to=\"/events\" className=\"btn checkout_btn see_more\">See more activities</NavLink>\r\n                                </TotalBtns>\r\n                            </BookingsSideBar>\r\n                        </section>\r\n                    </>\r\n                ) : <Spinner />\r\n            case 2:\r\n                return (\r\n                    <section className={classNames(\r\n                        {\r\n                            'booking_container': true,\r\n                            'next': this.state.next,\r\n                            'back': this.state.back\r\n                        }\r\n                    )}>\r\n                        <div className=\"booking_list\">\r\n                            <PersonalDetails handleChange={this.handleChange} values={values} />\r\n                        </div>\r\n                        <BookingsSideBar events={this.state.events} total_cost={this.state.total_cost} nextStep={this.nextStep} prevStep={this.prevStep} disabled={!this.state.isValidPersonalInfo} >\r\n                            <BookingList booking={this.state.events} readOnly={true} />\r\n                            <TotalBtns>\r\n                                <button className=\"btn checkout_btn\" onClick={this.nextStep} disabled={!this.state.isValidPersonalInfo}>Next</button>\r\n                                <a href=\" #\" className=\"btn checkout_btn see_more\" onClick={this.prevStep}>Back</a>\r\n                            </TotalBtns>\r\n                        </BookingsSideBar>\r\n                    </section>\r\n                )\r\n            case 3:\r\n                return (\r\n                    <section className={classNames(\r\n                        {\r\n                            'booking_container': true,\r\n                            'next': this.state.next,\r\n                            'back': this.state.back\r\n                        }\r\n                    )}>\r\n                        <div className=\"booking_list\">\r\n                            <h2>Information requested by the local partner</h2>\r\n                            <br />\r\n                            <h3>We need the address of your accommodation in order to arrange pickup.</h3>\r\n                            <div className=\"user_hotel\">\r\n                                <Geo heigh=\"400px\" getUserHotelLocation={this.getUserHotelLocation} enableSearch />\r\n                            </div>\r\n                        </div>\r\n                        {this.state.warning_message && <Notify text={this.state.warning_message} warning duration={4} onClose={() => { this.setState({ warning_message: '' }) }} />}\r\n                        <BookingsSideBar events={this.state.events} total_cost={this.state.total_cost} nextStep={this.nextStep} prevStep={this.prevStep} includeGas>\r\n                            <BookingList booking={this.state.events} readOnly={true} />\r\n                            <TotalBtns>\r\n                                <button className=\"btn checkout_btn\" onClick={this.nextStep} disabled={!this.state.isValidResidenceInfo}>Next</button>\r\n                                <a href=\" #\" className=\"btn checkout_btn see_more\" onClick={this.prevStep}>Back</a>\r\n                            </TotalBtns>\r\n                        </BookingsSideBar>\r\n                    </section>\r\n                )\r\n            case 4:\r\n                return (\r\n                    <section className={classNames(\r\n                        {\r\n                            'booking_container': true,\r\n                            'next': this.state.next,\r\n                            'back': this.state.back\r\n                        }\r\n                    )}>\r\n                        <div className=\"booking_list\">\r\n                            <ConfirmInfo values={values} />\r\n                        </div>\r\n                        <BookingsSideBar events={this.state.events} total_cost={this.state.total_cost} nextStep={this.nextStep} prevStep={this.prevStep} includeGas>\r\n                            <BookingList booking={this.state.events} readOnly={true} />\r\n                            <TotalBtns>\r\n                                <button className=\"btn checkout_btn\" onClick={this.nextStep} disabled={!this.state.isValidPersonalInfo || !this.state.isValidResidenceInfo}>Confirm & Pay</button>\r\n                                <a href=\" #\" className=\"btn checkout_btn see_more\" onClick={this.prevStep}>Back</a>\r\n                            </TotalBtns>\r\n                        </BookingsSideBar>\r\n                    </section>\r\n                )\r\n            case 5:\r\n                return (\r\n                    <section className={classNames(\r\n                        {\r\n                            'booking_container': true,\r\n                            'next': this.state.next,\r\n                            'back': this.state.back\r\n                        }\r\n                    )}>\r\n                        <div className=\"booking_list\">\r\n                            {/* <Payment firstName={firstName} lastName={lastName} handleChange={this.handleChange}></Payment> */}\r\n                            <StoreCheckout values={values} />\r\n                        </div>\r\n                        <BookingsSideBar bg_color=\"#f3f4f6\" events={this.state.events} total_cost={this.state.total_cost} nextStep={this.nextStep} prevStep={this.prevStep} includeGas>\r\n                            <TotalBtns>\r\n                                <PayMethodsInfo />\r\n                            </TotalBtns>\r\n                        </BookingsSideBar>\r\n                    </section>\r\n                )\r\n            default: return;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BookingPage;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport MainNavigation from './components/Navigation/MainNavigation';\r\n\r\nimport { StripeProvider } from 'react-stripe-elements';\r\n\r\nimport AuthPage from './pages/auth/Auth';\r\nimport EventsPage from './pages/events/Events';\r\nimport BookingPage from './pages/bookings/Bookings';\r\nimport AuthContext from '../src/context/auth-context';\r\n\r\nimport './App.scss';\r\nconst API_URL = window.location.hostname === 'localhost1' ? 'http://localhost:4000' : 'https://6uu2upeg5a.execute-api.eu-west-2.amazonaws.com/dev'\r\nconst STRIPE_PUBLISH_KEY = 'pk_test_4GBYsitSDwJ20srHk9Qr0F8q00LKrBd3gE'\r\nconst jwtToken = new RegExp(/(\"(\\\\.|[^\"])*\"|\\[|\\]|,|\\d+|\\{|\\}|[a-zA-Z0-9_]+)/g)\r\nfunction setCookie(name, value, options = {}) {\r\n\r\n  options = {\r\n    path: '/',\r\n    ...options\r\n  };\r\n\r\n  if (options.expires && options.expires.toUTCString) {\r\n    options.expires = options.expires.toUTCString();\r\n  }\r\n\r\n  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n  for (let optionKey in options) {\r\n    updatedCookie += \"; \" + optionKey;\r\n    let optionValue = options[optionKey];\r\n    if (optionValue !== true) {\r\n      updatedCookie += \"=\" + optionValue;\r\n    }\r\n  }\r\n  console.log('======== UPDATED COOKIE ===========')\r\n  console.log(updatedCookie)\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nfunction deleteCookie(name) {\r\n  setCookie(name, \"\", {\r\n    'max-age': -1\r\n  })\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    token: undefined,\r\n    isAdmin: false,\r\n    userId: null\r\n  }\r\n\r\n  getUser = (idToken) => {\r\n    const userPayload = idToken.match(jwtToken)[1];\r\n    let user = JSON.parse(atob(userPayload))\r\n    user.isAdmin = user['cognito:groups'][0] === 'admin'\r\n    return user\r\n  }\r\n\r\n  login = (idToken) => {\r\n    const user = this.getUser(idToken)\r\n    this.setState({ token: idToken, userId: user.sub, isAdmin: user.isAdmin })\r\n    localStorage.setItem('token', idToken)\r\n  }\r\n\r\n  logout = () => {\r\n    const requestBody = {\r\n      query:`\r\n        mutation {\r\n          logout\r\n        }`\r\n    }\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Cookie': `${document.cookie}`,\r\n      },\r\n      credentials: \"include\"\r\n    })\r\n      .then(res => {\r\n          if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error('Failed!');\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(({ data: { logout } }) => {\r\n          if (logout || logout === null) {\r\n            this.setState({ token: null, userId: null })\r\n            localStorage.removeItem('token')\r\n            deleteCookie('access-token')\r\n            deleteCookie('refresh-token')\r\n          }\r\n      })\r\n      .catch(err => {\r\n        console.log('FAILED')\r\n        console.log(err)\r\n      })\r\n}\r\n\r\n  componentDidMount() {\r\n    const idToken = localStorage.getItem('token')\r\n    if (idToken) {\r\n      const user = this.getUser(idToken)\r\n      this.setState({ token: idToken, userId: user.sub, isAdmin: user.isAdmin })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <StripeProvider apiKey={STRIPE_PUBLISH_KEY}>\r\n        <BrowserRouter>\r\n          <React.Fragment>\r\n            <AuthContext.Provider value={{\r\n              token: this.state.token,\r\n              userId: this.state.userId,\r\n              isAdmin: this.state.isAdmin,\r\n              login: this.login,\r\n              logout: this.logout,\r\n              hostname: API_URL,\r\n              stripe_pub_key: STRIPE_PUBLISH_KEY\r\n            }}>\r\n              <MainNavigation />\r\n              <main className=\"main-content\">\r\n                <Switch>\r\n                  {!this.state.token && <Redirect from=\"/bookings\" to=\"/auth\" exact />}\r\n                  {<Redirect from=\"/\" to=\"/events\" exact />}\r\n                  {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\r\n                  {this.state.token && <Redirect from=\"/auth\" to=\"/events\" exact />}\r\n                  {!this.state.token && (\r\n                    <Route path=\"/auth\" component={AuthPage} />\r\n                  )}\r\n                  <Route path=\"/events\" component={EventsPage} />\r\n                  {/* <Route path=\"/hotels\" component={HotelsPage} /> */}\r\n                  {this.state.token && (\r\n                    <Route path=\"/bookings\" component={BookingPage} />\r\n                  )}\r\n                  {!this.state.token && <Redirect to=\"/auth\" exact />}\r\n                </Switch>\r\n              </main>\r\n            </AuthContext.Provider>\r\n          </React.Fragment>\r\n        </BrowserRouter>\r\n      </StripeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/initPointIcon.5221c1ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointIcon.7c9810df.svg\";","module.exports = __webpack_public_path__ + \"static/media/t2.c2210c6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/t1.f06e4f93.jpg\";","module.exports = __webpack_public_path__ + \"static/media/t3.95688681.jpg\";"],"sourceRoot":""}